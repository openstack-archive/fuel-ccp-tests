<testsuites errors="0" failures="133" tests="1685" time="0.0"><testsuite errors="0" failures="133" name="tempest" skipped="676" tests="1685" time="0"><testcase name="tempest.api.compute.servers.test_create_server.ServersTestJSON.test_verify_created_server_vcpus"><failure message="Traceback (most recent call last):&#10;  File &quot;tempest/test.py&quot;, line 274, in setUpClass&#10;    six.reraise(etype, value, trace)&#10;  File &quot;tempest/test.py&quot;, line 262, in setUpClass&#10;    cls.setup_credentials()&#10;  File &quot;tempest/api/compute/servers/test_create_server.py&quot;, line 35, in setup_credentials&#10;    super(ServersTestJSON, cls).setup_credentials()&#10;  File &quot;tempest/api/compute/base.py&quot;, line 61, in setup_credentials&#10;    super(BaseV2ComputeTest, cls).setup_credentials()&#10;  File &quot;tempest/test.py&quot;, line 362, in setup_credentials&#10;    credential_type=credentials_type)&#10;  File &quot;tempest/test.py&quot;, line 536, in get_client_manager&#10;    creds = getattr(cred_provider, credentials_method)()&#10;  File &quot;tempest/common/dynamic_creds.py&quot;, line 303, in get_primary_creds&#10;    return self.get_credentials('primary')&#10;  File &quot;tempest/common/dynamic_creds.py&quot;, line 295, in get_credentials&#10;    credentials.tenant_id)&#10;  File &quot;tempest/common/dynamic_creds.py&quot;, line 212, in _create_network_resources&#10;    router = self._create_router(router_name, tenant_id)&#10;  File &quot;tempest/common/dynamic_creds.py&quot;, line 271, in _create_router&#10;    tenant_id=tenant_id)&#10;  File &quot;tempest/lib/services/network/routers_client.py&quot;, line 27, in create_router&#10;    return self.create_resource(uri, post_body)&#10;  File &quot;tempest/lib/services/network/base.py&quot;, line 60, in create_resource&#10;    resp, body = self.post(req_uri, req_post_data)&#10;  File &quot;tempest/lib/common/rest_client.py&quot;, line 276, in post&#10;    return self.request('POST', url, extra_headers, headers, body, chunked)&#10;  File &quot;tempest/lib/common/rest_client.py&quot;, line 665, in request&#10;    resp, resp_body)&#10;  File &quot;tempest/lib/common/rest_client.py&quot;, line 768, in _error_checker&#10;    raise exceptions.BadRequest(resp_body, resp=resp)&#10;tempest.lib.exceptions.BadRequest: Bad request&#10;Details: {u'message': u&quot;Invalid input for external_gateway_info. Reason: '' is not a valid UUID.&quot;, u'type': u'HTTPBadRequest', u'detail': u''}&#10;" type="failure" /></testcase><testcase name="tempest.api.compute.servers.test_create_server.ServersTestManualDisk.test_verify_duplicate_network_nics"><failure message="Traceback (most recent call last):&#10;  File &quot;tempest/test.py&quot;, line 274, in setUpClass&#10;    six.reraise(etype, value, trace)&#10;  File &quot;tempest/test.py&quot;, line 262, in setUpClass&#10;    cls.setup_credentials()&#10;  File &quot;tempest/api/compute/servers/test_create_server.py&quot;, line 35, in setup_credentials&#10;    super(ServersTestJSON, cls).setup_credentials()&#10;  File &quot;tempest/api/compute/base.py&quot;, line 61, in setup_credentials&#10;    super(BaseV2ComputeTest, cls).setup_credentials()&#10;  File &quot;tempest/test.py&quot;, line 362, in setup_credentials&#10;    credential_type=credentials_type)&#10;  File &quot;tempest/test.py&quot;, line 536, in get_client_manager&#10;    creds = getattr(cred_provider, credentials_method)()&#10;  File &quot;tempest/common/dynamic_creds.py&quot;, line 303, in get_primary_creds&#10;    return self.get_credentials('primary')&#10;  File &quot;tempest/common/dynamic_creds.py&quot;, line 295, in get_credentials&#10;    credentials.tenant_id)&#10;  File &quot;tempest/common/dynamic_creds.py&quot;, line 212, in _create_network_resources&#10;    router = self._create_router(router_name, tenant_id)&#10;  File &quot;tempest/common/dynamic_creds.py&quot;, line 271, in _create_router&#10;    tenant_id=tenant_id)&#10;  File &quot;tempest/lib/services/network/routers_client.py&quot;, line 27, in create_router&#10;    return self.create_resource(uri, post_body)&#10;  File &quot;tempest/lib/services/network/base.py&quot;, line 60, in create_resource&#10;    resp, body = self.post(req_uri, req_post_data)&#10;  File &quot;tempest/lib/common/rest_client.py&quot;, line 276, in post&#10;    return self.request('POST', url, extra_headers, headers, body, chunked)&#10;  File &quot;tempest/lib/common/rest_client.py&quot;, line 665, in request&#10;    resp, resp_body)&#10;  File &quot;tempest/lib/common/rest_client.py&quot;, line 768, in _error_checker&#10;    raise exceptions.BadRequest(resp_body, resp=resp)&#10;tempest.lib.exceptions.BadRequest: Bad request&#10;Details: {u'message': u&quot;Invalid input for external_gateway_info. Reason: '' is not a valid UUID.&quot;, u'type': u'HTTPBadRequest', u'detail': u''}&#10;" type="failure" /></testcase><testcase name="tempest.api.orchestration.stacks.test_resource_types.ResourceTypesTest.test_resource_type_show"><failure message="Traceback (most recent call last):&#10;  File &quot;tempest/test.py&quot;, line 274, in setUpClass&#10;    six.reraise(etype, value, trace)&#10;  File &quot;tempest/test.py&quot;, line 262, in setUpClass&#10;    cls.setup_credentials()&#10;  File &quot;tempest/api/orchestration/base.py&quot;, line 38, in setup_credentials&#10;    super(BaseOrchestrationTest, cls).setup_credentials()&#10;  File &quot;tempest/test.py&quot;, line 362, in setup_credentials&#10;    credential_type=credentials_type)&#10;  File &quot;tempest/test.py&quot;, line 536, in get_client_manager&#10;    creds = getattr(cred_provider, credentials_method)()&#10;  File &quot;tempest/common/dynamic_creds.py&quot;, line 303, in get_primary_creds&#10;    return self.get_credentials('primary')&#10;  File &quot;tempest/common/dynamic_creds.py&quot;, line 295, in get_credentials&#10;    credentials.tenant_id)&#10;  File &quot;tempest/common/dynamic_creds.py&quot;, line 212, in _create_network_resources&#10;    router = self._create_router(router_name, tenant_id)&#10;  File &quot;tempest/common/dynamic_creds.py&quot;, line 271, in _create_router&#10;    tenant_id=tenant_id)&#10;  File &quot;tempest/lib/services/network/routers_client.py&quot;, line 27, in create_router&#10;    return self.create_resource(uri, post_body)&#10;  File &quot;tempest/lib/services/network/base.py&quot;, line 60, in create_resource&#10;    resp, body = self.post(req_uri, req_post_data)&#10;  File &quot;tempest/lib/common/rest_client.py&quot;, line 276, in post&#10;    return self.request('POST', url, extra_headers, headers, body, chunked)&#10;  File &quot;tempest/lib/common/rest_client.py&quot;, line 665, in request&#10;    resp, resp_body)&#10;  File &quot;tempest/lib/common/rest_client.py&quot;, line 768, in _error_checker&#10;    raise exceptions.BadRequest(resp_body, resp=resp)&#10;tempest.lib.exceptions.BadRequest: Bad request&#10;Details: {u'message': u&quot;Invalid input for external_gateway_info. Reason: '' is not a valid UUID.&quot;, u'type': u'HTTPBadRequest', u'detail': u''}&#10;" type="failure" /></testcase><testcase name="tempest.api.compute.floating_ips.test_floating_ips_actions.FloatingIPsTestJSON.test_associate_disassociate_floating_ip"><failure message="Traceback (most recent call last):&#10;  File &quot;tempest/test.py&quot;, line 274, in setUpClass&#10;    six.reraise(etype, value, trace)&#10;  File &quot;tempest/test.py&quot;, line 262, in setUpClass&#10;    cls.setup_credentials()&#10;  File &quot;tempest/api/compute/floating_ips/base.py&quot;, line 26, in setup_credentials&#10;    super(BaseFloatingIPsTest, cls).setup_credentials()&#10;  File &quot;tempest/api/compute/base.py&quot;, line 61, in setup_credentials&#10;    super(BaseV2ComputeTest, cls).setup_credentials()&#10;  File &quot;tempest/test.py&quot;, line 362, in setup_credentials&#10;    credential_type=credentials_type)&#10;  File &quot;tempest/test.py&quot;, line 536, in get_client_manager&#10;    creds = getattr(cred_provider, credentials_method)()&#10;  File &quot;tempest/common/dynamic_creds.py&quot;, line 303, in get_primary_creds&#10;    return self.get_credentials('primary')&#10;  File &quot;tempest/common/dynamic_creds.py&quot;, line 295, in get_credentials&#10;    credentials.tenant_id)&#10;  File &quot;tempest/common/dynamic_creds.py&quot;, line 212, in _create_network_resources&#10;    router = self._create_router(router_name, tenant_id)&#10;  File &quot;tempest/common/dynamic_creds.py&quot;, line 271, in _create_router&#10;    tenant_id=tenant_id)&#10;  File &quot;tempest/lib/services/network/routers_client.py&quot;, line 27, in create_router&#10;    return self.create_resource(uri, post_body)&#10;  File &quot;tempest/lib/services/network/base.py&quot;, line 60, in create_resource&#10;    resp, body = self.post(req_uri, req_post_data)&#10;  File &quot;tempest/lib/common/rest_client.py&quot;, line 276, in post&#10;    return self.request('POST', url, extra_headers, headers, body, chunked)&#10;  File &quot;tempest/lib/common/rest_client.py&quot;, line 665, in request&#10;    resp, resp_body)&#10;  File &quot;tempest/lib/common/rest_client.py&quot;, line 768, in _error_checker&#10;    raise exceptions.BadRequest(resp_body, resp=resp)&#10;tempest.lib.exceptions.BadRequest: Bad request&#10;Details: {u'message': u&quot;Invalid input for external_gateway_info. Reason: '' is not a valid UUID.&quot;, u'type': u'HTTPBadRequest', u'detail': u''}&#10;" type="failure" /></testcase><testcase name="tempest.api.network.test_floating_ips_negative.FloatingIPNegativeTestJSON.test_associate_floatingip_port_ext_net_unreachable"><failure message="Traceback (most recent call last):&#10;  File &quot;tempest/api/network/test_floating_ips_negative.py&quot;, line 76, in test_associate_floatingip_port_ext_net_unreachable&#10;    floating_network_id=self.ext_net_id)&#10;  File &quot;tempest/lib/services/network/floating_ips_client.py&quot;, line 30, in create_floatingip&#10;    return self.create_resource(uri, post_data)&#10;  File &quot;tempest/lib/services/network/base.py&quot;, line 60, in create_resource&#10;    resp, body = self.post(req_uri, req_post_data)&#10;  File &quot;tempest/lib/common/rest_client.py&quot;, line 276, in post&#10;    return self.request('POST', url, extra_headers, headers, body, chunked)&#10;  File &quot;tempest/lib/common/rest_client.py&quot;, line 665, in request&#10;    resp, resp_body)&#10;  File &quot;tempest/lib/common/rest_client.py&quot;, line 768, in _error_checker&#10;    raise exceptions.BadRequest(resp_body, resp=resp)&#10;tempest.lib.exceptions.BadRequest: Bad request&#10;Details: {u'message': u&quot;Invalid input for floating_network_id. Reason: '' is not a valid UUID.&quot;, u'type': u'HTTPBadRequest', u'detail': u''}&#10;" type="failure" /></testcase><testcase name="tempest.api.orchestration.stacks.test_non_empty_stack.StacksTestJSON.test_resource_metadata"><failure message="Traceback (most recent call last):&#10;  File &quot;tempest/test.py&quot;, line 274, in setUpClass&#10;    six.reraise(etype, value, trace)&#10;  File &quot;tempest/test.py&quot;, line 262, in setUpClass&#10;    cls.setup_credentials()&#10;  File &quot;tempest/api/orchestration/base.py&quot;, line 38, in setup_credentials&#10;    super(BaseOrchestrationTest, cls).setup_credentials()&#10;  File &quot;tempest/test.py&quot;, line 362, in setup_credentials&#10;    credential_type=credentials_type)&#10;  File &quot;tempest/test.py&quot;, line 536, in get_client_manager&#10;    creds = getattr(cred_provider, credentials_method)()&#10;  File &quot;tempest/common/dynamic_creds.py&quot;, line 303, in get_primary_creds&#10;    return self.get_credentials('primary')&#10;  File &quot;tempest/common/dynamic_creds.py&quot;, line 295, in get_credentials&#10;    credentials.tenant_id)&#10;  File &quot;tempest/common/dynamic_creds.py&quot;, line 212, in _create_network_resources&#10;    router = self._create_router(router_name, tenant_id)&#10;  File &quot;tempest/common/dynamic_creds.py&quot;, line 271, in _create_router&#10;    tenant_id=tenant_id)&#10;  File &quot;tempest/lib/services/network/routers_client.py&quot;, line 27, in create_router&#10;    return self.create_resource(uri, post_body)&#10;  File &quot;tempest/lib/services/network/base.py&quot;, line 60, in create_resource&#10;    resp, body = self.post(req_uri, req_post_data)&#10;  File &quot;tempest/lib/common/rest_client.py&quot;, line 276, in post&#10;    return self.request('POST', url, extra_headers, headers, body, chunked)&#10;  File &quot;tempest/lib/common/rest_client.py&quot;, line 665, in request&#10;    resp, resp_body)&#10;  File &quot;tempest/lib/common/rest_client.py&quot;, line 768, in _error_checker&#10;    raise exceptions.BadRequest(resp_body, resp=resp)&#10;tempest.lib.exceptions.BadRequest: Bad request&#10;Details: {u'message': u&quot;Invalid input for external_gateway_info. Reason: '' is not a valid UUID.&quot;, u'type': u'HTTPBadRequest', u'detail': u''}&#10;" type="failure" /></testcase><testcase name="tempest.api.orchestration.stacks.test_soft_conf.TestSoftwareConfig.test_software_deployment_update_with_metadata_change"><failure message="Traceback (most recent call last):&#10;  File &quot;tempest/test.py&quot;, line 274, in setUpClass&#10;    six.reraise(etype, value, trace)&#10;  File &quot;tempest/test.py&quot;, line 262, in setUpClass&#10;    cls.setup_credentials()&#10;  File &quot;tempest/api/orchestration/base.py&quot;, line 38, in setup_credentials&#10;    super(BaseOrchestrationTest, cls).setup_credentials()&#10;  File &quot;tempest/test.py&quot;, line 362, in setup_credentials&#10;    credential_type=credentials_type)&#10;  File &quot;tempest/test.py&quot;, line 536, in get_client_manager&#10;    creds = getattr(cred_provider, credentials_method)()&#10;  File &quot;tempest/common/dynamic_creds.py&quot;, line 303, in get_primary_creds&#10;    return self.get_credentials('primary')&#10;  File &quot;tempest/common/dynamic_creds.py&quot;, line 295, in get_credentials&#10;    credentials.tenant_id)&#10;  File &quot;tempest/common/dynamic_creds.py&quot;, line 212, in _create_network_resources&#10;    router = self._create_router(router_name, tenant_id)&#10;  File &quot;tempest/common/dynamic_creds.py&quot;, line 271, in _create_router&#10;    tenant_id=tenant_id)&#10;  File &quot;tempest/lib/services/network/routers_client.py&quot;, line 27, in create_router&#10;    return self.create_resource(uri, post_body)&#10;  File &quot;tempest/lib/services/network/base.py&quot;, line 60, in create_resource&#10;    resp, body = self.post(req_uri, req_post_data)&#10;  File &quot;tempest/lib/common/rest_client.py&quot;, line 276, in post&#10;    return self.request('POST', url, extra_headers, headers, body, chunked)&#10;  File &quot;tempest/lib/common/rest_client.py&quot;, line 665, in request&#10;    resp, resp_body)&#10;  File &quot;tempest/lib/common/rest_client.py&quot;, line 768, in _error_checker&#10;    raise exceptions.BadRequest(resp_body, resp=resp)&#10;tempest.lib.exceptions.BadRequest: Bad request&#10;Details: {u'message': u&quot;Invalid input for external_gateway_info. Reason: '' is not a valid UUID.&quot;, u'type': u'HTTPBadRequest', u'detail': u''}&#10;" type="failure" /></testcase><testcase name="tempest.api.compute.floating_ips.test_floating_ips_actions_negative.FloatingIPsNegativeTestJSON.test_dissociate_nonexistent_floating_ip"><failure message="Traceback (most recent call last):&#10;  File &quot;tempest/test.py&quot;, line 274, in setUpClass&#10;    six.reraise(etype, value, trace)&#10;  File &quot;tempest/test.py&quot;, line 262, in setUpClass&#10;    cls.setup_credentials()&#10;  File &quot;tempest/api/compute/floating_ips/base.py&quot;, line 26, in setup_credentials&#10;    super(BaseFloatingIPsTest, cls).setup_credentials()&#10;  File &quot;tempest/api/compute/base.py&quot;, line 61, in setup_credentials&#10;    super(BaseV2ComputeTest, cls).setup_credentials()&#10;  File &quot;tempest/test.py&quot;, line 362, in setup_credentials&#10;    credential_type=credentials_type)&#10;  File &quot;tempest/test.py&quot;, line 536, in get_client_manager&#10;    creds = getattr(cred_provider, credentials_method)()&#10;  File &quot;tempest/common/dynamic_creds.py&quot;, line 303, in get_primary_creds&#10;    return self.get_credentials('primary')&#10;  File &quot;tempest/common/dynamic_creds.py&quot;, line 295, in get_credentials&#10;    credentials.tenant_id)&#10;  File &quot;tempest/common/dynamic_creds.py&quot;, line 212, in _create_network_resources&#10;    router = self._create_router(router_name, tenant_id)&#10;  File &quot;tempest/common/dynamic_creds.py&quot;, line 271, in _create_router&#10;    tenant_id=tenant_id)&#10;  File &quot;tempest/lib/services/network/routers_client.py&quot;, line 27, in create_router&#10;    return self.create_resource(uri, post_body)&#10;  File &quot;tempest/lib/services/network/base.py&quot;, line 60, in create_resource&#10;    resp, body = self.post(req_uri, req_post_data)&#10;  File &quot;tempest/lib/common/rest_client.py&quot;, line 276, in post&#10;    return self.request('POST', url, extra_headers, headers, body, chunked)&#10;  File &quot;tempest/lib/common/rest_client.py&quot;, line 665, in request&#10;    resp, resp_body)&#10;  File &quot;tempest/lib/common/rest_client.py&quot;, line 768, in _error_checker&#10;    raise exceptions.BadRequest(resp_body, resp=resp)&#10;tempest.lib.exceptions.BadRequest: Bad request&#10;Details: {u'message': u&quot;Invalid input for external_gateway_info. Reason: '' is not a valid UUID.&quot;, u'type': u'HTTPBadRequest', u'detail': u''}&#10;" type="failure" /></testcase><testcase name="tempest.api.network.test_routers.RoutersIpV6Test.test_update_router_set_gateway_with_snat_explicit"><failure message="Traceback (most recent call last):&#10;  File &quot;tempest/test.py&quot;, line 152, in wrapper&#10;    return func(*func_args, **func_kwargs)&#10;  File &quot;tempest/api/network/test_routers.py&quot;, line 220, in test_update_router_set_gateway_with_snat_explicit&#10;    'enable_snat': True})&#10;  File &quot;tempest/lib/services/network/routers_client.py&quot;, line 38, in update_router&#10;    return self.update_resource(uri, update_body)&#10;  File &quot;tempest/lib/services/network/base.py&quot;, line 74, in update_resource&#10;    resp, body = self.put(req_uri, req_post_data)&#10;  File &quot;tempest/lib/common/rest_client.py&quot;, line 340, in put&#10;    return self.request('PUT', url, extra_headers, headers, body, chunked)&#10;  File &quot;tempest/lib/common/rest_client.py&quot;, line 665, in request&#10;    resp, resp_body)&#10;  File &quot;tempest/lib/common/rest_client.py&quot;, line 768, in _error_checker&#10;    raise exceptions.BadRequest(resp_body, resp=resp)&#10;tempest.lib.exceptions.BadRequest: Bad request&#10;Details: {u'message': u&quot;Invalid input for external_gateway_info. Reason: '' is not a valid UUID.&quot;, u'type': u'HTTPBadRequest', u'detail': u''}&#10;" type="failure" /></testcase><testcase name="tempest.api.network.test_routers.RoutersTest.test_create_show_list_update_delete_router"><failure message="Traceback (most recent call last):&#10;  File &quot;tempest/api/network/test_routers.py&quot;, line 58, in test_create_show_list_update_delete_router&#10;    admin_state_up=False)&#10;  File &quot;tempest/lib/services/network/routers_client.py&quot;, line 27, in create_router&#10;    return self.create_resource(uri, post_body)&#10;  File &quot;tempest/lib/services/network/base.py&quot;, line 60, in create_resource&#10;    resp, body = self.post(req_uri, req_post_data)&#10;  File &quot;tempest/lib/common/rest_client.py&quot;, line 276, in post&#10;    return self.request('POST', url, extra_headers, headers, body, chunked)&#10;  File &quot;tempest/lib/common/rest_client.py&quot;, line 665, in request&#10;    resp, resp_body)&#10;  File &quot;tempest/lib/common/rest_client.py&quot;, line 768, in _error_checker&#10;    raise exceptions.BadRequest(resp_body, resp=resp)&#10;tempest.lib.exceptions.BadRequest: Bad request&#10;Details: {u'message': u&quot;Invalid input for external_gateway_info. Reason: '' is not a valid UUID.&quot;, u'type': u'HTTPBadRequest', u'detail': u''}&#10;" type="failure" /></testcase><testcase name="tempest.api.compute.servers.test_create_server.ServersTestManualDisk.test_verify_server_details"><failure message="Traceback (most recent call last):&#10;  File &quot;tempest/test.py&quot;, line 274, in setUpClass&#10;    six.reraise(etype, value, trace)&#10;  File &quot;tempest/test.py&quot;, line 262, in setUpClass&#10;    cls.setup_credentials()&#10;  File &quot;tempest/api/compute/servers/test_create_server.py&quot;, line 35, in setup_credentials&#10;    super(ServersTestJSON, cls).setup_credentials()&#10;  File &quot;tempest/api/compute/base.py&quot;, line 61, in setup_credentials&#10;    super(BaseV2ComputeTest, cls).setup_credentials()&#10;  File &quot;tempest/test.py&quot;, line 362, in setup_credentials&#10;    credential_type=credentials_type)&#10;  File &quot;tempest/test.py&quot;, line 536, in get_client_manager&#10;    creds = getattr(cred_provider, credentials_method)()&#10;  File &quot;tempest/common/dynamic_creds.py&quot;, line 303, in get_primary_creds&#10;    return self.get_credentials('primary')&#10;  File &quot;tempest/common/dynamic_creds.py&quot;, line 295, in get_credentials&#10;    credentials.tenant_id)&#10;  File &quot;tempest/common/dynamic_creds.py&quot;, line 212, in _create_network_resources&#10;    router = self._create_router(router_name, tenant_id)&#10;  File &quot;tempest/common/dynamic_creds.py&quot;, line 271, in _create_router&#10;    tenant_id=tenant_id)&#10;  File &quot;tempest/lib/services/network/routers_client.py&quot;, line 27, in create_router&#10;    return self.create_resource(uri, post_body)&#10;  File &quot;tempest/lib/services/network/base.py&quot;, line 60, in create_resource&#10;    resp, body = self.post(req_uri, req_post_data)&#10;  File &quot;tempest/lib/common/rest_client.py&quot;, line 276, in post&#10;    return self.request('POST', url, extra_headers, headers, body, chunked)&#10;  File &quot;tempest/lib/common/rest_client.py&quot;, line 665, in request&#10;    resp, resp_body)&#10;  File &quot;tempest/lib/common/rest_client.py&quot;, line 768, in _error_checker&#10;    raise exceptions.BadRequest(resp_body, resp=resp)&#10;tempest.lib.exceptions.BadRequest: Bad request&#10;Details: {u'message': u&quot;Invalid input for external_gateway_info. Reason: '' is not a valid UUID.&quot;, u'type': u'HTTPBadRequest', u'detail': u''}&#10;" type="failure" /></testcase><testcase name="tempest.api.compute.servers.test_server_rescue.ServerRescueTestJSON.test_rescue_unrescue_instance"><failure message="Traceback (most recent call last):&#10;  File &quot;tempest/test.py&quot;, line 274, in setUpClass&#10;    six.reraise(etype, value, trace)&#10;  File &quot;tempest/test.py&quot;, line 262, in setUpClass&#10;    cls.setup_credentials()&#10;  File &quot;tempest/api/compute/servers/test_server_rescue.py&quot;, line 37, in setup_credentials&#10;    super(ServerRescueTestJSON, cls).setup_credentials()&#10;  File &quot;tempest/api/compute/base.py&quot;, line 61, in setup_credentials&#10;    super(BaseV2ComputeTest, cls).setup_credentials()&#10;  File &quot;tempest/test.py&quot;, line 362, in setup_credentials&#10;    credential_type=credentials_type)&#10;  File &quot;tempest/test.py&quot;, line 536, in get_client_manager&#10;    creds = getattr(cred_provider, credentials_method)()&#10;  File &quot;tempest/common/dynamic_creds.py&quot;, line 303, in get_primary_creds&#10;    return self.get_credentials('primary')&#10;  File &quot;tempest/common/dynamic_creds.py&quot;, line 295, in get_credentials&#10;    credentials.tenant_id)&#10;  File &quot;tempest/common/dynamic_creds.py&quot;, line 212, in _create_network_resources&#10;    router = self._create_router(router_name, tenant_id)&#10;  File &quot;tempest/common/dynamic_creds.py&quot;, line 271, in _create_router&#10;    tenant_id=tenant_id)&#10;  File &quot;tempest/lib/services/network/routers_client.py&quot;, line 27, in create_router&#10;    return self.create_resource(uri, post_body)&#10;  File &quot;tempest/lib/services/network/base.py&quot;, line 60, in create_resource&#10;    resp, body = self.post(req_uri, req_post_data)&#10;  File &quot;tempest/lib/common/rest_client.py&quot;, line 276, in post&#10;    return self.request('POST', url, extra_headers, headers, body, chunked)&#10;  File &quot;tempest/lib/common/rest_client.py&quot;, line 665, in request&#10;    resp, resp_body)&#10;  File &quot;tempest/lib/common/rest_client.py&quot;, line 768, in _error_checker&#10;    raise exceptions.BadRequest(resp_body, resp=resp)&#10;tempest.lib.exceptions.BadRequest: Bad request&#10;Details: {u'message': u&quot;Invalid input for external_gateway_info. Reason: '' is not a valid UUID.&quot;, u'type': u'HTTPBadRequest', u'detail': u''}&#10;" type="failure" /></testcase><testcase name="tempest.api.network.test_floating_ips.FloatingIPTestJSON.test_create_update_floatingip_with_port_multiple_ip_address"><failure message="Traceback (most recent call last):&#10;  File &quot;tempest/api/network/test_floating_ips.py&quot;, line 210, in test_create_update_floatingip_with_port_multiple_ip_address&#10;    fixed_ip_address=list_ips[0])&#10;  File &quot;tempest/lib/services/network/floating_ips_client.py&quot;, line 30, in create_floatingip&#10;    return self.create_resource(uri, post_data)&#10;  File &quot;tempest/lib/services/network/base.py&quot;, line 60, in create_resource&#10;    resp, body = self.post(req_uri, req_post_data)&#10;  File &quot;tempest/lib/common/rest_client.py&quot;, line 276, in post&#10;    return self.request('POST', url, extra_headers, headers, body, chunked)&#10;  File &quot;tempest/lib/common/rest_client.py&quot;, line 665, in request&#10;    resp, resp_body)&#10;  File &quot;tempest/lib/common/rest_client.py&quot;, line 768, in _error_checker&#10;    raise exceptions.BadRequest(resp_body, resp=resp)&#10;tempest.lib.exceptions.BadRequest: Bad request&#10;Details: {u'message': u&quot;Invalid input for floating_network_id. Reason: '' is not a valid UUID.&quot;, u'type': u'HTTPBadRequest', u'detail': u''}&#10;" type="failure" /></testcase><testcase name="tempest.api.orchestration.stacks.test_soft_conf.TestSoftwareConfig.test_software_deployment_create_validate"><failure message="Traceback (most recent call last):&#10;  File &quot;tempest/test.py&quot;, line 274, in setUpClass&#10;    six.reraise(etype, value, trace)&#10;  File &quot;tempest/test.py&quot;, line 262, in setUpClass&#10;    cls.setup_credentials()&#10;  File &quot;tempest/api/orchestration/base.py&quot;, line 38, in setup_credentials&#10;    super(BaseOrchestrationTest, cls).setup_credentials()&#10;  File &quot;tempest/test.py&quot;, line 362, in setup_credentials&#10;    credential_type=credentials_type)&#10;  File &quot;tempest/test.py&quot;, line 536, in get_client_manager&#10;    creds = getattr(cred_provider, credentials_method)()&#10;  File &quot;tempest/common/dynamic_creds.py&quot;, line 303, in get_primary_creds&#10;    return self.get_credentials('primary')&#10;  File &quot;tempest/common/dynamic_creds.py&quot;, line 295, in get_credentials&#10;    credentials.tenant_id)&#10;  File &quot;tempest/common/dynamic_creds.py&quot;, line 212, in _create_network_resources&#10;    router = self._create_router(router_name, tenant_id)&#10;  File &quot;tempest/common/dynamic_creds.py&quot;, line 271, in _create_router&#10;    tenant_id=tenant_id)&#10;  File &quot;tempest/lib/services/network/routers_client.py&quot;, line 27, in create_router&#10;    return self.create_resource(uri, post_body)&#10;  File &quot;tempest/lib/services/network/base.py&quot;, line 60, in create_resource&#10;    resp, body = self.post(req_uri, req_post_data)&#10;  File &quot;tempest/lib/common/rest_client.py&quot;, line 276, in post&#10;    return self.request('POST', url, extra_headers, headers, body, chunked)&#10;  File &quot;tempest/lib/common/rest_client.py&quot;, line 665, in request&#10;    resp, resp_body)&#10;  File &quot;tempest/lib/common/rest_client.py&quot;, line 768, in _error_checker&#10;    raise exceptions.BadRequest(resp_body, resp=resp)&#10;tempest.lib.exceptions.BadRequest: Bad request&#10;Details: {u'message': u&quot;Invalid input for external_gateway_info. Reason: '' is not a valid UUID.&quot;, u'type': u'HTTPBadRequest', u'detail': u''}&#10;" type="failure" /></testcase><testcase name="tempest.api.network.test_floating_ips.FloatingIPTestJSON.test_create_floating_ip_specifying_a_fixed_ip_address"><failure message="Traceback (most recent call last):&#10;  File &quot;tempest/api/network/test_floating_ips.py&quot;, line 179, in test_create_floating_ip_specifying_a_fixed_ip_address&#10;    fixed_ip_address=self.ports[1]['fixed_ips'][0]['ip_address'])&#10;  File &quot;tempest/lib/services/network/floating_ips_client.py&quot;, line 30, in create_floatingip&#10;    return self.create_resource(uri, post_data)&#10;  File &quot;tempest/lib/services/network/base.py&quot;, line 60, in create_resource&#10;    resp, body = self.post(req_uri, req_post_data)&#10;  File &quot;tempest/lib/common/rest_client.py&quot;, line 276, in post&#10;    return self.request('POST', url, extra_headers, headers, body, chunked)&#10;  File &quot;tempest/lib/common/rest_client.py&quot;, line 665, in request&#10;    resp, resp_body)&#10;  File &quot;tempest/lib/common/rest_client.py&quot;, line 768, in _error_checker&#10;    raise exceptions.BadRequest(resp_body, resp=resp)&#10;tempest.lib.exceptions.BadRequest: Bad request&#10;Details: {u'message': u&quot;Invalid input for floating_network_id. Reason: '' is not a valid UUID.&quot;, u'type': u'HTTPBadRequest', u'detail': u''}&#10;" type="failure" /></testcase><testcase name="tempest.api.compute.servers.test_server_rescue_negative.ServerRescueNegativeTestJSON.test_rescued_vm_rebuild"><failure message="Traceback (most recent call last):&#10;  File &quot;tempest/test.py&quot;, line 274, in setUpClass&#10;    six.reraise(etype, value, trace)&#10;  File &quot;tempest/test.py&quot;, line 262, in setUpClass&#10;    cls.setup_credentials()&#10;  File &quot;tempest/api/compute/servers/test_server_rescue_negative.py&quot;, line 40, in setup_credentials&#10;    super(ServerRescueNegativeTestJSON, cls).setup_credentials()&#10;  File &quot;tempest/api/compute/base.py&quot;, line 61, in setup_credentials&#10;    super(BaseV2ComputeTest, cls).setup_credentials()&#10;  File &quot;tempest/test.py&quot;, line 362, in setup_credentials&#10;    credential_type=credentials_type)&#10;  File &quot;tempest/test.py&quot;, line 536, in get_client_manager&#10;    creds = getattr(cred_provider, credentials_method)()&#10;  File &quot;tempest/common/dynamic_creds.py&quot;, line 303, in get_primary_creds&#10;    return self.get_credentials('primary')&#10;  File &quot;tempest/common/dynamic_creds.py&quot;, line 295, in get_credentials&#10;    credentials.tenant_id)&#10;  File &quot;tempest/common/dynamic_creds.py&quot;, line 212, in _create_network_resources&#10;    router = self._create_router(router_name, tenant_id)&#10;  File &quot;tempest/common/dynamic_creds.py&quot;, line 271, in _create_router&#10;    tenant_id=tenant_id)&#10;  File &quot;tempest/lib/services/network/routers_client.py&quot;, line 27, in create_router&#10;    return self.create_resource(uri, post_body)&#10;  File &quot;tempest/lib/services/network/base.py&quot;, line 60, in create_resource&#10;    resp, body = self.post(req_uri, req_post_data)&#10;  File &quot;tempest/lib/common/rest_client.py&quot;, line 276, in post&#10;    return self.request('POST', url, extra_headers, headers, body, chunked)&#10;  File &quot;tempest/lib/common/rest_client.py&quot;, line 665, in request&#10;    resp, resp_body)&#10;  File &quot;tempest/lib/common/rest_client.py&quot;, line 768, in _error_checker&#10;    raise exceptions.BadRequest(resp_body, resp=resp)&#10;tempest.lib.exceptions.BadRequest: Bad request&#10;Details: {u'message': u&quot;Invalid input for external_gateway_info. Reason: '' is not a valid UUID.&quot;, u'type': u'HTTPBadRequest', u'detail': u''}&#10;" type="failure" /></testcase><testcase name="tempest.api.compute.servers.test_server_rescue.ServerRescueTestJSON.test_rescued_vm_associate_dissociate_floating_ip"><failure message="Traceback (most recent call last):&#10;  File &quot;tempest/test.py&quot;, line 274, in setUpClass&#10;    six.reraise(etype, value, trace)&#10;  File &quot;tempest/test.py&quot;, line 262, in setUpClass&#10;    cls.setup_credentials()&#10;  File &quot;tempest/api/compute/servers/test_server_rescue.py&quot;, line 37, in setup_credentials&#10;    super(ServerRescueTestJSON, cls).setup_credentials()&#10;  File &quot;tempest/api/compute/base.py&quot;, line 61, in setup_credentials&#10;    super(BaseV2ComputeTest, cls).setup_credentials()&#10;  File &quot;tempest/test.py&quot;, line 362, in setup_credentials&#10;    credential_type=credentials_type)&#10;  File &quot;tempest/test.py&quot;, line 536, in get_client_manager&#10;    creds = getattr(cred_provider, credentials_method)()&#10;  File &quot;tempest/common/dynamic_creds.py&quot;, line 303, in get_primary_creds&#10;    return self.get_credentials('primary')&#10;  File &quot;tempest/common/dynamic_creds.py&quot;, line 295, in get_credentials&#10;    credentials.tenant_id)&#10;  File &quot;tempest/common/dynamic_creds.py&quot;, line 212, in _create_network_resources&#10;    router = self._create_router(router_name, tenant_id)&#10;  File &quot;tempest/common/dynamic_creds.py&quot;, line 271, in _create_router&#10;    tenant_id=tenant_id)&#10;  File &quot;tempest/lib/services/network/routers_client.py&quot;, line 27, in create_router&#10;    return self.create_resource(uri, post_body)&#10;  File &quot;tempest/lib/services/network/base.py&quot;, line 60, in create_resource&#10;    resp, body = self.post(req_uri, req_post_data)&#10;  File &quot;tempest/lib/common/rest_client.py&quot;, line 276, in post&#10;    return self.request('POST', url, extra_headers, headers, body, chunked)&#10;  File &quot;tempest/lib/common/rest_client.py&quot;, line 665, in request&#10;    resp, resp_body)&#10;  File &quot;tempest/lib/common/rest_client.py&quot;, line 768, in _error_checker&#10;    raise exceptions.BadRequest(resp_body, resp=resp)&#10;tempest.lib.exceptions.BadRequest: Bad request&#10;Details: {u'message': u&quot;Invalid input for external_gateway_info. Reason: '' is not a valid UUID.&quot;, u'type': u'HTTPBadRequest', u'detail': u''}&#10;" type="failure" /></testcase><testcase name="tempest.api.compute.floating_ips.test_list_floating_ips.FloatingIPDetailsTestJSON.test_list_floating_ips"><failure message="Traceback (most recent call last):&#10;  File &quot;tempest/test.py&quot;, line 274, in setUpClass&#10;    six.reraise(etype, value, trace)&#10;  File &quot;tempest/test.py&quot;, line 267, in setUpClass&#10;    cls.resource_setup()&#10;  File &quot;tempest/api/compute/floating_ips/test_list_floating_ips.py&quot;, line 38, in resource_setup&#10;    pool=CONF.network.floating_network_name)['floating_ip']&#10;  File &quot;tempest/lib/services/compute/floating_ips_client.py&quot;, line 62, in create_floating_ip&#10;    resp, body = self.post(url, post_body)&#10;  File &quot;tempest/lib/common/rest_client.py&quot;, line 276, in post&#10;    return self.request('POST', url, extra_headers, headers, body, chunked)&#10;  File &quot;tempest/lib/services/compute/base_compute_client.py&quot;, line 48, in request&#10;    method, url, extra_headers, headers, body, chunked)&#10;  File &quot;tempest/lib/common/rest_client.py&quot;, line 665, in request&#10;    resp, resp_body)&#10;  File &quot;tempest/lib/common/rest_client.py&quot;, line 763, in _error_checker&#10;    raise exceptions.NotFound(resp_body, resp=resp)&#10;tempest.lib.exceptions.NotFound: Object not found&#10;Details: {u'message': u'Floating IP pool not found.', u'code': 404}&#10;" type="failure" /></testcase><testcase name="tempest.api.compute.servers.test_server_actions.ServerActionsTestJSON.test_get_console_output_server_id_in_shutoff_status"><failure message="Traceback (most recent call last):&#10;  File &quot;tempest/test.py&quot;, line 274, in setUpClass&#10;    six.reraise(etype, value, trace)&#10;  File &quot;tempest/test.py&quot;, line 262, in setUpClass&#10;    cls.setup_credentials()&#10;  File &quot;tempest/api/compute/servers/test_server_actions.py&quot;, line 66, in setup_credentials&#10;    super(ServerActionsTestJSON, cls).setup_credentials()&#10;  File &quot;tempest/api/compute/base.py&quot;, line 61, in setup_credentials&#10;    super(BaseV2ComputeTest, cls).setup_credentials()&#10;  File &quot;tempest/test.py&quot;, line 362, in setup_credentials&#10;    credential_type=credentials_type)&#10;  File &quot;tempest/test.py&quot;, line 536, in get_client_manager&#10;    creds = getattr(cred_provider, credentials_method)()&#10;  File &quot;tempest/common/dynamic_creds.py&quot;, line 303, in get_primary_creds&#10;    return self.get_credentials('primary')&#10;  File &quot;tempest/common/dynamic_creds.py&quot;, line 295, in get_credentials&#10;    credentials.tenant_id)&#10;  File &quot;tempest/common/dynamic_creds.py&quot;, line 212, in _create_network_resources&#10;    router = self._create_router(router_name, tenant_id)&#10;  File &quot;tempest/common/dynamic_creds.py&quot;, line 271, in _create_router&#10;    tenant_id=tenant_id)&#10;  File &quot;tempest/lib/services/network/routers_client.py&quot;, line 27, in create_router&#10;    return self.create_resource(uri, post_body)&#10;  File &quot;tempest/lib/services/network/base.py&quot;, line 60, in create_resource&#10;    resp, body = self.post(req_uri, req_post_data)&#10;  File &quot;tempest/lib/common/rest_client.py&quot;, line 276, in post&#10;    return self.request('POST', url, extra_headers, headers, body, chunked)&#10;  File &quot;tempest/lib/common/rest_client.py&quot;, line 665, in request&#10;    resp, resp_body)&#10;  File &quot;tempest/lib/common/rest_client.py&quot;, line 768, in _error_checker&#10;    raise exceptions.BadRequest(resp_body, resp=resp)&#10;tempest.lib.exceptions.BadRequest: Bad request&#10;Details: {u'message': u&quot;Invalid input for external_gateway_info. Reason: '' is not a valid UUID.&quot;, u'type': u'HTTPBadRequest', u'detail': u''}&#10;" type="failure" /></testcase><testcase name="tempest.scenario.test_aggregates_basic_ops.TestAggregatesBasicOps.test_aggregate_basic_ops"><failure message="Traceback (most recent call last):&#10;  File &quot;tempest/test.py&quot;, line 274, in setUpClass&#10;    six.reraise(etype, value, trace)&#10;  File &quot;tempest/test.py&quot;, line 262, in setUpClass&#10;    cls.setup_credentials()&#10;  File &quot;tempest/test.py&quot;, line 362, in setup_credentials&#10;    credential_type=credentials_type)&#10;  File &quot;tempest/test.py&quot;, line 536, in get_client_manager&#10;    creds = getattr(cred_provider, credentials_method)()&#10;  File &quot;tempest/common/dynamic_creds.py&quot;, line 303, in get_primary_creds&#10;    return self.get_credentials('primary')&#10;  File &quot;tempest/common/dynamic_creds.py&quot;, line 295, in get_credentials&#10;    credentials.tenant_id)&#10;  File &quot;tempest/common/dynamic_creds.py&quot;, line 212, in _create_network_resources&#10;    router = self._create_router(router_name, tenant_id)&#10;  File &quot;tempest/common/dynamic_creds.py&quot;, line 271, in _create_router&#10;    tenant_id=tenant_id)&#10;  File &quot;tempest/lib/services/network/routers_client.py&quot;, line 27, in create_router&#10;    return self.create_resource(uri, post_body)&#10;  File &quot;tempest/lib/services/network/base.py&quot;, line 60, in create_resource&#10;    resp, body = self.post(req_uri, req_post_data)&#10;  File &quot;tempest/lib/common/rest_client.py&quot;, line 276, in post&#10;    return self.request('POST', url, extra_headers, headers, body, chunked)&#10;  File &quot;tempest/lib/common/rest_client.py&quot;, line 665, in request&#10;    resp, resp_body)&#10;  File &quot;tempest/lib/common/rest_client.py&quot;, line 768, in _error_checker&#10;    raise exceptions.BadRequest(resp_body, resp=resp)&#10;tempest.lib.exceptions.BadRequest: Bad request&#10;Details: {u'message': u&quot;Invalid input for external_gateway_info. Reason: '' is not a valid UUID.&quot;, u'type': u'HTTPBadRequest', u'detail': u''}&#10;" type="failure" /></testcase><testcase name="tempest.api.orchestration.stacks.test_soft_conf.TestSoftwareConfig.test_software_deployment_update_no_metadata_change"><failure message="Traceback (most recent call last):&#10;  File &quot;tempest/test.py&quot;, line 274, in setUpClass&#10;    six.reraise(etype, value, trace)&#10;  File &quot;tempest/test.py&quot;, line 262, in setUpClass&#10;    cls.setup_credentials()&#10;  File &quot;tempest/api/orchestration/base.py&quot;, line 38, in setup_credentials&#10;    super(BaseOrchestrationTest, cls).setup_credentials()&#10;  File &quot;tempest/test.py&quot;, line 362, in setup_credentials&#10;    credential_type=credentials_type)&#10;  File &quot;tempest/test.py&quot;, line 536, in get_client_manager&#10;    creds = getattr(cred_provider, credentials_method)()&#10;  File &quot;tempest/common/dynamic_creds.py&quot;, line 303, in get_primary_creds&#10;    return self.get_credentials('primary')&#10;  File &quot;tempest/common/dynamic_creds.py&quot;, line 295, in get_credentials&#10;    credentials.tenant_id)&#10;  File &quot;tempest/common/dynamic_creds.py&quot;, line 212, in _create_network_resources&#10;    router = self._create_router(router_name, tenant_id)&#10;  File &quot;tempest/common/dynamic_creds.py&quot;, line 271, in _create_router&#10;    tenant_id=tenant_id)&#10;  File &quot;tempest/lib/services/network/routers_client.py&quot;, line 27, in create_router&#10;    return self.create_resource(uri, post_body)&#10;  File &quot;tempest/lib/services/network/base.py&quot;, line 60, in create_resource&#10;    resp, body = self.post(req_uri, req_post_data)&#10;  File &quot;tempest/lib/common/rest_client.py&quot;, line 276, in post&#10;    return self.request('POST', url, extra_headers, headers, body, chunked)&#10;  File &quot;tempest/lib/common/rest_client.py&quot;, line 665, in request&#10;    resp, resp_body)&#10;  File &quot;tempest/lib/common/rest_client.py&quot;, line 768, in _error_checker&#10;    raise exceptions.BadRequest(resp_body, resp=resp)&#10;tempest.lib.exceptions.BadRequest: Bad request&#10;Details: {u'message': u&quot;Invalid input for external_gateway_info. Reason: '' is not a valid UUID.&quot;, u'type': u'HTTPBadRequest', u'detail': u''}&#10;" type="failure" /></testcase><testcase name="tempest.api.compute.servers.test_create_server.ServersTestJSON.test_list_servers_with_detail"><failure message="Traceback (most recent call last):&#10;  File &quot;tempest/test.py&quot;, line 274, in setUpClass&#10;    six.reraise(etype, value, trace)&#10;  File &quot;tempest/test.py&quot;, line 262, in setUpClass&#10;    cls.setup_credentials()&#10;  File &quot;tempest/api/compute/servers/test_create_server.py&quot;, line 35, in setup_credentials&#10;    super(ServersTestJSON, cls).setup_credentials()&#10;  File &quot;tempest/api/compute/base.py&quot;, line 61, in setup_credentials&#10;    super(BaseV2ComputeTest, cls).setup_credentials()&#10;  File &quot;tempest/test.py&quot;, line 362, in setup_credentials&#10;    credential_type=credentials_type)&#10;  File &quot;tempest/test.py&quot;, line 536, in get_client_manager&#10;    creds = getattr(cred_provider, credentials_method)()&#10;  File &quot;tempest/common/dynamic_creds.py&quot;, line 303, in get_primary_creds&#10;    return self.get_credentials('primary')&#10;  File &quot;tempest/common/dynamic_creds.py&quot;, line 295, in get_credentials&#10;    credentials.tenant_id)&#10;  File &quot;tempest/common/dynamic_creds.py&quot;, line 212, in _create_network_resources&#10;    router = self._create_router(router_name, tenant_id)&#10;  File &quot;tempest/common/dynamic_creds.py&quot;, line 271, in _create_router&#10;    tenant_id=tenant_id)&#10;  File &quot;tempest/lib/services/network/routers_client.py&quot;, line 27, in create_router&#10;    return self.create_resource(uri, post_body)&#10;  File &quot;tempest/lib/services/network/base.py&quot;, line 60, in create_resource&#10;    resp, body = self.post(req_uri, req_post_data)&#10;  File &quot;tempest/lib/common/rest_client.py&quot;, line 276, in post&#10;    return self.request('POST', url, extra_headers, headers, body, chunked)&#10;  File &quot;tempest/lib/common/rest_client.py&quot;, line 665, in request&#10;    resp, resp_body)&#10;  File &quot;tempest/lib/common/rest_client.py&quot;, line 768, in _error_checker&#10;    raise exceptions.BadRequest(resp_body, resp=resp)&#10;tempest.lib.exceptions.BadRequest: Bad request&#10;Details: {u'message': u&quot;Invalid input for external_gateway_info. Reason: '' is not a valid UUID.&quot;, u'type': u'HTTPBadRequest', u'detail': u''}&#10;" type="failure" /></testcase><testcase name="tempest.api.network.test_floating_ips.FloatingIPTestJSON.test_floating_ip_update_different_router"><failure message="Traceback (most recent call last):&#10;  File &quot;tempest/api/network/test_floating_ips.py&quot;, line 152, in test_floating_ip_update_different_router&#10;    port_id=self.ports[1]['id'])&#10;  File &quot;tempest/lib/services/network/floating_ips_client.py&quot;, line 30, in create_floatingip&#10;    return self.create_resource(uri, post_data)&#10;  File &quot;tempest/lib/services/network/base.py&quot;, line 60, in create_resource&#10;    resp, body = self.post(req_uri, req_post_data)&#10;  File &quot;tempest/lib/common/rest_client.py&quot;, line 276, in post&#10;    return self.request('POST', url, extra_headers, headers, body, chunked)&#10;  File &quot;tempest/lib/common/rest_client.py&quot;, line 665, in request&#10;    resp, resp_body)&#10;  File &quot;tempest/lib/common/rest_client.py&quot;, line 768, in _error_checker&#10;    raise exceptions.BadRequest(resp_body, resp=resp)&#10;tempest.lib.exceptions.BadRequest: Bad request&#10;Details: {u'message': u&quot;Invalid input for floating_network_id. Reason: '' is not a valid UUID.&quot;, u'type': u'HTTPBadRequest', u'detail': u''}&#10;" type="failure" /></testcase><testcase name="tempest.api.compute.servers.test_server_rescue.ServerRescueTestJSON.test_rescued_vm_add_remove_security_group"><failure message="Traceback (most recent call last):&#10;  File &quot;tempest/test.py&quot;, line 274, in setUpClass&#10;    six.reraise(etype, value, trace)&#10;  File &quot;tempest/test.py&quot;, line 262, in setUpClass&#10;    cls.setup_credentials()&#10;  File &quot;tempest/api/compute/servers/test_server_rescue.py&quot;, line 37, in setup_credentials&#10;    super(ServerRescueTestJSON, cls).setup_credentials()&#10;  File &quot;tempest/api/compute/base.py&quot;, line 61, in setup_credentials&#10;    super(BaseV2ComputeTest, cls).setup_credentials()&#10;  File &quot;tempest/test.py&quot;, line 362, in setup_credentials&#10;    credential_type=credentials_type)&#10;  File &quot;tempest/test.py&quot;, line 536, in get_client_manager&#10;    creds = getattr(cred_provider, credentials_method)()&#10;  File &quot;tempest/common/dynamic_creds.py&quot;, line 303, in get_primary_creds&#10;    return self.get_credentials('primary')&#10;  File &quot;tempest/common/dynamic_creds.py&quot;, line 295, in get_credentials&#10;    credentials.tenant_id)&#10;  File &quot;tempest/common/dynamic_creds.py&quot;, line 212, in _create_network_resources&#10;    router = self._create_router(router_name, tenant_id)&#10;  File &quot;tempest/common/dynamic_creds.py&quot;, line 271, in _create_router&#10;    tenant_id=tenant_id)&#10;  File &quot;tempest/lib/services/network/routers_client.py&quot;, line 27, in create_router&#10;    return self.create_resource(uri, post_body)&#10;  File &quot;tempest/lib/services/network/base.py&quot;, line 60, in create_resource&#10;    resp, body = self.post(req_uri, req_post_data)&#10;  File &quot;tempest/lib/common/rest_client.py&quot;, line 276, in post&#10;    return self.request('POST', url, extra_headers, headers, body, chunked)&#10;  File &quot;tempest/lib/common/rest_client.py&quot;, line 665, in request&#10;    resp, resp_body)&#10;  File &quot;tempest/lib/common/rest_client.py&quot;, line 768, in _error_checker&#10;    raise exceptions.BadRequest(resp_body, resp=resp)&#10;tempest.lib.exceptions.BadRequest: Bad request&#10;Details: {u'message': u&quot;Invalid input for external_gateway_info. Reason: '' is not a valid UUID.&quot;, u'type': u'HTTPBadRequest', u'detail': u''}&#10;" type="failure" /></testcase><testcase name="tempest.api.network.admin.test_external_networks_negative.ExternalNetworksAdminNegativeTestJSON.test_create_port_with_precreated_floatingip_as_fixed_ip"><failure message="Traceback (most recent call last):&#10;  File &quot;tempest/api/network/admin/test_external_networks_negative.py&quot;, line 36, in test_create_port_with_precreated_floatingip_as_fixed_ip&#10;    floating_network_id=CONF.network.public_network_id)&#10;  File &quot;tempest/lib/services/network/floating_ips_client.py&quot;, line 30, in create_floatingip&#10;    return self.create_resource(uri, post_data)&#10;  File &quot;tempest/lib/services/network/base.py&quot;, line 60, in create_resource&#10;    resp, body = self.post(req_uri, req_post_data)&#10;  File &quot;tempest/lib/common/rest_client.py&quot;, line 276, in post&#10;    return self.request('POST', url, extra_headers, headers, body, chunked)&#10;  File &quot;tempest/lib/common/rest_client.py&quot;, line 665, in request&#10;    resp, resp_body)&#10;  File &quot;tempest/lib/common/rest_client.py&quot;, line 768, in _error_checker&#10;    raise exceptions.BadRequest(resp_body, resp=resp)&#10;tempest.lib.exceptions.BadRequest: Bad request&#10;Details: {u'message': u&quot;Invalid input for floating_network_id. Reason: '' is not a valid UUID.&quot;, u'type': u'HTTPBadRequest', u'detail': u''}&#10;" type="failure" /></testcase><testcase name="tempest.api.compute.servers.test_create_server.ServersTestJSON.test_list_servers"><failure message="Traceback (most recent call last):&#10;  File &quot;tempest/test.py&quot;, line 274, in setUpClass&#10;    six.reraise(etype, value, trace)&#10;  File &quot;tempest/test.py&quot;, line 262, in setUpClass&#10;    cls.setup_credentials()&#10;  File &quot;tempest/api/compute/servers/test_create_server.py&quot;, line 35, in setup_credentials&#10;    super(ServersTestJSON, cls).setup_credentials()&#10;  File &quot;tempest/api/compute/base.py&quot;, line 61, in setup_credentials&#10;    super(BaseV2ComputeTest, cls).setup_credentials()&#10;  File &quot;tempest/test.py&quot;, line 362, in setup_credentials&#10;    credential_type=credentials_type)&#10;  File &quot;tempest/test.py&quot;, line 536, in get_client_manager&#10;    creds = getattr(cred_provider, credentials_method)()&#10;  File &quot;tempest/common/dynamic_creds.py&quot;, line 303, in get_primary_creds&#10;    return self.get_credentials('primary')&#10;  File &quot;tempest/common/dynamic_creds.py&quot;, line 295, in get_credentials&#10;    credentials.tenant_id)&#10;  File &quot;tempest/common/dynamic_creds.py&quot;, line 212, in _create_network_resources&#10;    router = self._create_router(router_name, tenant_id)&#10;  File &quot;tempest/common/dynamic_creds.py&quot;, line 271, in _create_router&#10;    tenant_id=tenant_id)&#10;  File &quot;tempest/lib/services/network/routers_client.py&quot;, line 27, in create_router&#10;    return self.create_resource(uri, post_body)&#10;  File &quot;tempest/lib/services/network/base.py&quot;, line 60, in create_resource&#10;    resp, body = self.post(req_uri, req_post_data)&#10;  File &quot;tempest/lib/common/rest_client.py&quot;, line 276, in post&#10;    return self.request('POST', url, extra_headers, headers, body, chunked)&#10;  File &quot;tempest/lib/common/rest_client.py&quot;, line 665, in request&#10;    resp, resp_body)&#10;  File &quot;tempest/lib/common/rest_client.py&quot;, line 768, in _error_checker&#10;    raise exceptions.BadRequest(resp_body, resp=resp)&#10;tempest.lib.exceptions.BadRequest: Bad request&#10;Details: {u'message': u&quot;Invalid input for external_gateway_info. Reason: '' is not a valid UUID.&quot;, u'type': u'HTTPBadRequest', u'detail': u''}&#10;" type="failure" /></testcase><testcase name="tempest.api.compute.servers.test_server_actions.ServerActionsTestJSON.test_suspend_resume_server"><failure message="Traceback (most recent call last):&#10;  File &quot;tempest/test.py&quot;, line 274, in setUpClass&#10;    six.reraise(etype, value, trace)&#10;  File &quot;tempest/test.py&quot;, line 262, in setUpClass&#10;    cls.setup_credentials()&#10;  File &quot;tempest/api/compute/servers/test_server_actions.py&quot;, line 66, in setup_credentials&#10;    super(ServerActionsTestJSON, cls).setup_credentials()&#10;  File &quot;tempest/api/compute/base.py&quot;, line 61, in setup_credentials&#10;    super(BaseV2ComputeTest, cls).setup_credentials()&#10;  File &quot;tempest/test.py&quot;, line 362, in setup_credentials&#10;    credential_type=credentials_type)&#10;  File &quot;tempest/test.py&quot;, line 536, in get_client_manager&#10;    creds = getattr(cred_provider, credentials_method)()&#10;  File &quot;tempest/common/dynamic_creds.py&quot;, line 303, in get_primary_creds&#10;    return self.get_credentials('primary')&#10;  File &quot;tempest/common/dynamic_creds.py&quot;, line 295, in get_credentials&#10;    credentials.tenant_id)&#10;  File &quot;tempest/common/dynamic_creds.py&quot;, line 212, in _create_network_resources&#10;    router = self._create_router(router_name, tenant_id)&#10;  File &quot;tempest/common/dynamic_creds.py&quot;, line 271, in _create_router&#10;    tenant_id=tenant_id)&#10;  File &quot;tempest/lib/services/network/routers_client.py&quot;, line 27, in create_router&#10;    return self.create_resource(uri, post_body)&#10;  File &quot;tempest/lib/services/network/base.py&quot;, line 60, in create_resource&#10;    resp, body = self.post(req_uri, req_post_data)&#10;  File &quot;tempest/lib/common/rest_client.py&quot;, line 276, in post&#10;    return self.request('POST', url, extra_headers, headers, body, chunked)&#10;  File &quot;tempest/lib/common/rest_client.py&quot;, line 665, in request&#10;    resp, resp_body)&#10;  File &quot;tempest/lib/common/rest_client.py&quot;, line 768, in _error_checker&#10;    raise exceptions.BadRequest(resp_body, resp=resp)&#10;tempest.lib.exceptions.BadRequest: Bad request&#10;Details: {u'message': u&quot;Invalid input for external_gateway_info. Reason: '' is not a valid UUID.&quot;, u'type': u'HTTPBadRequest', u'detail': u''}&#10;" type="failure" /></testcase><testcase name="tempest.api.orchestration.stacks.test_resource_types.ResourceTypesTest.test_resource_type_template"><failure message="Traceback (most recent call last):&#10;  File &quot;tempest/test.py&quot;, line 274, in setUpClass&#10;    six.reraise(etype, value, trace)&#10;  File &quot;tempest/test.py&quot;, line 262, in setUpClass&#10;    cls.setup_credentials()&#10;  File &quot;tempest/api/orchestration/base.py&quot;, line 38, in setup_credentials&#10;    super(BaseOrchestrationTest, cls).setup_credentials()&#10;  File &quot;tempest/test.py&quot;, line 362, in setup_credentials&#10;    credential_type=credentials_type)&#10;  File &quot;tempest/test.py&quot;, line 536, in get_client_manager&#10;    creds = getattr(cred_provider, credentials_method)()&#10;  File &quot;tempest/common/dynamic_creds.py&quot;, line 303, in get_primary_creds&#10;    return self.get_credentials('primary')&#10;  File &quot;tempest/common/dynamic_creds.py&quot;, line 295, in get_credentials&#10;    credentials.tenant_id)&#10;  File &quot;tempest/common/dynamic_creds.py&quot;, line 212, in _create_network_resources&#10;    router = self._create_router(router_name, tenant_id)&#10;  File &quot;tempest/common/dynamic_creds.py&quot;, line 271, in _create_router&#10;    tenant_id=tenant_id)&#10;  File &quot;tempest/lib/services/network/routers_client.py&quot;, line 27, in create_router&#10;    return self.create_resource(uri, post_body)&#10;  File &quot;tempest/lib/services/network/base.py&quot;, line 60, in create_resource&#10;    resp, body = self.post(req_uri, req_post_data)&#10;  File &quot;tempest/lib/common/rest_client.py&quot;, line 276, in post&#10;    return self.request('POST', url, extra_headers, headers, body, chunked)&#10;  File &quot;tempest/lib/common/rest_client.py&quot;, line 665, in request&#10;    resp, resp_body)&#10;  File &quot;tempest/lib/common/rest_client.py&quot;, line 768, in _error_checker&#10;    raise exceptions.BadRequest(resp_body, resp=resp)&#10;tempest.lib.exceptions.BadRequest: Bad request&#10;Details: {u'message': u&quot;Invalid input for external_gateway_info. Reason: '' is not a valid UUID.&quot;, u'type': u'HTTPBadRequest', u'detail': u''}&#10;" type="failure" /></testcase><testcase name="tempest.api.compute.servers.test_create_server.ServersTestJSON.test_create_server_with_scheduler_hint_group"><failure message="Traceback (most recent call last):&#10;  File &quot;tempest/test.py&quot;, line 274, in setUpClass&#10;    six.reraise(etype, value, trace)&#10;  File &quot;tempest/test.py&quot;, line 262, in setUpClass&#10;    cls.setup_credentials()&#10;  File &quot;tempest/api/compute/servers/test_create_server.py&quot;, line 35, in setup_credentials&#10;    super(ServersTestJSON, cls).setup_credentials()&#10;  File &quot;tempest/api/compute/base.py&quot;, line 61, in setup_credentials&#10;    super(BaseV2ComputeTest, cls).setup_credentials()&#10;  File &quot;tempest/test.py&quot;, line 362, in setup_credentials&#10;    credential_type=credentials_type)&#10;  File &quot;tempest/test.py&quot;, line 536, in get_client_manager&#10;    creds = getattr(cred_provider, credentials_method)()&#10;  File &quot;tempest/common/dynamic_creds.py&quot;, line 303, in get_primary_creds&#10;    return self.get_credentials('primary')&#10;  File &quot;tempest/common/dynamic_creds.py&quot;, line 295, in get_credentials&#10;    credentials.tenant_id)&#10;  File &quot;tempest/common/dynamic_creds.py&quot;, line 212, in _create_network_resources&#10;    router = self._create_router(router_name, tenant_id)&#10;  File &quot;tempest/common/dynamic_creds.py&quot;, line 271, in _create_router&#10;    tenant_id=tenant_id)&#10;  File &quot;tempest/lib/services/network/routers_client.py&quot;, line 27, in create_router&#10;    return self.create_resource(uri, post_body)&#10;  File &quot;tempest/lib/services/network/base.py&quot;, line 60, in create_resource&#10;    resp, body = self.post(req_uri, req_post_data)&#10;  File &quot;tempest/lib/common/rest_client.py&quot;, line 276, in post&#10;    return self.request('POST', url, extra_headers, headers, body, chunked)&#10;  File &quot;tempest/lib/common/rest_client.py&quot;, line 665, in request&#10;    resp, resp_body)&#10;  File &quot;tempest/lib/common/rest_client.py&quot;, line 768, in _error_checker&#10;    raise exceptions.BadRequest(resp_body, resp=resp)&#10;tempest.lib.exceptions.BadRequest: Bad request&#10;Details: {u'message': u&quot;Invalid input for external_gateway_info. Reason: '' is not a valid UUID.&quot;, u'type': u'HTTPBadRequest', u'detail': u''}&#10;" type="failure" /></testcase><testcase name="tempest.api.compute.images.test_images_oneserver_negative.ImagesOneServerNegativeTestJSON.test_create_second_image_when_first_image_is_being_saved"><failure message="Traceback (most recent call last):&#10;  File &quot;tempest/test.py&quot;, line 274, in setUpClass&#10;    six.reraise(etype, value, trace)&#10;  File &quot;tempest/test.py&quot;, line 262, in setUpClass&#10;    cls.setup_credentials()&#10;  File &quot;tempest/api/compute/images/test_images_oneserver_negative.py&quot;, line 74, in setup_credentials&#10;    super(ImagesOneServerNegativeTestJSON, cls).setup_credentials()&#10;  File &quot;tempest/api/compute/base.py&quot;, line 61, in setup_credentials&#10;    super(BaseV2ComputeTest, cls).setup_credentials()&#10;  File &quot;tempest/test.py&quot;, line 362, in setup_credentials&#10;    credential_type=credentials_type)&#10;  File &quot;tempest/test.py&quot;, line 536, in get_client_manager&#10;    creds = getattr(cred_provider, credentials_method)()&#10;  File &quot;tempest/common/dynamic_creds.py&quot;, line 303, in get_primary_creds&#10;    return self.get_credentials('primary')&#10;  File &quot;tempest/common/dynamic_creds.py&quot;, line 295, in get_credentials&#10;    credentials.tenant_id)&#10;  File &quot;tempest/common/dynamic_creds.py&quot;, line 212, in _create_network_resources&#10;    router = self._create_router(router_name, tenant_id)&#10;  File &quot;tempest/common/dynamic_creds.py&quot;, line 271, in _create_router&#10;    tenant_id=tenant_id)&#10;  File &quot;tempest/lib/services/network/routers_client.py&quot;, line 27, in create_router&#10;    return self.create_resource(uri, post_body)&#10;  File &quot;tempest/lib/services/network/base.py&quot;, line 60, in create_resource&#10;    resp, body = self.post(req_uri, req_post_data)&#10;  File &quot;tempest/lib/common/rest_client.py&quot;, line 276, in post&#10;    return self.request('POST', url, extra_headers, headers, body, chunked)&#10;  File &quot;tempest/lib/common/rest_client.py&quot;, line 665, in request&#10;    resp, resp_body)&#10;  File &quot;tempest/lib/common/rest_client.py&quot;, line 768, in _error_checker&#10;    raise exceptions.BadRequest(resp_body, resp=resp)&#10;tempest.lib.exceptions.BadRequest: Bad request&#10;Details: {u'message': u&quot;Invalid input for external_gateway_info. Reason: '' is not a valid UUID.&quot;, u'type': u'HTTPBadRequest', u'detail': u''}&#10;" type="failure" /></testcase><testcase name="tempest.api.compute.servers.test_server_actions.ServerActionsTestJSON.test_pause_unpause_server"><failure message="Traceback (most recent call last):&#10;  File &quot;tempest/test.py&quot;, line 274, in setUpClass&#10;    six.reraise(etype, value, trace)&#10;  File &quot;tempest/test.py&quot;, line 262, in setUpClass&#10;    cls.setup_credentials()&#10;  File &quot;tempest/api/compute/servers/test_server_actions.py&quot;, line 66, in setup_credentials&#10;    super(ServerActionsTestJSON, cls).setup_credentials()&#10;  File &quot;tempest/api/compute/base.py&quot;, line 61, in setup_credentials&#10;    super(BaseV2ComputeTest, cls).setup_credentials()&#10;  File &quot;tempest/test.py&quot;, line 362, in setup_credentials&#10;    credential_type=credentials_type)&#10;  File &quot;tempest/test.py&quot;, line 536, in get_client_manager&#10;    creds = getattr(cred_provider, credentials_method)()&#10;  File &quot;tempest/common/dynamic_creds.py&quot;, line 303, in get_primary_creds&#10;    return self.get_credentials('primary')&#10;  File &quot;tempest/common/dynamic_creds.py&quot;, line 295, in get_credentials&#10;    credentials.tenant_id)&#10;  File &quot;tempest/common/dynamic_creds.py&quot;, line 212, in _create_network_resources&#10;    router = self._create_router(router_name, tenant_id)&#10;  File &quot;tempest/common/dynamic_creds.py&quot;, line 271, in _create_router&#10;    tenant_id=tenant_id)&#10;  File &quot;tempest/lib/services/network/routers_client.py&quot;, line 27, in create_router&#10;    return self.create_resource(uri, post_body)&#10;  File &quot;tempest/lib/services/network/base.py&quot;, line 60, in create_resource&#10;    resp, body = self.post(req_uri, req_post_data)&#10;  File &quot;tempest/lib/common/rest_client.py&quot;, line 276, in post&#10;    return self.request('POST', url, extra_headers, headers, body, chunked)&#10;  File &quot;tempest/lib/common/rest_client.py&quot;, line 665, in request&#10;    resp, resp_body)&#10;  File &quot;tempest/lib/common/rest_client.py&quot;, line 768, in _error_checker&#10;    raise exceptions.BadRequest(resp_body, resp=resp)&#10;tempest.lib.exceptions.BadRequest: Bad request&#10;Details: {u'message': u&quot;Invalid input for external_gateway_info. Reason: '' is not a valid UUID.&quot;, u'type': u'HTTPBadRequest', u'detail': u''}&#10;" type="failure" /></testcase><testcase name="tempest.api.compute.servers.test_create_server.ServersTestManualDisk.test_host_name_is_same_as_server_name"><failure message="Traceback (most recent call last):&#10;  File &quot;tempest/test.py&quot;, line 274, in setUpClass&#10;    six.reraise(etype, value, trace)&#10;  File &quot;tempest/test.py&quot;, line 262, in setUpClass&#10;    cls.setup_credentials()&#10;  File &quot;tempest/api/compute/servers/test_create_server.py&quot;, line 35, in setup_credentials&#10;    super(ServersTestJSON, cls).setup_credentials()&#10;  File &quot;tempest/api/compute/base.py&quot;, line 61, in setup_credentials&#10;    super(BaseV2ComputeTest, cls).setup_credentials()&#10;  File &quot;tempest/test.py&quot;, line 362, in setup_credentials&#10;    credential_type=credentials_type)&#10;  File &quot;tempest/test.py&quot;, line 536, in get_client_manager&#10;    creds = getattr(cred_provider, credentials_method)()&#10;  File &quot;tempest/common/dynamic_creds.py&quot;, line 303, in get_primary_creds&#10;    return self.get_credentials('primary')&#10;  File &quot;tempest/common/dynamic_creds.py&quot;, line 295, in get_credentials&#10;    credentials.tenant_id)&#10;  File &quot;tempest/common/dynamic_creds.py&quot;, line 212, in _create_network_resources&#10;    router = self._create_router(router_name, tenant_id)&#10;  File &quot;tempest/common/dynamic_creds.py&quot;, line 271, in _create_router&#10;    tenant_id=tenant_id)&#10;  File &quot;tempest/lib/services/network/routers_client.py&quot;, line 27, in create_router&#10;    return self.create_resource(uri, post_body)&#10;  File &quot;tempest/lib/services/network/base.py&quot;, line 60, in create_resource&#10;    resp, body = self.post(req_uri, req_post_data)&#10;  File &quot;tempest/lib/common/rest_client.py&quot;, line 276, in post&#10;    return self.request('POST', url, extra_headers, headers, body, chunked)&#10;  File &quot;tempest/lib/common/rest_client.py&quot;, line 665, in request&#10;    resp, resp_body)&#10;  File &quot;tempest/lib/common/rest_client.py&quot;, line 768, in _error_checker&#10;    raise exceptions.BadRequest(resp_body, resp=resp)&#10;tempest.lib.exceptions.BadRequest: Bad request&#10;Details: {u'message': u&quot;Invalid input for external_gateway_info. Reason: '' is not a valid UUID.&quot;, u'type': u'HTTPBadRequest', u'detail': u''}&#10;" type="failure" /></testcase><testcase name="tempest.api.orchestration.stacks.test_limits.TestServerStackLimits.test_exceed_max_template_size_fails"><failure message="Traceback (most recent call last):&#10;  File &quot;tempest/test.py&quot;, line 274, in setUpClass&#10;    six.reraise(etype, value, trace)&#10;  File &quot;tempest/test.py&quot;, line 262, in setUpClass&#10;    cls.setup_credentials()&#10;  File &quot;tempest/api/orchestration/base.py&quot;, line 38, in setup_credentials&#10;    super(BaseOrchestrationTest, cls).setup_credentials()&#10;  File &quot;tempest/test.py&quot;, line 362, in setup_credentials&#10;    credential_type=credentials_type)&#10;  File &quot;tempest/test.py&quot;, line 536, in get_client_manager&#10;    creds = getattr(cred_provider, credentials_method)()&#10;  File &quot;tempest/common/dynamic_creds.py&quot;, line 303, in get_primary_creds&#10;    return self.get_credentials('primary')&#10;  File &quot;tempest/common/dynamic_creds.py&quot;, line 295, in get_credentials&#10;    credentials.tenant_id)&#10;  File &quot;tempest/common/dynamic_creds.py&quot;, line 212, in _create_network_resources&#10;    router = self._create_router(router_name, tenant_id)&#10;  File &quot;tempest/common/dynamic_creds.py&quot;, line 271, in _create_router&#10;    tenant_id=tenant_id)&#10;  File &quot;tempest/lib/services/network/routers_client.py&quot;, line 27, in create_router&#10;    return self.create_resource(uri, post_body)&#10;  File &quot;tempest/lib/services/network/base.py&quot;, line 60, in create_resource&#10;    resp, body = self.post(req_uri, req_post_data)&#10;  File &quot;tempest/lib/common/rest_client.py&quot;, line 276, in post&#10;    return self.request('POST', url, extra_headers, headers, body, chunked)&#10;  File &quot;tempest/lib/common/rest_client.py&quot;, line 665, in request&#10;    resp, resp_body)&#10;  File &quot;tempest/lib/common/rest_client.py&quot;, line 768, in _error_checker&#10;    raise exceptions.BadRequest(resp_body, resp=resp)&#10;tempest.lib.exceptions.BadRequest: Bad request&#10;Details: {u'message': u&quot;Invalid input for external_gateway_info. Reason: '' is not a valid UUID.&quot;, u'type': u'HTTPBadRequest', u'detail': u''}&#10;" type="failure" /></testcase><testcase name="tempest.scenario.test_snapshot_pattern.TestSnapshotPattern.test_snapshot_pattern"><failure message="Traceback (most recent call last):&#10;  File &quot;tempest/test.py&quot;, line 274, in setUpClass&#10;    six.reraise(etype, value, trace)&#10;  File &quot;tempest/test.py&quot;, line 262, in setUpClass&#10;    cls.setup_credentials()&#10;  File &quot;tempest/test.py&quot;, line 362, in setup_credentials&#10;    credential_type=credentials_type)&#10;  File &quot;tempest/test.py&quot;, line 536, in get_client_manager&#10;    creds = getattr(cred_provider, credentials_method)()&#10;  File &quot;tempest/common/dynamic_creds.py&quot;, line 303, in get_primary_creds&#10;    return self.get_credentials('primary')&#10;  File &quot;tempest/common/dynamic_creds.py&quot;, line 295, in get_credentials&#10;    credentials.tenant_id)&#10;  File &quot;tempest/common/dynamic_creds.py&quot;, line 212, in _create_network_resources&#10;    router = self._create_router(router_name, tenant_id)&#10;  File &quot;tempest/common/dynamic_creds.py&quot;, line 271, in _create_router&#10;    tenant_id=tenant_id)&#10;  File &quot;tempest/lib/services/network/routers_client.py&quot;, line 27, in create_router&#10;    return self.create_resource(uri, post_body)&#10;  File &quot;tempest/lib/services/network/base.py&quot;, line 60, in create_resource&#10;    resp, body = self.post(req_uri, req_post_data)&#10;  File &quot;tempest/lib/common/rest_client.py&quot;, line 276, in post&#10;    return self.request('POST', url, extra_headers, headers, body, chunked)&#10;  File &quot;tempest/lib/common/rest_client.py&quot;, line 665, in request&#10;    resp, resp_body)&#10;  File &quot;tempest/lib/common/rest_client.py&quot;, line 768, in _error_checker&#10;    raise exceptions.BadRequest(resp_body, resp=resp)&#10;tempest.lib.exceptions.BadRequest: Bad request&#10;Details: {u'message': u&quot;Invalid input for external_gateway_info. Reason: '' is not a valid UUID.&quot;, u'type': u'HTTPBadRequest', u'detail': u''}&#10;" type="failure" /></testcase><testcase name="tempest.api.compute.servers.test_server_actions.ServerActionsTestJSON.test_resize_server_confirm"><failure message="Traceback (most recent call last):&#10;  File &quot;tempest/test.py&quot;, line 274, in setUpClass&#10;    six.reraise(etype, value, trace)&#10;  File &quot;tempest/test.py&quot;, line 262, in setUpClass&#10;    cls.setup_credentials()&#10;  File &quot;tempest/api/compute/servers/test_server_actions.py&quot;, line 66, in setup_credentials&#10;    super(ServerActionsTestJSON, cls).setup_credentials()&#10;  File &quot;tempest/api/compute/base.py&quot;, line 61, in setup_credentials&#10;    super(BaseV2ComputeTest, cls).setup_credentials()&#10;  File &quot;tempest/test.py&quot;, line 362, in setup_credentials&#10;    credential_type=credentials_type)&#10;  File &quot;tempest/test.py&quot;, line 536, in get_client_manager&#10;    creds = getattr(cred_provider, credentials_method)()&#10;  File &quot;tempest/common/dynamic_creds.py&quot;, line 303, in get_primary_creds&#10;    return self.get_credentials('primary')&#10;  File &quot;tempest/common/dynamic_creds.py&quot;, line 295, in get_credentials&#10;    credentials.tenant_id)&#10;  File &quot;tempest/common/dynamic_creds.py&quot;, line 212, in _create_network_resources&#10;    router = self._create_router(router_name, tenant_id)&#10;  File &quot;tempest/common/dynamic_creds.py&quot;, line 271, in _create_router&#10;    tenant_id=tenant_id)&#10;  File &quot;tempest/lib/services/network/routers_client.py&quot;, line 27, in create_router&#10;    return self.create_resource(uri, post_body)&#10;  File &quot;tempest/lib/services/network/base.py&quot;, line 60, in create_resource&#10;    resp, body = self.post(req_uri, req_post_data)&#10;  File &quot;tempest/lib/common/rest_client.py&quot;, line 276, in post&#10;    return self.request('POST', url, extra_headers, headers, body, chunked)&#10;  File &quot;tempest/lib/common/rest_client.py&quot;, line 665, in request&#10;    resp, resp_body)&#10;  File &quot;tempest/lib/common/rest_client.py&quot;, line 768, in _error_checker&#10;    raise exceptions.BadRequest(resp_body, resp=resp)&#10;tempest.lib.exceptions.BadRequest: Bad request&#10;Details: {u'message': u&quot;Invalid input for external_gateway_info. Reason: '' is not a valid UUID.&quot;, u'type': u'HTTPBadRequest', u'detail': u''}&#10;" type="failure" /></testcase><testcase name="tempest.api.compute.servers.test_server_rescue_negative.ServerRescueNegativeTestJSON.test_rescued_vm_reboot"><failure message="Traceback (most recent call last):&#10;  File &quot;tempest/test.py&quot;, line 274, in setUpClass&#10;    six.reraise(etype, value, trace)&#10;  File &quot;tempest/test.py&quot;, line 262, in setUpClass&#10;    cls.setup_credentials()&#10;  File &quot;tempest/api/compute/servers/test_server_rescue_negative.py&quot;, line 40, in setup_credentials&#10;    super(ServerRescueNegativeTestJSON, cls).setup_credentials()&#10;  File &quot;tempest/api/compute/base.py&quot;, line 61, in setup_credentials&#10;    super(BaseV2ComputeTest, cls).setup_credentials()&#10;  File &quot;tempest/test.py&quot;, line 362, in setup_credentials&#10;    credential_type=credentials_type)&#10;  File &quot;tempest/test.py&quot;, line 536, in get_client_manager&#10;    creds = getattr(cred_provider, credentials_method)()&#10;  File &quot;tempest/common/dynamic_creds.py&quot;, line 303, in get_primary_creds&#10;    return self.get_credentials('primary')&#10;  File &quot;tempest/common/dynamic_creds.py&quot;, line 295, in get_credentials&#10;    credentials.tenant_id)&#10;  File &quot;tempest/common/dynamic_creds.py&quot;, line 212, in _create_network_resources&#10;    router = self._create_router(router_name, tenant_id)&#10;  File &quot;tempest/common/dynamic_creds.py&quot;, line 271, in _create_router&#10;    tenant_id=tenant_id)&#10;  File &quot;tempest/lib/services/network/routers_client.py&quot;, line 27, in create_router&#10;    return self.create_resource(uri, post_body)&#10;  File &quot;tempest/lib/services/network/base.py&quot;, line 60, in create_resource&#10;    resp, body = self.post(req_uri, req_post_data)&#10;  File &quot;tempest/lib/common/rest_client.py&quot;, line 276, in post&#10;    return self.request('POST', url, extra_headers, headers, body, chunked)&#10;  File &quot;tempest/lib/common/rest_client.py&quot;, line 665, in request&#10;    resp, resp_body)&#10;  File &quot;tempest/lib/common/rest_client.py&quot;, line 768, in _error_checker&#10;    raise exceptions.BadRequest(resp_body, resp=resp)&#10;tempest.lib.exceptions.BadRequest: Bad request&#10;Details: {u'message': u&quot;Invalid input for external_gateway_info. Reason: '' is not a valid UUID.&quot;, u'type': u'HTTPBadRequest', u'detail': u''}&#10;" type="failure" /></testcase><testcase name="tempest.api.compute.floating_ips.test_floating_ips_actions.FloatingIPsTestJSON.test_associate_already_associated_floating_ip"><failure message="Traceback (most recent call last):&#10;  File &quot;tempest/test.py&quot;, line 274, in setUpClass&#10;    six.reraise(etype, value, trace)&#10;  File &quot;tempest/test.py&quot;, line 262, in setUpClass&#10;    cls.setup_credentials()&#10;  File &quot;tempest/api/compute/floating_ips/base.py&quot;, line 26, in setup_credentials&#10;    super(BaseFloatingIPsTest, cls).setup_credentials()&#10;  File &quot;tempest/api/compute/base.py&quot;, line 61, in setup_credentials&#10;    super(BaseV2ComputeTest, cls).setup_credentials()&#10;  File &quot;tempest/test.py&quot;, line 362, in setup_credentials&#10;    credential_type=credentials_type)&#10;  File &quot;tempest/test.py&quot;, line 536, in get_client_manager&#10;    creds = getattr(cred_provider, credentials_method)()&#10;  File &quot;tempest/common/dynamic_creds.py&quot;, line 303, in get_primary_creds&#10;    return self.get_credentials('primary')&#10;  File &quot;tempest/common/dynamic_creds.py&quot;, line 295, in get_credentials&#10;    credentials.tenant_id)&#10;  File &quot;tempest/common/dynamic_creds.py&quot;, line 212, in _create_network_resources&#10;    router = self._create_router(router_name, tenant_id)&#10;  File &quot;tempest/common/dynamic_creds.py&quot;, line 271, in _create_router&#10;    tenant_id=tenant_id)&#10;  File &quot;tempest/lib/services/network/routers_client.py&quot;, line 27, in create_router&#10;    return self.create_resource(uri, post_body)&#10;  File &quot;tempest/lib/services/network/base.py&quot;, line 60, in create_resource&#10;    resp, body = self.post(req_uri, req_post_data)&#10;  File &quot;tempest/lib/common/rest_client.py&quot;, line 276, in post&#10;    return self.request('POST', url, extra_headers, headers, body, chunked)&#10;  File &quot;tempest/lib/common/rest_client.py&quot;, line 665, in request&#10;    resp, resp_body)&#10;  File &quot;tempest/lib/common/rest_client.py&quot;, line 768, in _error_checker&#10;    raise exceptions.BadRequest(resp_body, resp=resp)&#10;tempest.lib.exceptions.BadRequest: Bad request&#10;Details: {u'message': u&quot;Invalid input for external_gateway_info. Reason: '' is not a valid UUID.&quot;, u'type': u'HTTPBadRequest', u'detail': u''}&#10;" type="failure" /></testcase><testcase name="tempest.api.network.test_floating_ips_negative.FloatingIPNegativeTestJSON.test_create_floatingip_with_port_ext_net_unreachable"><failure message="Traceback (most recent call last):&#10;  File &quot;tempest/api/network/test_floating_ips_negative.py&quot;, line 59, in test_create_floatingip_with_port_ext_net_unreachable&#10;    ['ip_address'])&#10;  File &quot;/home/rally/.rally/tempest/for-deployment-bdf7c6bd-181c-4863-bcdf-08408b5426f5/.venv/local/lib/python2.7/site-packages/testtools/testcase.py&quot;, line 485, in assertRaises&#10;    self.assertThat(our_callable, matcher)&#10;  File &quot;/home/rally/.rally/tempest/for-deployment-bdf7c6bd-181c-4863-bcdf-08408b5426f5/.venv/local/lib/python2.7/site-packages/testtools/testcase.py&quot;, line 496, in assertThat&#10;    mismatch_error = self._matchHelper(matchee, matcher, message, verbose)&#10;  File &quot;/home/rally/.rally/tempest/for-deployment-bdf7c6bd-181c-4863-bcdf-08408b5426f5/.venv/local/lib/python2.7/site-packages/testtools/testcase.py&quot;, line 547, in _matchHelper&#10;    mismatch = matcher.match(matchee)&#10;  File &quot;/home/rally/.rally/tempest/for-deployment-bdf7c6bd-181c-4863-bcdf-08408b5426f5/.venv/local/lib/python2.7/site-packages/testtools/matchers/_exception.py&quot;, line 108, in match&#10;    mismatch = self.exception_matcher.match(exc_info)&#10;  File &quot;/home/rally/.rally/tempest/for-deployment-bdf7c6bd-181c-4863-bcdf-08408b5426f5/.venv/local/lib/python2.7/site-packages/testtools/matchers/_higherorder.py&quot;, line 62, in match&#10;    mismatch = matcher.match(matchee)&#10;  File &quot;/home/rally/.rally/tempest/for-deployment-bdf7c6bd-181c-4863-bcdf-08408b5426f5/.venv/local/lib/python2.7/site-packages/testtools/testcase.py&quot;, line 475, in match&#10;    reraise(*matchee)&#10;  File &quot;/home/rally/.rally/tempest/for-deployment-bdf7c6bd-181c-4863-bcdf-08408b5426f5/.venv/local/lib/python2.7/site-packages/testtools/matchers/_exception.py&quot;, line 101, in match&#10;    result = matchee()&#10;  File &quot;/home/rally/.rally/tempest/for-deployment-bdf7c6bd-181c-4863-bcdf-08408b5426f5/.venv/local/lib/python2.7/site-packages/testtools/testcase.py&quot;, line 1049, in __call__&#10;    return self._callable_object(*self._args, **self._kwargs)&#10;  File &quot;tempest/lib/services/network/floating_ips_client.py&quot;, line 30, in create_floatingip&#10;    return self.create_resource(uri, post_data)&#10;  File &quot;tempest/lib/services/network/base.py&quot;, line 60, in create_resource&#10;    resp, body = self.post(req_uri, req_post_data)&#10;  File &quot;tempest/lib/common/rest_client.py&quot;, line 276, in post&#10;    return self.request('POST', url, extra_headers, headers, body, chunked)&#10;  File &quot;tempest/lib/common/rest_client.py&quot;, line 665, in request&#10;    resp, resp_body)&#10;  File &quot;tempest/lib/common/rest_client.py&quot;, line 768, in _error_checker&#10;    raise exceptions.BadRequest(resp_body, resp=resp)&#10;tempest.lib.exceptions.BadRequest: Bad request&#10;Details: {u'message': u&quot;Invalid input for floating_network_id. Reason: '' is not a valid UUID.&quot;, u'type': u'HTTPBadRequest', u'detail': u''}&#10;" type="failure" /></testcase><testcase name="tempest.api.compute.images.test_images_oneserver_negative.ImagesOneServerNegativeTestJSON.test_create_image_specify_name_over_256_chars"><failure message="Traceback (most recent call last):&#10;  File &quot;tempest/test.py&quot;, line 274, in setUpClass&#10;    six.reraise(etype, value, trace)&#10;  File &quot;tempest/test.py&quot;, line 262, in setUpClass&#10;    cls.setup_credentials()&#10;  File &quot;tempest/api/compute/images/test_images_oneserver_negative.py&quot;, line 74, in setup_credentials&#10;    super(ImagesOneServerNegativeTestJSON, cls).setup_credentials()&#10;  File &quot;tempest/api/compute/base.py&quot;, line 61, in setup_credentials&#10;    super(BaseV2ComputeTest, cls).setup_credentials()&#10;  File &quot;tempest/test.py&quot;, line 362, in setup_credentials&#10;    credential_type=credentials_type)&#10;  File &quot;tempest/test.py&quot;, line 536, in get_client_manager&#10;    creds = getattr(cred_provider, credentials_method)()&#10;  File &quot;tempest/common/dynamic_creds.py&quot;, line 303, in get_primary_creds&#10;    return self.get_credentials('primary')&#10;  File &quot;tempest/common/dynamic_creds.py&quot;, line 295, in get_credentials&#10;    credentials.tenant_id)&#10;  File &quot;tempest/common/dynamic_creds.py&quot;, line 212, in _create_network_resources&#10;    router = self._create_router(router_name, tenant_id)&#10;  File &quot;tempest/common/dynamic_creds.py&quot;, line 271, in _create_router&#10;    tenant_id=tenant_id)&#10;  File &quot;tempest/lib/services/network/routers_client.py&quot;, line 27, in create_router&#10;    return self.create_resource(uri, post_body)&#10;  File &quot;tempest/lib/services/network/base.py&quot;, line 60, in create_resource&#10;    resp, body = self.post(req_uri, req_post_data)&#10;  File &quot;tempest/lib/common/rest_client.py&quot;, line 276, in post&#10;    return self.request('POST', url, extra_headers, headers, body, chunked)&#10;  File &quot;tempest/lib/common/rest_client.py&quot;, line 665, in request&#10;    resp, resp_body)&#10;  File &quot;tempest/lib/common/rest_client.py&quot;, line 768, in _error_checker&#10;    raise exceptions.BadRequest(resp_body, resp=resp)&#10;tempest.lib.exceptions.BadRequest: Bad request&#10;Details: {u'message': u&quot;Invalid input for external_gateway_info. Reason: '' is not a valid UUID.&quot;, u'type': u'HTTPBadRequest', u'detail': u''}&#10;" type="failure" /></testcase><testcase name="tempest.api.compute.servers.test_create_server.ServersTestJSON.test_host_name_is_same_as_server_name"><failure message="Traceback (most recent call last):&#10;  File &quot;tempest/test.py&quot;, line 274, in setUpClass&#10;    six.reraise(etype, value, trace)&#10;  File &quot;tempest/test.py&quot;, line 262, in setUpClass&#10;    cls.setup_credentials()&#10;  File &quot;tempest/api/compute/servers/test_create_server.py&quot;, line 35, in setup_credentials&#10;    super(ServersTestJSON, cls).setup_credentials()&#10;  File &quot;tempest/api/compute/base.py&quot;, line 61, in setup_credentials&#10;    super(BaseV2ComputeTest, cls).setup_credentials()&#10;  File &quot;tempest/test.py&quot;, line 362, in setup_credentials&#10;    credential_type=credentials_type)&#10;  File &quot;tempest/test.py&quot;, line 536, in get_client_manager&#10;    creds = getattr(cred_provider, credentials_method)()&#10;  File &quot;tempest/common/dynamic_creds.py&quot;, line 303, in get_primary_creds&#10;    return self.get_credentials('primary')&#10;  File &quot;tempest/common/dynamic_creds.py&quot;, line 295, in get_credentials&#10;    credentials.tenant_id)&#10;  File &quot;tempest/common/dynamic_creds.py&quot;, line 212, in _create_network_resources&#10;    router = self._create_router(router_name, tenant_id)&#10;  File &quot;tempest/common/dynamic_creds.py&quot;, line 271, in _create_router&#10;    tenant_id=tenant_id)&#10;  File &quot;tempest/lib/services/network/routers_client.py&quot;, line 27, in create_router&#10;    return self.create_resource(uri, post_body)&#10;  File &quot;tempest/lib/services/network/base.py&quot;, line 60, in create_resource&#10;    resp, body = self.post(req_uri, req_post_data)&#10;  File &quot;tempest/lib/common/rest_client.py&quot;, line 276, in post&#10;    return self.request('POST', url, extra_headers, headers, body, chunked)&#10;  File &quot;tempest/lib/common/rest_client.py&quot;, line 665, in request&#10;    resp, resp_body)&#10;  File &quot;tempest/lib/common/rest_client.py&quot;, line 768, in _error_checker&#10;    raise exceptions.BadRequest(resp_body, resp=resp)&#10;tempest.lib.exceptions.BadRequest: Bad request&#10;Details: {u'message': u&quot;Invalid input for external_gateway_info. Reason: '' is not a valid UUID.&quot;, u'type': u'HTTPBadRequest', u'detail': u''}&#10;" type="failure" /></testcase><testcase name="tempest.api.compute.floating_ips.test_floating_ips_actions.FloatingIPsTestJSON.test_allocate_floating_ip"><failure message="Traceback (most recent call last):&#10;  File &quot;tempest/test.py&quot;, line 274, in setUpClass&#10;    six.reraise(etype, value, trace)&#10;  File &quot;tempest/test.py&quot;, line 262, in setUpClass&#10;    cls.setup_credentials()&#10;  File &quot;tempest/api/compute/floating_ips/base.py&quot;, line 26, in setup_credentials&#10;    super(BaseFloatingIPsTest, cls).setup_credentials()&#10;  File &quot;tempest/api/compute/base.py&quot;, line 61, in setup_credentials&#10;    super(BaseV2ComputeTest, cls).setup_credentials()&#10;  File &quot;tempest/test.py&quot;, line 362, in setup_credentials&#10;    credential_type=credentials_type)&#10;  File &quot;tempest/test.py&quot;, line 536, in get_client_manager&#10;    creds = getattr(cred_provider, credentials_method)()&#10;  File &quot;tempest/common/dynamic_creds.py&quot;, line 303, in get_primary_creds&#10;    return self.get_credentials('primary')&#10;  File &quot;tempest/common/dynamic_creds.py&quot;, line 295, in get_credentials&#10;    credentials.tenant_id)&#10;  File &quot;tempest/common/dynamic_creds.py&quot;, line 212, in _create_network_resources&#10;    router = self._create_router(router_name, tenant_id)&#10;  File &quot;tempest/common/dynamic_creds.py&quot;, line 271, in _create_router&#10;    tenant_id=tenant_id)&#10;  File &quot;tempest/lib/services/network/routers_client.py&quot;, line 27, in create_router&#10;    return self.create_resource(uri, post_body)&#10;  File &quot;tempest/lib/services/network/base.py&quot;, line 60, in create_resource&#10;    resp, body = self.post(req_uri, req_post_data)&#10;  File &quot;tempest/lib/common/rest_client.py&quot;, line 276, in post&#10;    return self.request('POST', url, extra_headers, headers, body, chunked)&#10;  File &quot;tempest/lib/common/rest_client.py&quot;, line 665, in request&#10;    resp, resp_body)&#10;  File &quot;tempest/lib/common/rest_client.py&quot;, line 768, in _error_checker&#10;    raise exceptions.BadRequest(resp_body, resp=resp)&#10;tempest.lib.exceptions.BadRequest: Bad request&#10;Details: {u'message': u&quot;Invalid input for external_gateway_info. Reason: '' is not a valid UUID.&quot;, u'type': u'HTTPBadRequest', u'detail': u''}&#10;" type="failure" /></testcase><testcase name="tempest.api.network.test_routers.RoutersIpV6Test.test_update_router_set_gateway_without_snat"><failure message="Traceback (most recent call last):&#10;  File &quot;tempest/test.py&quot;, line 152, in wrapper&#10;    return func(*func_args, **func_kwargs)&#10;  File &quot;tempest/api/network/test_routers.py&quot;, line 235, in test_update_router_set_gateway_without_snat&#10;    'enable_snat': False})&#10;  File &quot;tempest/lib/services/network/routers_client.py&quot;, line 38, in update_router&#10;    return self.update_resource(uri, update_body)&#10;  File &quot;tempest/lib/services/network/base.py&quot;, line 74, in update_resource&#10;    resp, body = self.put(req_uri, req_post_data)&#10;  File &quot;tempest/lib/common/rest_client.py&quot;, line 340, in put&#10;    return self.request('PUT', url, extra_headers, headers, body, chunked)&#10;  File &quot;tempest/lib/common/rest_client.py&quot;, line 665, in request&#10;    resp, resp_body)&#10;  File &quot;tempest/lib/common/rest_client.py&quot;, line 768, in _error_checker&#10;    raise exceptions.BadRequest(resp_body, resp=resp)&#10;tempest.lib.exceptions.BadRequest: Bad request&#10;Details: {u'message': u&quot;Invalid input for external_gateway_info. Reason: '' is not a valid UUID.&quot;, u'type': u'HTTPBadRequest', u'detail': u''}&#10;" type="failure" /></testcase><testcase name="tempest.scenario.test_volume_boot_pattern.TestVolumeBootPatternV2.test_create_ebs_image_and_check_boot"><failure message="Traceback (most recent call last):&#10;  File &quot;tempest/test.py&quot;, line 274, in setUpClass&#10;    six.reraise(etype, value, trace)&#10;  File &quot;tempest/test.py&quot;, line 262, in setUpClass&#10;    cls.setup_credentials()&#10;  File &quot;tempest/test.py&quot;, line 362, in setup_credentials&#10;    credential_type=credentials_type)&#10;  File &quot;tempest/test.py&quot;, line 536, in get_client_manager&#10;    creds = getattr(cred_provider, credentials_method)()&#10;  File &quot;tempest/common/dynamic_creds.py&quot;, line 303, in get_primary_creds&#10;    return self.get_credentials('primary')&#10;  File &quot;tempest/common/dynamic_creds.py&quot;, line 295, in get_credentials&#10;    credentials.tenant_id)&#10;  File &quot;tempest/common/dynamic_creds.py&quot;, line 212, in _create_network_resources&#10;    router = self._create_router(router_name, tenant_id)&#10;  File &quot;tempest/common/dynamic_creds.py&quot;, line 271, in _create_router&#10;    tenant_id=tenant_id)&#10;  File &quot;tempest/lib/services/network/routers_client.py&quot;, line 27, in create_router&#10;    return self.create_resource(uri, post_body)&#10;  File &quot;tempest/lib/services/network/base.py&quot;, line 60, in create_resource&#10;    resp, body = self.post(req_uri, req_post_data)&#10;  File &quot;tempest/lib/common/rest_client.py&quot;, line 276, in post&#10;    return self.request('POST', url, extra_headers, headers, body, chunked)&#10;  File &quot;tempest/lib/common/rest_client.py&quot;, line 665, in request&#10;    resp, resp_body)&#10;  File &quot;tempest/lib/common/rest_client.py&quot;, line 768, in _error_checker&#10;    raise exceptions.BadRequest(resp_body, resp=resp)&#10;tempest.lib.exceptions.BadRequest: Bad request&#10;Details: {u'message': u&quot;Invalid input for external_gateway_info. Reason: '' is not a valid UUID.&quot;, u'type': u'HTTPBadRequest', u'detail': u''}&#10;" type="failure" /></testcase><testcase name="tempest.api.compute.admin.test_networks.NetworksTest.test_list_all_networks"><failure message="Traceback (most recent call last):&#10;  File &quot;tempest/api/compute/admin/test_networks.py&quot;, line 61, in test_list_all_networks&#10;    self.assertGreaterEqual(len(network_name), 1)&#10;  File &quot;/home/rally/.rally/tempest/for-deployment-bdf7c6bd-181c-4863-bcdf-08408b5426f5/.venv/local/lib/python2.7/site-packages/unittest2/case.py&quot;, line 1239, in assertGreaterEqual&#10;    self.fail(self._formatMessage(msg, standardMsg))&#10;  File &quot;/home/rally/.rally/tempest/for-deployment-bdf7c6bd-181c-4863-bcdf-08408b5426f5/.venv/local/lib/python2.7/site-packages/unittest2/case.py&quot;, line 690, in fail&#10;    raise self.failureException(msg)&#10;AssertionError: 0 not greater than or equal to 1&#10;" type="failure" /></testcase><testcase name="tempest.api.compute.servers.test_server_actions.ServerActionsTestJSON.test_stop_start_server"><failure message="Traceback (most recent call last):&#10;  File &quot;tempest/test.py&quot;, line 274, in setUpClass&#10;    six.reraise(etype, value, trace)&#10;  File &quot;tempest/test.py&quot;, line 262, in setUpClass&#10;    cls.setup_credentials()&#10;  File &quot;tempest/api/compute/servers/test_server_actions.py&quot;, line 66, in setup_credentials&#10;    super(ServerActionsTestJSON, cls).setup_credentials()&#10;  File &quot;tempest/api/compute/base.py&quot;, line 61, in setup_credentials&#10;    super(BaseV2ComputeTest, cls).setup_credentials()&#10;  File &quot;tempest/test.py&quot;, line 362, in setup_credentials&#10;    credential_type=credentials_type)&#10;  File &quot;tempest/test.py&quot;, line 536, in get_client_manager&#10;    creds = getattr(cred_provider, credentials_method)()&#10;  File &quot;tempest/common/dynamic_creds.py&quot;, line 303, in get_primary_creds&#10;    return self.get_credentials('primary')&#10;  File &quot;tempest/common/dynamic_creds.py&quot;, line 295, in get_credentials&#10;    credentials.tenant_id)&#10;  File &quot;tempest/common/dynamic_creds.py&quot;, line 212, in _create_network_resources&#10;    router = self._create_router(router_name, tenant_id)&#10;  File &quot;tempest/common/dynamic_creds.py&quot;, line 271, in _create_router&#10;    tenant_id=tenant_id)&#10;  File &quot;tempest/lib/services/network/routers_client.py&quot;, line 27, in create_router&#10;    return self.create_resource(uri, post_body)&#10;  File &quot;tempest/lib/services/network/base.py&quot;, line 60, in create_resource&#10;    resp, body = self.post(req_uri, req_post_data)&#10;  File &quot;tempest/lib/common/rest_client.py&quot;, line 276, in post&#10;    return self.request('POST', url, extra_headers, headers, body, chunked)&#10;  File &quot;tempest/lib/common/rest_client.py&quot;, line 665, in request&#10;    resp, resp_body)&#10;  File &quot;tempest/lib/common/rest_client.py&quot;, line 768, in _error_checker&#10;    raise exceptions.BadRequest(resp_body, resp=resp)&#10;tempest.lib.exceptions.BadRequest: Bad request&#10;Details: {u'message': u&quot;Invalid input for external_gateway_info. Reason: '' is not a valid UUID.&quot;, u'type': u'HTTPBadRequest', u'detail': u''}&#10;" type="failure" /></testcase><testcase name="tempest.api.compute.servers.test_create_server.ServersTestJSON.test_verify_multiple_nics_order"><failure message="Traceback (most recent call last):&#10;  File &quot;tempest/test.py&quot;, line 274, in setUpClass&#10;    six.reraise(etype, value, trace)&#10;  File &quot;tempest/test.py&quot;, line 262, in setUpClass&#10;    cls.setup_credentials()&#10;  File &quot;tempest/api/compute/servers/test_create_server.py&quot;, line 35, in setup_credentials&#10;    super(ServersTestJSON, cls).setup_credentials()&#10;  File &quot;tempest/api/compute/base.py&quot;, line 61, in setup_credentials&#10;    super(BaseV2ComputeTest, cls).setup_credentials()&#10;  File &quot;tempest/test.py&quot;, line 362, in setup_credentials&#10;    credential_type=credentials_type)&#10;  File &quot;tempest/test.py&quot;, line 536, in get_client_manager&#10;    creds = getattr(cred_provider, credentials_method)()&#10;  File &quot;tempest/common/dynamic_creds.py&quot;, line 303, in get_primary_creds&#10;    return self.get_credentials('primary')&#10;  File &quot;tempest/common/dynamic_creds.py&quot;, line 295, in get_credentials&#10;    credentials.tenant_id)&#10;  File &quot;tempest/common/dynamic_creds.py&quot;, line 212, in _create_network_resources&#10;    router = self._create_router(router_name, tenant_id)&#10;  File &quot;tempest/common/dynamic_creds.py&quot;, line 271, in _create_router&#10;    tenant_id=tenant_id)&#10;  File &quot;tempest/lib/services/network/routers_client.py&quot;, line 27, in create_router&#10;    return self.create_resource(uri, post_body)&#10;  File &quot;tempest/lib/services/network/base.py&quot;, line 60, in create_resource&#10;    resp, body = self.post(req_uri, req_post_data)&#10;  File &quot;tempest/lib/common/rest_client.py&quot;, line 276, in post&#10;    return self.request('POST', url, extra_headers, headers, body, chunked)&#10;  File &quot;tempest/lib/common/rest_client.py&quot;, line 665, in request&#10;    resp, resp_body)&#10;  File &quot;tempest/lib/common/rest_client.py&quot;, line 768, in _error_checker&#10;    raise exceptions.BadRequest(resp_body, resp=resp)&#10;tempest.lib.exceptions.BadRequest: Bad request&#10;Details: {u'message': u&quot;Invalid input for external_gateway_info. Reason: '' is not a valid UUID.&quot;, u'type': u'HTTPBadRequest', u'detail': u''}&#10;" type="failure" /></testcase><testcase name="tempest.api.compute.servers.test_server_rescue_negative.ServerRescueNegativeTestJSON.test_rescued_vm_detach_volume"><failure message="Traceback (most recent call last):&#10;  File &quot;tempest/test.py&quot;, line 274, in setUpClass&#10;    six.reraise(etype, value, trace)&#10;  File &quot;tempest/test.py&quot;, line 262, in setUpClass&#10;    cls.setup_credentials()&#10;  File &quot;tempest/api/compute/servers/test_server_rescue_negative.py&quot;, line 40, in setup_credentials&#10;    super(ServerRescueNegativeTestJSON, cls).setup_credentials()&#10;  File &quot;tempest/api/compute/base.py&quot;, line 61, in setup_credentials&#10;    super(BaseV2ComputeTest, cls).setup_credentials()&#10;  File &quot;tempest/test.py&quot;, line 362, in setup_credentials&#10;    credential_type=credentials_type)&#10;  File &quot;tempest/test.py&quot;, line 536, in get_client_manager&#10;    creds = getattr(cred_provider, credentials_method)()&#10;  File &quot;tempest/common/dynamic_creds.py&quot;, line 303, in get_primary_creds&#10;    return self.get_credentials('primary')&#10;  File &quot;tempest/common/dynamic_creds.py&quot;, line 295, in get_credentials&#10;    credentials.tenant_id)&#10;  File &quot;tempest/common/dynamic_creds.py&quot;, line 212, in _create_network_resources&#10;    router = self._create_router(router_name, tenant_id)&#10;  File &quot;tempest/common/dynamic_creds.py&quot;, line 271, in _create_router&#10;    tenant_id=tenant_id)&#10;  File &quot;tempest/lib/services/network/routers_client.py&quot;, line 27, in create_router&#10;    return self.create_resource(uri, post_body)&#10;  File &quot;tempest/lib/services/network/base.py&quot;, line 60, in create_resource&#10;    resp, body = self.post(req_uri, req_post_data)&#10;  File &quot;tempest/lib/common/rest_client.py&quot;, line 276, in post&#10;    return self.request('POST', url, extra_headers, headers, body, chunked)&#10;  File &quot;tempest/lib/common/rest_client.py&quot;, line 665, in request&#10;    resp, resp_body)&#10;  File &quot;tempest/lib/common/rest_client.py&quot;, line 768, in _error_checker&#10;    raise exceptions.BadRequest(resp_body, resp=resp)&#10;tempest.lib.exceptions.BadRequest: Bad request&#10;Details: {u'message': u&quot;Invalid input for external_gateway_info. Reason: '' is not a valid UUID.&quot;, u'type': u'HTTPBadRequest', u'detail': u''}&#10;" type="failure" /></testcase><testcase name="tempest.api.orchestration.stacks.test_nova_keypair_resources.NovaKeyPairResourcesAWSTest.test_stack_keypairs_output"><failure message="Traceback (most recent call last):&#10;  File &quot;tempest/test.py&quot;, line 274, in setUpClass&#10;    six.reraise(etype, value, trace)&#10;  File &quot;tempest/test.py&quot;, line 262, in setUpClass&#10;    cls.setup_credentials()&#10;  File &quot;tempest/api/orchestration/base.py&quot;, line 38, in setup_credentials&#10;    super(BaseOrchestrationTest, cls).setup_credentials()&#10;  File &quot;tempest/test.py&quot;, line 362, in setup_credentials&#10;    credential_type=credentials_type)&#10;  File &quot;tempest/test.py&quot;, line 536, in get_client_manager&#10;    creds = getattr(cred_provider, credentials_method)()&#10;  File &quot;tempest/common/dynamic_creds.py&quot;, line 303, in get_primary_creds&#10;    return self.get_credentials('primary')&#10;  File &quot;tempest/common/dynamic_creds.py&quot;, line 295, in get_credentials&#10;    credentials.tenant_id)&#10;  File &quot;tempest/common/dynamic_creds.py&quot;, line 212, in _create_network_resources&#10;    router = self._create_router(router_name, tenant_id)&#10;  File &quot;tempest/common/dynamic_creds.py&quot;, line 271, in _create_router&#10;    tenant_id=tenant_id)&#10;  File &quot;tempest/lib/services/network/routers_client.py&quot;, line 27, in create_router&#10;    return self.create_resource(uri, post_body)&#10;  File &quot;tempest/lib/services/network/base.py&quot;, line 60, in create_resource&#10;    resp, body = self.post(req_uri, req_post_data)&#10;  File &quot;tempest/lib/common/rest_client.py&quot;, line 276, in post&#10;    return self.request('POST', url, extra_headers, headers, body, chunked)&#10;  File &quot;tempest/lib/common/rest_client.py&quot;, line 665, in request&#10;    resp, resp_body)&#10;  File &quot;tempest/lib/common/rest_client.py&quot;, line 768, in _error_checker&#10;    raise exceptions.BadRequest(resp_body, resp=resp)&#10;tempest.lib.exceptions.BadRequest: Bad request&#10;Details: {u'message': u&quot;Invalid input for external_gateway_info. Reason: '' is not a valid UUID.&quot;, u'type': u'HTTPBadRequest', u'detail': u''}&#10;" type="failure" /></testcase><testcase name="tempest.api.compute.servers.test_server_actions.ServerActionsTestJSON.test_get_vnc_console"><failure message="Traceback (most recent call last):&#10;  File &quot;tempest/test.py&quot;, line 274, in setUpClass&#10;    six.reraise(etype, value, trace)&#10;  File &quot;tempest/test.py&quot;, line 262, in setUpClass&#10;    cls.setup_credentials()&#10;  File &quot;tempest/api/compute/servers/test_server_actions.py&quot;, line 66, in setup_credentials&#10;    super(ServerActionsTestJSON, cls).setup_credentials()&#10;  File &quot;tempest/api/compute/base.py&quot;, line 61, in setup_credentials&#10;    super(BaseV2ComputeTest, cls).setup_credentials()&#10;  File &quot;tempest/test.py&quot;, line 362, in setup_credentials&#10;    credential_type=credentials_type)&#10;  File &quot;tempest/test.py&quot;, line 536, in get_client_manager&#10;    creds = getattr(cred_provider, credentials_method)()&#10;  File &quot;tempest/common/dynamic_creds.py&quot;, line 303, in get_primary_creds&#10;    return self.get_credentials('primary')&#10;  File &quot;tempest/common/dynamic_creds.py&quot;, line 295, in get_credentials&#10;    credentials.tenant_id)&#10;  File &quot;tempest/common/dynamic_creds.py&quot;, line 212, in _create_network_resources&#10;    router = self._create_router(router_name, tenant_id)&#10;  File &quot;tempest/common/dynamic_creds.py&quot;, line 271, in _create_router&#10;    tenant_id=tenant_id)&#10;  File &quot;tempest/lib/services/network/routers_client.py&quot;, line 27, in create_router&#10;    return self.create_resource(uri, post_body)&#10;  File &quot;tempest/lib/services/network/base.py&quot;, line 60, in create_resource&#10;    resp, body = self.post(req_uri, req_post_data)&#10;  File &quot;tempest/lib/common/rest_client.py&quot;, line 276, in post&#10;    return self.request('POST', url, extra_headers, headers, body, chunked)&#10;  File &quot;tempest/lib/common/rest_client.py&quot;, line 665, in request&#10;    resp, resp_body)&#10;  File &quot;tempest/lib/common/rest_client.py&quot;, line 768, in _error_checker&#10;    raise exceptions.BadRequest(resp_body, resp=resp)&#10;tempest.lib.exceptions.BadRequest: Bad request&#10;Details: {u'message': u&quot;Invalid input for external_gateway_info. Reason: '' is not a valid UUID.&quot;, u'type': u'HTTPBadRequest', u'detail': u''}&#10;" type="failure" /></testcase><testcase name="tempest.api.orchestration.stacks.test_soft_conf.TestSoftwareConfig.test_get_deployment_metadata"><failure message="Traceback (most recent call last):&#10;  File &quot;tempest/test.py&quot;, line 274, in setUpClass&#10;    six.reraise(etype, value, trace)&#10;  File &quot;tempest/test.py&quot;, line 262, in setUpClass&#10;    cls.setup_credentials()&#10;  File &quot;tempest/api/orchestration/base.py&quot;, line 38, in setup_credentials&#10;    super(BaseOrchestrationTest, cls).setup_credentials()&#10;  File &quot;tempest/test.py&quot;, line 362, in setup_credentials&#10;    credential_type=credentials_type)&#10;  File &quot;tempest/test.py&quot;, line 536, in get_client_manager&#10;    creds = getattr(cred_provider, credentials_method)()&#10;  File &quot;tempest/common/dynamic_creds.py&quot;, line 303, in get_primary_creds&#10;    return self.get_credentials('primary')&#10;  File &quot;tempest/common/dynamic_creds.py&quot;, line 295, in get_credentials&#10;    credentials.tenant_id)&#10;  File &quot;tempest/common/dynamic_creds.py&quot;, line 212, in _create_network_resources&#10;    router = self._create_router(router_name, tenant_id)&#10;  File &quot;tempest/common/dynamic_creds.py&quot;, line 271, in _create_router&#10;    tenant_id=tenant_id)&#10;  File &quot;tempest/lib/services/network/routers_client.py&quot;, line 27, in create_router&#10;    return self.create_resource(uri, post_body)&#10;  File &quot;tempest/lib/services/network/base.py&quot;, line 60, in create_resource&#10;    resp, body = self.post(req_uri, req_post_data)&#10;  File &quot;tempest/lib/common/rest_client.py&quot;, line 276, in post&#10;    return self.request('POST', url, extra_headers, headers, body, chunked)&#10;  File &quot;tempest/lib/common/rest_client.py&quot;, line 665, in request&#10;    resp, resp_body)&#10;  File &quot;tempest/lib/common/rest_client.py&quot;, line 768, in _error_checker&#10;    raise exceptions.BadRequest(resp_body, resp=resp)&#10;tempest.lib.exceptions.BadRequest: Bad request&#10;Details: {u'message': u&quot;Invalid input for external_gateway_info. Reason: '' is not a valid UUID.&quot;, u'type': u'HTTPBadRequest', u'detail': u''}&#10;" type="failure" /></testcase><testcase name="tempest.api.compute.servers.test_create_server.ServersTestJSON.test_verify_server_details"><failure message="Traceback (most recent call last):&#10;  File &quot;tempest/test.py&quot;, line 274, in setUpClass&#10;    six.reraise(etype, value, trace)&#10;  File &quot;tempest/test.py&quot;, line 262, in setUpClass&#10;    cls.setup_credentials()&#10;  File &quot;tempest/api/compute/servers/test_create_server.py&quot;, line 35, in setup_credentials&#10;    super(ServersTestJSON, cls).setup_credentials()&#10;  File &quot;tempest/api/compute/base.py&quot;, line 61, in setup_credentials&#10;    super(BaseV2ComputeTest, cls).setup_credentials()&#10;  File &quot;tempest/test.py&quot;, line 362, in setup_credentials&#10;    credential_type=credentials_type)&#10;  File &quot;tempest/test.py&quot;, line 536, in get_client_manager&#10;    creds = getattr(cred_provider, credentials_method)()&#10;  File &quot;tempest/common/dynamic_creds.py&quot;, line 303, in get_primary_creds&#10;    return self.get_credentials('primary')&#10;  File &quot;tempest/common/dynamic_creds.py&quot;, line 295, in get_credentials&#10;    credentials.tenant_id)&#10;  File &quot;tempest/common/dynamic_creds.py&quot;, line 212, in _create_network_resources&#10;    router = self._create_router(router_name, tenant_id)&#10;  File &quot;tempest/common/dynamic_creds.py&quot;, line 271, in _create_router&#10;    tenant_id=tenant_id)&#10;  File &quot;tempest/lib/services/network/routers_client.py&quot;, line 27, in create_router&#10;    return self.create_resource(uri, post_body)&#10;  File &quot;tempest/lib/services/network/base.py&quot;, line 60, in create_resource&#10;    resp, body = self.post(req_uri, req_post_data)&#10;  File &quot;tempest/lib/common/rest_client.py&quot;, line 276, in post&#10;    return self.request('POST', url, extra_headers, headers, body, chunked)&#10;  File &quot;tempest/lib/common/rest_client.py&quot;, line 665, in request&#10;    resp, resp_body)&#10;  File &quot;tempest/lib/common/rest_client.py&quot;, line 768, in _error_checker&#10;    raise exceptions.BadRequest(resp_body, resp=resp)&#10;tempest.lib.exceptions.BadRequest: Bad request&#10;Details: {u'message': u&quot;Invalid input for external_gateway_info. Reason: '' is not a valid UUID.&quot;, u'type': u'HTTPBadRequest', u'detail': u''}&#10;" type="failure" /></testcase><testcase name="tempest.api.network.admin.test_floating_ips_admin_actions.FloatingIPAdminTestJSON.test_list_floating_ips_from_admin_and_nonadmin"><failure message="Traceback (most recent call last):&#10;  File &quot;tempest/test.py&quot;, line 274, in setUpClass&#10;    six.reraise(etype, value, trace)&#10;  File &quot;tempest/test.py&quot;, line 267, in setUpClass&#10;    cls.resource_setup()&#10;  File &quot;tempest/api/network/admin/test_floating_ips_admin_actions.py&quot;, line 44, in resource_setup&#10;    cls.floating_ip = cls.create_floatingip(cls.ext_net_id)&#10;  File &quot;tempest/api/network/base.py&quot;, line 227, in create_floatingip&#10;    floating_network_id=external_network_id)&#10;  File &quot;tempest/lib/services/network/floating_ips_client.py&quot;, line 30, in create_floatingip&#10;    return self.create_resource(uri, post_data)&#10;  File &quot;tempest/lib/services/network/base.py&quot;, line 60, in create_resource&#10;    resp, body = self.post(req_uri, req_post_data)&#10;  File &quot;tempest/lib/common/rest_client.py&quot;, line 276, in post&#10;    return self.request('POST', url, extra_headers, headers, body, chunked)&#10;  File &quot;tempest/lib/common/rest_client.py&quot;, line 665, in request&#10;    resp, resp_body)&#10;  File &quot;tempest/lib/common/rest_client.py&quot;, line 768, in _error_checker&#10;    raise exceptions.BadRequest(resp_body, resp=resp)&#10;tempest.lib.exceptions.BadRequest: Bad request&#10;Details: {u'message': u&quot;Invalid input for floating_network_id. Reason: '' is not a valid UUID.&quot;, u'type': u'HTTPBadRequest', u'detail': u''}&#10;" type="failure" /></testcase><testcase name="tempest.api.compute.servers.test_server_rescue_negative.ServerRescueNegativeTestJSON.test_rescue_paused_instance"><failure message="Traceback (most recent call last):&#10;  File &quot;tempest/test.py&quot;, line 274, in setUpClass&#10;    six.reraise(etype, value, trace)&#10;  File &quot;tempest/test.py&quot;, line 262, in setUpClass&#10;    cls.setup_credentials()&#10;  File &quot;tempest/api/compute/servers/test_server_rescue_negative.py&quot;, line 40, in setup_credentials&#10;    super(ServerRescueNegativeTestJSON, cls).setup_credentials()&#10;  File &quot;tempest/api/compute/base.py&quot;, line 61, in setup_credentials&#10;    super(BaseV2ComputeTest, cls).setup_credentials()&#10;  File &quot;tempest/test.py&quot;, line 362, in setup_credentials&#10;    credential_type=credentials_type)&#10;  File &quot;tempest/test.py&quot;, line 536, in get_client_manager&#10;    creds = getattr(cred_provider, credentials_method)()&#10;  File &quot;tempest/common/dynamic_creds.py&quot;, line 303, in get_primary_creds&#10;    return self.get_credentials('primary')&#10;  File &quot;tempest/common/dynamic_creds.py&quot;, line 295, in get_credentials&#10;    credentials.tenant_id)&#10;  File &quot;tempest/common/dynamic_creds.py&quot;, line 212, in _create_network_resources&#10;    router = self._create_router(router_name, tenant_id)&#10;  File &quot;tempest/common/dynamic_creds.py&quot;, line 271, in _create_router&#10;    tenant_id=tenant_id)&#10;  File &quot;tempest/lib/services/network/routers_client.py&quot;, line 27, in create_router&#10;    return self.create_resource(uri, post_body)&#10;  File &quot;tempest/lib/services/network/base.py&quot;, line 60, in create_resource&#10;    resp, body = self.post(req_uri, req_post_data)&#10;  File &quot;tempest/lib/common/rest_client.py&quot;, line 276, in post&#10;    return self.request('POST', url, extra_headers, headers, body, chunked)&#10;  File &quot;tempest/lib/common/rest_client.py&quot;, line 665, in request&#10;    resp, resp_body)&#10;  File &quot;tempest/lib/common/rest_client.py&quot;, line 768, in _error_checker&#10;    raise exceptions.BadRequest(resp_body, resp=resp)&#10;tempest.lib.exceptions.BadRequest: Bad request&#10;Details: {u'message': u&quot;Invalid input for external_gateway_info. Reason: '' is not a valid UUID.&quot;, u'type': u'HTTPBadRequest', u'detail': u''}&#10;" type="failure" /></testcase><testcase name="tempest.api.compute.servers.test_create_server.ServersTestManualDisk.test_verify_multiple_nics_order"><failure message="Traceback (most recent call last):&#10;  File &quot;tempest/test.py&quot;, line 274, in setUpClass&#10;    six.reraise(etype, value, trace)&#10;  File &quot;tempest/test.py&quot;, line 262, in setUpClass&#10;    cls.setup_credentials()&#10;  File &quot;tempest/api/compute/servers/test_create_server.py&quot;, line 35, in setup_credentials&#10;    super(ServersTestJSON, cls).setup_credentials()&#10;  File &quot;tempest/api/compute/base.py&quot;, line 61, in setup_credentials&#10;    super(BaseV2ComputeTest, cls).setup_credentials()&#10;  File &quot;tempest/test.py&quot;, line 362, in setup_credentials&#10;    credential_type=credentials_type)&#10;  File &quot;tempest/test.py&quot;, line 536, in get_client_manager&#10;    creds = getattr(cred_provider, credentials_method)()&#10;  File &quot;tempest/common/dynamic_creds.py&quot;, line 303, in get_primary_creds&#10;    return self.get_credentials('primary')&#10;  File &quot;tempest/common/dynamic_creds.py&quot;, line 295, in get_credentials&#10;    credentials.tenant_id)&#10;  File &quot;tempest/common/dynamic_creds.py&quot;, line 212, in _create_network_resources&#10;    router = self._create_router(router_name, tenant_id)&#10;  File &quot;tempest/common/dynamic_creds.py&quot;, line 271, in _create_router&#10;    tenant_id=tenant_id)&#10;  File &quot;tempest/lib/services/network/routers_client.py&quot;, line 27, in create_router&#10;    return self.create_resource(uri, post_body)&#10;  File &quot;tempest/lib/services/network/base.py&quot;, line 60, in create_resource&#10;    resp, body = self.post(req_uri, req_post_data)&#10;  File &quot;tempest/lib/common/rest_client.py&quot;, line 276, in post&#10;    return self.request('POST', url, extra_headers, headers, body, chunked)&#10;  File &quot;tempest/lib/common/rest_client.py&quot;, line 665, in request&#10;    resp, resp_body)&#10;  File &quot;tempest/lib/common/rest_client.py&quot;, line 768, in _error_checker&#10;    raise exceptions.BadRequest(resp_body, resp=resp)&#10;tempest.lib.exceptions.BadRequest: Bad request&#10;Details: {u'message': u&quot;Invalid input for external_gateway_info. Reason: '' is not a valid UUID.&quot;, u'type': u'HTTPBadRequest', u'detail': u''}&#10;" type="failure" /></testcase><testcase name="tempest.api.network.test_routers.RoutersTest.test_update_router_set_gateway_without_snat"><failure message="Traceback (most recent call last):&#10;  File &quot;tempest/test.py&quot;, line 152, in wrapper&#10;    return func(*func_args, **func_kwargs)&#10;  File &quot;tempest/api/network/test_routers.py&quot;, line 235, in test_update_router_set_gateway_without_snat&#10;    'enable_snat': False})&#10;  File &quot;tempest/lib/services/network/routers_client.py&quot;, line 38, in update_router&#10;    return self.update_resource(uri, update_body)&#10;  File &quot;tempest/lib/services/network/base.py&quot;, line 74, in update_resource&#10;    resp, body = self.put(req_uri, req_post_data)&#10;  File &quot;tempest/lib/common/rest_client.py&quot;, line 340, in put&#10;    return self.request('PUT', url, extra_headers, headers, body, chunked)&#10;  File &quot;tempest/lib/common/rest_client.py&quot;, line 665, in request&#10;    resp, resp_body)&#10;  File &quot;tempest/lib/common/rest_client.py&quot;, line 768, in _error_checker&#10;    raise exceptions.BadRequest(resp_body, resp=resp)&#10;tempest.lib.exceptions.BadRequest: Bad request&#10;Details: {u'message': u&quot;Invalid input for external_gateway_info. Reason: '' is not a valid UUID.&quot;, u'type': u'HTTPBadRequest', u'detail': u''}&#10;" type="failure" /></testcase><testcase name="tempest.api.compute.servers.test_server_actions.ServerActionsTestJSON.test_rebuild_server_in_stop_state"><failure message="Traceback (most recent call last):&#10;  File &quot;tempest/test.py&quot;, line 274, in setUpClass&#10;    six.reraise(etype, value, trace)&#10;  File &quot;tempest/test.py&quot;, line 262, in setUpClass&#10;    cls.setup_credentials()&#10;  File &quot;tempest/api/compute/servers/test_server_actions.py&quot;, line 66, in setup_credentials&#10;    super(ServerActionsTestJSON, cls).setup_credentials()&#10;  File &quot;tempest/api/compute/base.py&quot;, line 61, in setup_credentials&#10;    super(BaseV2ComputeTest, cls).setup_credentials()&#10;  File &quot;tempest/test.py&quot;, line 362, in setup_credentials&#10;    credential_type=credentials_type)&#10;  File &quot;tempest/test.py&quot;, line 536, in get_client_manager&#10;    creds = getattr(cred_provider, credentials_method)()&#10;  File &quot;tempest/common/dynamic_creds.py&quot;, line 303, in get_primary_creds&#10;    return self.get_credentials('primary')&#10;  File &quot;tempest/common/dynamic_creds.py&quot;, line 295, in get_credentials&#10;    credentials.tenant_id)&#10;  File &quot;tempest/common/dynamic_creds.py&quot;, line 212, in _create_network_resources&#10;    router = self._create_router(router_name, tenant_id)&#10;  File &quot;tempest/common/dynamic_creds.py&quot;, line 271, in _create_router&#10;    tenant_id=tenant_id)&#10;  File &quot;tempest/lib/services/network/routers_client.py&quot;, line 27, in create_router&#10;    return self.create_resource(uri, post_body)&#10;  File &quot;tempest/lib/services/network/base.py&quot;, line 60, in create_resource&#10;    resp, body = self.post(req_uri, req_post_data)&#10;  File &quot;tempest/lib/common/rest_client.py&quot;, line 276, in post&#10;    return self.request('POST', url, extra_headers, headers, body, chunked)&#10;  File &quot;tempest/lib/common/rest_client.py&quot;, line 665, in request&#10;    resp, resp_body)&#10;  File &quot;tempest/lib/common/rest_client.py&quot;, line 768, in _error_checker&#10;    raise exceptions.BadRequest(resp_body, resp=resp)&#10;tempest.lib.exceptions.BadRequest: Bad request&#10;Details: {u'message': u&quot;Invalid input for external_gateway_info. Reason: '' is not a valid UUID.&quot;, u'type': u'HTTPBadRequest', u'detail': u''}&#10;" type="failure" /></testcase><testcase name="tempest.api.network.test_routers.RoutersIpV6Test.test_update_router_reset_gateway_without_snat"><failure message="Traceback (most recent call last):&#10;  File &quot;tempest/test.py&quot;, line 152, in wrapper&#10;    return func(*func_args, **func_kwargs)&#10;  File &quot;tempest/api/network/test_routers.py&quot;, line 266, in test_update_router_reset_gateway_without_snat&#10;    'enable_snat': False})&#10;  File &quot;tempest/lib/services/network/routers_client.py&quot;, line 38, in update_router&#10;    return self.update_resource(uri, update_body)&#10;  File &quot;tempest/lib/services/network/base.py&quot;, line 74, in update_resource&#10;    resp, body = self.put(req_uri, req_post_data)&#10;  File &quot;tempest/lib/common/rest_client.py&quot;, line 340, in put&#10;    return self.request('PUT', url, extra_headers, headers, body, chunked)&#10;  File &quot;tempest/lib/common/rest_client.py&quot;, line 665, in request&#10;    resp, resp_body)&#10;  File &quot;tempest/lib/common/rest_client.py&quot;, line 768, in _error_checker&#10;    raise exceptions.BadRequest(resp_body, resp=resp)&#10;tempest.lib.exceptions.BadRequest: Bad request&#10;Details: {u'message': u&quot;Invalid input for external_gateway_info. Reason: '' is not a valid UUID.&quot;, u'type': u'HTTPBadRequest', u'detail': u''}&#10;" type="failure" /></testcase><testcase name="tempest.api.orchestration.stacks.test_non_empty_stack.StacksTestJSON.test_show_resource"><failure message="Traceback (most recent call last):&#10;  File &quot;tempest/test.py&quot;, line 274, in setUpClass&#10;    six.reraise(etype, value, trace)&#10;  File &quot;tempest/test.py&quot;, line 262, in setUpClass&#10;    cls.setup_credentials()&#10;  File &quot;tempest/api/orchestration/base.py&quot;, line 38, in setup_credentials&#10;    super(BaseOrchestrationTest, cls).setup_credentials()&#10;  File &quot;tempest/test.py&quot;, line 362, in setup_credentials&#10;    credential_type=credentials_type)&#10;  File &quot;tempest/test.py&quot;, line 536, in get_client_manager&#10;    creds = getattr(cred_provider, credentials_method)()&#10;  File &quot;tempest/common/dynamic_creds.py&quot;, line 303, in get_primary_creds&#10;    return self.get_credentials('primary')&#10;  File &quot;tempest/common/dynamic_creds.py&quot;, line 295, in get_credentials&#10;    credentials.tenant_id)&#10;  File &quot;tempest/common/dynamic_creds.py&quot;, line 212, in _create_network_resources&#10;    router = self._create_router(router_name, tenant_id)&#10;  File &quot;tempest/common/dynamic_creds.py&quot;, line 271, in _create_router&#10;    tenant_id=tenant_id)&#10;  File &quot;tempest/lib/services/network/routers_client.py&quot;, line 27, in create_router&#10;    return self.create_resource(uri, post_body)&#10;  File &quot;tempest/lib/services/network/base.py&quot;, line 60, in create_resource&#10;    resp, body = self.post(req_uri, req_post_data)&#10;  File &quot;tempest/lib/common/rest_client.py&quot;, line 276, in post&#10;    return self.request('POST', url, extra_headers, headers, body, chunked)&#10;  File &quot;tempest/lib/common/rest_client.py&quot;, line 665, in request&#10;    resp, resp_body)&#10;  File &quot;tempest/lib/common/rest_client.py&quot;, line 768, in _error_checker&#10;    raise exceptions.BadRequest(resp_body, resp=resp)&#10;tempest.lib.exceptions.BadRequest: Bad request&#10;Details: {u'message': u&quot;Invalid input for external_gateway_info. Reason: '' is not a valid UUID.&quot;, u'type': u'HTTPBadRequest', u'detail': u''}&#10;" type="failure" /></testcase><testcase name="tempest.api.orchestration.stacks.test_templates_negative.TemplateYAMLNegativeTestJSON.test_validate_template_url"><failure message="Traceback (most recent call last):&#10;  File &quot;tempest/test.py&quot;, line 274, in setUpClass&#10;    six.reraise(etype, value, trace)&#10;  File &quot;tempest/test.py&quot;, line 262, in setUpClass&#10;    cls.setup_credentials()&#10;  File &quot;tempest/api/orchestration/base.py&quot;, line 38, in setup_credentials&#10;    super(BaseOrchestrationTest, cls).setup_credentials()&#10;  File &quot;tempest/test.py&quot;, line 362, in setup_credentials&#10;    credential_type=credentials_type)&#10;  File &quot;tempest/test.py&quot;, line 536, in get_client_manager&#10;    creds = getattr(cred_provider, credentials_method)()&#10;  File &quot;tempest/common/dynamic_creds.py&quot;, line 303, in get_primary_creds&#10;    return self.get_credentials('primary')&#10;  File &quot;tempest/common/dynamic_creds.py&quot;, line 295, in get_credentials&#10;    credentials.tenant_id)&#10;  File &quot;tempest/common/dynamic_creds.py&quot;, line 212, in _create_network_resources&#10;    router = self._create_router(router_name, tenant_id)&#10;  File &quot;tempest/common/dynamic_creds.py&quot;, line 271, in _create_router&#10;    tenant_id=tenant_id)&#10;  File &quot;tempest/lib/services/network/routers_client.py&quot;, line 27, in create_router&#10;    return self.create_resource(uri, post_body)&#10;  File &quot;tempest/lib/services/network/base.py&quot;, line 60, in create_resource&#10;    resp, body = self.post(req_uri, req_post_data)&#10;  File &quot;tempest/lib/common/rest_client.py&quot;, line 276, in post&#10;    return self.request('POST', url, extra_headers, headers, body, chunked)&#10;  File &quot;tempest/lib/common/rest_client.py&quot;, line 665, in request&#10;    resp, resp_body)&#10;  File &quot;tempest/lib/common/rest_client.py&quot;, line 768, in _error_checker&#10;    raise exceptions.BadRequest(resp_body, resp=resp)&#10;tempest.lib.exceptions.BadRequest: Bad request&#10;Details: {u'message': u&quot;Invalid input for external_gateway_info. Reason: '' is not a valid UUID.&quot;, u'type': u'HTTPBadRequest', u'detail': u''}&#10;" type="failure" /></testcase><testcase name="tempest.api.network.test_routers.RoutersTest.test_create_router_with_default_snat_value"><failure message="Traceback (most recent call last):&#10;  File &quot;tempest/test.py&quot;, line 152, in wrapper&#10;    return func(*func_args, **func_kwargs)&#10;  File &quot;tempest/api/network/test_routers.py&quot;, line 114, in test_create_router_with_default_snat_value&#10;    'enable_snat': True})&#10;  File &quot;tempest/api/network/test_routers.py&quot;, line 183, in _verify_router_gateway&#10;    self.assertEqual(v, actual_ext_gw_info[k])&#10;TypeError: 'NoneType' object has no attribute '__getitem__'&#10;" type="failure" /></testcase><testcase name="tempest.api.orchestration.stacks.test_non_empty_stack.StacksTestJSON.test_stack_list"><failure message="Traceback (most recent call last):&#10;  File &quot;tempest/test.py&quot;, line 274, in setUpClass&#10;    six.reraise(etype, value, trace)&#10;  File &quot;tempest/test.py&quot;, line 262, in setUpClass&#10;    cls.setup_credentials()&#10;  File &quot;tempest/api/orchestration/base.py&quot;, line 38, in setup_credentials&#10;    super(BaseOrchestrationTest, cls).setup_credentials()&#10;  File &quot;tempest/test.py&quot;, line 362, in setup_credentials&#10;    credential_type=credentials_type)&#10;  File &quot;tempest/test.py&quot;, line 536, in get_client_manager&#10;    creds = getattr(cred_provider, credentials_method)()&#10;  File &quot;tempest/common/dynamic_creds.py&quot;, line 303, in get_primary_creds&#10;    return self.get_credentials('primary')&#10;  File &quot;tempest/common/dynamic_creds.py&quot;, line 295, in get_credentials&#10;    credentials.tenant_id)&#10;  File &quot;tempest/common/dynamic_creds.py&quot;, line 212, in _create_network_resources&#10;    router = self._create_router(router_name, tenant_id)&#10;  File &quot;tempest/common/dynamic_creds.py&quot;, line 271, in _create_router&#10;    tenant_id=tenant_id)&#10;  File &quot;tempest/lib/services/network/routers_client.py&quot;, line 27, in create_router&#10;    return self.create_resource(uri, post_body)&#10;  File &quot;tempest/lib/services/network/base.py&quot;, line 60, in create_resource&#10;    resp, body = self.post(req_uri, req_post_data)&#10;  File &quot;tempest/lib/common/rest_client.py&quot;, line 276, in post&#10;    return self.request('POST', url, extra_headers, headers, body, chunked)&#10;  File &quot;tempest/lib/common/rest_client.py&quot;, line 665, in request&#10;    resp, resp_body)&#10;  File &quot;tempest/lib/common/rest_client.py&quot;, line 768, in _error_checker&#10;    raise exceptions.BadRequest(resp_body, resp=resp)&#10;tempest.lib.exceptions.BadRequest: Bad request&#10;Details: {u'message': u&quot;Invalid input for external_gateway_info. Reason: '' is not a valid UUID.&quot;, u'type': u'HTTPBadRequest', u'detail': u''}&#10;" type="failure" /></testcase><testcase name="tempest.api.orchestration.stacks.test_non_empty_stack.StacksTestJSON.test_list_resources"><failure message="Traceback (most recent call last):&#10;  File &quot;tempest/test.py&quot;, line 274, in setUpClass&#10;    six.reraise(etype, value, trace)&#10;  File &quot;tempest/test.py&quot;, line 262, in setUpClass&#10;    cls.setup_credentials()&#10;  File &quot;tempest/api/orchestration/base.py&quot;, line 38, in setup_credentials&#10;    super(BaseOrchestrationTest, cls).setup_credentials()&#10;  File &quot;tempest/test.py&quot;, line 362, in setup_credentials&#10;    credential_type=credentials_type)&#10;  File &quot;tempest/test.py&quot;, line 536, in get_client_manager&#10;    creds = getattr(cred_provider, credentials_method)()&#10;  File &quot;tempest/common/dynamic_creds.py&quot;, line 303, in get_primary_creds&#10;    return self.get_credentials('primary')&#10;  File &quot;tempest/common/dynamic_creds.py&quot;, line 295, in get_credentials&#10;    credentials.tenant_id)&#10;  File &quot;tempest/common/dynamic_creds.py&quot;, line 212, in _create_network_resources&#10;    router = self._create_router(router_name, tenant_id)&#10;  File &quot;tempest/common/dynamic_creds.py&quot;, line 271, in _create_router&#10;    tenant_id=tenant_id)&#10;  File &quot;tempest/lib/services/network/routers_client.py&quot;, line 27, in create_router&#10;    return self.create_resource(uri, post_body)&#10;  File &quot;tempest/lib/services/network/base.py&quot;, line 60, in create_resource&#10;    resp, body = self.post(req_uri, req_post_data)&#10;  File &quot;tempest/lib/common/rest_client.py&quot;, line 276, in post&#10;    return self.request('POST', url, extra_headers, headers, body, chunked)&#10;  File &quot;tempest/lib/common/rest_client.py&quot;, line 665, in request&#10;    resp, resp_body)&#10;  File &quot;tempest/lib/common/rest_client.py&quot;, line 768, in _error_checker&#10;    raise exceptions.BadRequest(resp_body, resp=resp)&#10;tempest.lib.exceptions.BadRequest: Bad request&#10;Details: {u'message': u&quot;Invalid input for external_gateway_info. Reason: '' is not a valid UUID.&quot;, u'type': u'HTTPBadRequest', u'detail': u''}&#10;" type="failure" /></testcase><testcase name="tempest.api.compute.servers.test_create_server.ServersTestJSON.test_verify_duplicate_network_nics"><failure message="Traceback (most recent call last):&#10;  File &quot;tempest/test.py&quot;, line 274, in setUpClass&#10;    six.reraise(etype, value, trace)&#10;  File &quot;tempest/test.py&quot;, line 262, in setUpClass&#10;    cls.setup_credentials()&#10;  File &quot;tempest/api/compute/servers/test_create_server.py&quot;, line 35, in setup_credentials&#10;    super(ServersTestJSON, cls).setup_credentials()&#10;  File &quot;tempest/api/compute/base.py&quot;, line 61, in setup_credentials&#10;    super(BaseV2ComputeTest, cls).setup_credentials()&#10;  File &quot;tempest/test.py&quot;, line 362, in setup_credentials&#10;    credential_type=credentials_type)&#10;  File &quot;tempest/test.py&quot;, line 536, in get_client_manager&#10;    creds = getattr(cred_provider, credentials_method)()&#10;  File &quot;tempest/common/dynamic_creds.py&quot;, line 303, in get_primary_creds&#10;    return self.get_credentials('primary')&#10;  File &quot;tempest/common/dynamic_creds.py&quot;, line 295, in get_credentials&#10;    credentials.tenant_id)&#10;  File &quot;tempest/common/dynamic_creds.py&quot;, line 212, in _create_network_resources&#10;    router = self._create_router(router_name, tenant_id)&#10;  File &quot;tempest/common/dynamic_creds.py&quot;, line 271, in _create_router&#10;    tenant_id=tenant_id)&#10;  File &quot;tempest/lib/services/network/routers_client.py&quot;, line 27, in create_router&#10;    return self.create_resource(uri, post_body)&#10;  File &quot;tempest/lib/services/network/base.py&quot;, line 60, in create_resource&#10;    resp, body = self.post(req_uri, req_post_data)&#10;  File &quot;tempest/lib/common/rest_client.py&quot;, line 276, in post&#10;    return self.request('POST', url, extra_headers, headers, body, chunked)&#10;  File &quot;tempest/lib/common/rest_client.py&quot;, line 665, in request&#10;    resp, resp_body)&#10;  File &quot;tempest/lib/common/rest_client.py&quot;, line 768, in _error_checker&#10;    raise exceptions.BadRequest(resp_body, resp=resp)&#10;tempest.lib.exceptions.BadRequest: Bad request&#10;Details: {u'message': u&quot;Invalid input for external_gateway_info. Reason: '' is not a valid UUID.&quot;, u'type': u'HTTPBadRequest', u'detail': u''}&#10;" type="failure" /></testcase><testcase name="tempest.api.compute.servers.test_server_actions.ServerActionsTestJSON.test_reboot_server_soft"><failure message="Traceback (most recent call last):&#10;  File &quot;tempest/test.py&quot;, line 274, in setUpClass&#10;    six.reraise(etype, value, trace)&#10;  File &quot;tempest/test.py&quot;, line 262, in setUpClass&#10;    cls.setup_credentials()&#10;  File &quot;tempest/api/compute/servers/test_server_actions.py&quot;, line 66, in setup_credentials&#10;    super(ServerActionsTestJSON, cls).setup_credentials()&#10;  File &quot;tempest/api/compute/base.py&quot;, line 61, in setup_credentials&#10;    super(BaseV2ComputeTest, cls).setup_credentials()&#10;  File &quot;tempest/test.py&quot;, line 362, in setup_credentials&#10;    credential_type=credentials_type)&#10;  File &quot;tempest/test.py&quot;, line 536, in get_client_manager&#10;    creds = getattr(cred_provider, credentials_method)()&#10;  File &quot;tempest/common/dynamic_creds.py&quot;, line 303, in get_primary_creds&#10;    return self.get_credentials('primary')&#10;  File &quot;tempest/common/dynamic_creds.py&quot;, line 295, in get_credentials&#10;    credentials.tenant_id)&#10;  File &quot;tempest/common/dynamic_creds.py&quot;, line 212, in _create_network_resources&#10;    router = self._create_router(router_name, tenant_id)&#10;  File &quot;tempest/common/dynamic_creds.py&quot;, line 271, in _create_router&#10;    tenant_id=tenant_id)&#10;  File &quot;tempest/lib/services/network/routers_client.py&quot;, line 27, in create_router&#10;    return self.create_resource(uri, post_body)&#10;  File &quot;tempest/lib/services/network/base.py&quot;, line 60, in create_resource&#10;    resp, body = self.post(req_uri, req_post_data)&#10;  File &quot;tempest/lib/common/rest_client.py&quot;, line 276, in post&#10;    return self.request('POST', url, extra_headers, headers, body, chunked)&#10;  File &quot;tempest/lib/common/rest_client.py&quot;, line 665, in request&#10;    resp, resp_body)&#10;  File &quot;tempest/lib/common/rest_client.py&quot;, line 768, in _error_checker&#10;    raise exceptions.BadRequest(resp_body, resp=resp)&#10;tempest.lib.exceptions.BadRequest: Bad request&#10;Details: {u'message': u&quot;Invalid input for external_gateway_info. Reason: '' is not a valid UUID.&quot;, u'type': u'HTTPBadRequest', u'detail': u''}&#10;" type="failure" /></testcase><testcase name="tempest.api.orchestration.stacks.test_soft_conf.TestSoftwareConfig.test_get_deployment_list"><failure message="Traceback (most recent call last):&#10;  File &quot;tempest/test.py&quot;, line 274, in setUpClass&#10;    six.reraise(etype, value, trace)&#10;  File &quot;tempest/test.py&quot;, line 262, in setUpClass&#10;    cls.setup_credentials()&#10;  File &quot;tempest/api/orchestration/base.py&quot;, line 38, in setup_credentials&#10;    super(BaseOrchestrationTest, cls).setup_credentials()&#10;  File &quot;tempest/test.py&quot;, line 362, in setup_credentials&#10;    credential_type=credentials_type)&#10;  File &quot;tempest/test.py&quot;, line 536, in get_client_manager&#10;    creds = getattr(cred_provider, credentials_method)()&#10;  File &quot;tempest/common/dynamic_creds.py&quot;, line 303, in get_primary_creds&#10;    return self.get_credentials('primary')&#10;  File &quot;tempest/common/dynamic_creds.py&quot;, line 295, in get_credentials&#10;    credentials.tenant_id)&#10;  File &quot;tempest/common/dynamic_creds.py&quot;, line 212, in _create_network_resources&#10;    router = self._create_router(router_name, tenant_id)&#10;  File &quot;tempest/common/dynamic_creds.py&quot;, line 271, in _create_router&#10;    tenant_id=tenant_id)&#10;  File &quot;tempest/lib/services/network/routers_client.py&quot;, line 27, in create_router&#10;    return self.create_resource(uri, post_body)&#10;  File &quot;tempest/lib/services/network/base.py&quot;, line 60, in create_resource&#10;    resp, body = self.post(req_uri, req_post_data)&#10;  File &quot;tempest/lib/common/rest_client.py&quot;, line 276, in post&#10;    return self.request('POST', url, extra_headers, headers, body, chunked)&#10;  File &quot;tempest/lib/common/rest_client.py&quot;, line 665, in request&#10;    resp, resp_body)&#10;  File &quot;tempest/lib/common/rest_client.py&quot;, line 768, in _error_checker&#10;    raise exceptions.BadRequest(resp_body, resp=resp)&#10;tempest.lib.exceptions.BadRequest: Bad request&#10;Details: {u'message': u&quot;Invalid input for external_gateway_info. Reason: '' is not a valid UUID.&quot;, u'type': u'HTTPBadRequest', u'detail': u''}&#10;" type="failure" /></testcase><testcase name="tempest.api.compute.floating_ips.test_floating_ips_actions_negative.FloatingIPsNegativeTestJSON.test_associate_nonexistent_floating_ip"><failure message="Traceback (most recent call last):&#10;  File &quot;tempest/test.py&quot;, line 274, in setUpClass&#10;    six.reraise(etype, value, trace)&#10;  File &quot;tempest/test.py&quot;, line 262, in setUpClass&#10;    cls.setup_credentials()&#10;  File &quot;tempest/api/compute/floating_ips/base.py&quot;, line 26, in setup_credentials&#10;    super(BaseFloatingIPsTest, cls).setup_credentials()&#10;  File &quot;tempest/api/compute/base.py&quot;, line 61, in setup_credentials&#10;    super(BaseV2ComputeTest, cls).setup_credentials()&#10;  File &quot;tempest/test.py&quot;, line 362, in setup_credentials&#10;    credential_type=credentials_type)&#10;  File &quot;tempest/test.py&quot;, line 536, in get_client_manager&#10;    creds = getattr(cred_provider, credentials_method)()&#10;  File &quot;tempest/common/dynamic_creds.py&quot;, line 303, in get_primary_creds&#10;    return self.get_credentials('primary')&#10;  File &quot;tempest/common/dynamic_creds.py&quot;, line 295, in get_credentials&#10;    credentials.tenant_id)&#10;  File &quot;tempest/common/dynamic_creds.py&quot;, line 212, in _create_network_resources&#10;    router = self._create_router(router_name, tenant_id)&#10;  File &quot;tempest/common/dynamic_creds.py&quot;, line 271, in _create_router&#10;    tenant_id=tenant_id)&#10;  File &quot;tempest/lib/services/network/routers_client.py&quot;, line 27, in create_router&#10;    return self.create_resource(uri, post_body)&#10;  File &quot;tempest/lib/services/network/base.py&quot;, line 60, in create_resource&#10;    resp, body = self.post(req_uri, req_post_data)&#10;  File &quot;tempest/lib/common/rest_client.py&quot;, line 276, in post&#10;    return self.request('POST', url, extra_headers, headers, body, chunked)&#10;  File &quot;tempest/lib/common/rest_client.py&quot;, line 665, in request&#10;    resp, resp_body)&#10;  File &quot;tempest/lib/common/rest_client.py&quot;, line 768, in _error_checker&#10;    raise exceptions.BadRequest(resp_body, resp=resp)&#10;tempest.lib.exceptions.BadRequest: Bad request&#10;Details: {u'message': u&quot;Invalid input for external_gateway_info. Reason: '' is not a valid UUID.&quot;, u'type': u'HTTPBadRequest', u'detail': u''}&#10;" type="failure" /></testcase><testcase name="tempest.api.compute.servers.test_server_actions.ServerActionsTestJSON.test_reboot_server_hard"><failure message="Traceback (most recent call last):&#10;  File &quot;tempest/test.py&quot;, line 274, in setUpClass&#10;    six.reraise(etype, value, trace)&#10;  File &quot;tempest/test.py&quot;, line 262, in setUpClass&#10;    cls.setup_credentials()&#10;  File &quot;tempest/api/compute/servers/test_server_actions.py&quot;, line 66, in setup_credentials&#10;    super(ServerActionsTestJSON, cls).setup_credentials()&#10;  File &quot;tempest/api/compute/base.py&quot;, line 61, in setup_credentials&#10;    super(BaseV2ComputeTest, cls).setup_credentials()&#10;  File &quot;tempest/test.py&quot;, line 362, in setup_credentials&#10;    credential_type=credentials_type)&#10;  File &quot;tempest/test.py&quot;, line 536, in get_client_manager&#10;    creds = getattr(cred_provider, credentials_method)()&#10;  File &quot;tempest/common/dynamic_creds.py&quot;, line 303, in get_primary_creds&#10;    return self.get_credentials('primary')&#10;  File &quot;tempest/common/dynamic_creds.py&quot;, line 295, in get_credentials&#10;    credentials.tenant_id)&#10;  File &quot;tempest/common/dynamic_creds.py&quot;, line 212, in _create_network_resources&#10;    router = self._create_router(router_name, tenant_id)&#10;  File &quot;tempest/common/dynamic_creds.py&quot;, line 271, in _create_router&#10;    tenant_id=tenant_id)&#10;  File &quot;tempest/lib/services/network/routers_client.py&quot;, line 27, in create_router&#10;    return self.create_resource(uri, post_body)&#10;  File &quot;tempest/lib/services/network/base.py&quot;, line 60, in create_resource&#10;    resp, body = self.post(req_uri, req_post_data)&#10;  File &quot;tempest/lib/common/rest_client.py&quot;, line 276, in post&#10;    return self.request('POST', url, extra_headers, headers, body, chunked)&#10;  File &quot;tempest/lib/common/rest_client.py&quot;, line 665, in request&#10;    resp, resp_body)&#10;  File &quot;tempest/lib/common/rest_client.py&quot;, line 768, in _error_checker&#10;    raise exceptions.BadRequest(resp_body, resp=resp)&#10;tempest.lib.exceptions.BadRequest: Bad request&#10;Details: {u'message': u&quot;Invalid input for external_gateway_info. Reason: '' is not a valid UUID.&quot;, u'type': u'HTTPBadRequest', u'detail': u''}&#10;" type="failure" /></testcase><testcase name="tempest.api.compute.floating_ips.test_floating_ips_actions_negative.FloatingIPsNegativeTestJSON.test_associate_ip_to_server_without_passing_floating_ip"><failure message="Traceback (most recent call last):&#10;  File &quot;tempest/test.py&quot;, line 274, in setUpClass&#10;    six.reraise(etype, value, trace)&#10;  File &quot;tempest/test.py&quot;, line 262, in setUpClass&#10;    cls.setup_credentials()&#10;  File &quot;tempest/api/compute/floating_ips/base.py&quot;, line 26, in setup_credentials&#10;    super(BaseFloatingIPsTest, cls).setup_credentials()&#10;  File &quot;tempest/api/compute/base.py&quot;, line 61, in setup_credentials&#10;    super(BaseV2ComputeTest, cls).setup_credentials()&#10;  File &quot;tempest/test.py&quot;, line 362, in setup_credentials&#10;    credential_type=credentials_type)&#10;  File &quot;tempest/test.py&quot;, line 536, in get_client_manager&#10;    creds = getattr(cred_provider, credentials_method)()&#10;  File &quot;tempest/common/dynamic_creds.py&quot;, line 303, in get_primary_creds&#10;    return self.get_credentials('primary')&#10;  File &quot;tempest/common/dynamic_creds.py&quot;, line 295, in get_credentials&#10;    credentials.tenant_id)&#10;  File &quot;tempest/common/dynamic_creds.py&quot;, line 212, in _create_network_resources&#10;    router = self._create_router(router_name, tenant_id)&#10;  File &quot;tempest/common/dynamic_creds.py&quot;, line 271, in _create_router&#10;    tenant_id=tenant_id)&#10;  File &quot;tempest/lib/services/network/routers_client.py&quot;, line 27, in create_router&#10;    return self.create_resource(uri, post_body)&#10;  File &quot;tempest/lib/services/network/base.py&quot;, line 60, in create_resource&#10;    resp, body = self.post(req_uri, req_post_data)&#10;  File &quot;tempest/lib/common/rest_client.py&quot;, line 276, in post&#10;    return self.request('POST', url, extra_headers, headers, body, chunked)&#10;  File &quot;tempest/lib/common/rest_client.py&quot;, line 665, in request&#10;    resp, resp_body)&#10;  File &quot;tempest/lib/common/rest_client.py&quot;, line 768, in _error_checker&#10;    raise exceptions.BadRequest(resp_body, resp=resp)&#10;tempest.lib.exceptions.BadRequest: Bad request&#10;Details: {u'message': u&quot;Invalid input for external_gateway_info. Reason: '' is not a valid UUID.&quot;, u'type': u'HTTPBadRequest', u'detail': u''}&#10;" type="failure" /></testcase><testcase name="tempest.api.orchestration.stacks.test_templates.TemplateAWSTestJSON.test_show_template"><failure message="Traceback (most recent call last):&#10;  File &quot;tempest/test.py&quot;, line 274, in setUpClass&#10;    six.reraise(etype, value, trace)&#10;  File &quot;tempest/test.py&quot;, line 262, in setUpClass&#10;    cls.setup_credentials()&#10;  File &quot;tempest/api/orchestration/base.py&quot;, line 38, in setup_credentials&#10;    super(BaseOrchestrationTest, cls).setup_credentials()&#10;  File &quot;tempest/test.py&quot;, line 362, in setup_credentials&#10;    credential_type=credentials_type)&#10;  File &quot;tempest/test.py&quot;, line 536, in get_client_manager&#10;    creds = getattr(cred_provider, credentials_method)()&#10;  File &quot;tempest/common/dynamic_creds.py&quot;, line 303, in get_primary_creds&#10;    return self.get_credentials('primary')&#10;  File &quot;tempest/common/dynamic_creds.py&quot;, line 295, in get_credentials&#10;    credentials.tenant_id)&#10;  File &quot;tempest/common/dynamic_creds.py&quot;, line 212, in _create_network_resources&#10;    router = self._create_router(router_name, tenant_id)&#10;  File &quot;tempest/common/dynamic_creds.py&quot;, line 271, in _create_router&#10;    tenant_id=tenant_id)&#10;  File &quot;tempest/lib/services/network/routers_client.py&quot;, line 27, in create_router&#10;    return self.create_resource(uri, post_body)&#10;  File &quot;tempest/lib/services/network/base.py&quot;, line 60, in create_resource&#10;    resp, body = self.post(req_uri, req_post_data)&#10;  File &quot;tempest/lib/common/rest_client.py&quot;, line 276, in post&#10;    return self.request('POST', url, extra_headers, headers, body, chunked)&#10;  File &quot;tempest/lib/common/rest_client.py&quot;, line 665, in request&#10;    resp, resp_body)&#10;  File &quot;tempest/lib/common/rest_client.py&quot;, line 768, in _error_checker&#10;    raise exceptions.BadRequest(resp_body, resp=resp)&#10;tempest.lib.exceptions.BadRequest: Bad request&#10;Details: {u'message': u&quot;Invalid input for external_gateway_info. Reason: '' is not a valid UUID.&quot;, u'type': u'HTTPBadRequest', u'detail': u''}&#10;" type="failure" /></testcase><testcase name="tempest.api.compute.servers.test_server_actions.ServerActionsTestJSON.test_change_server_password"><failure message="Traceback (most recent call last):&#10;  File &quot;tempest/test.py&quot;, line 274, in setUpClass&#10;    six.reraise(etype, value, trace)&#10;  File &quot;tempest/test.py&quot;, line 262, in setUpClass&#10;    cls.setup_credentials()&#10;  File &quot;tempest/api/compute/servers/test_server_actions.py&quot;, line 66, in setup_credentials&#10;    super(ServerActionsTestJSON, cls).setup_credentials()&#10;  File &quot;tempest/api/compute/base.py&quot;, line 61, in setup_credentials&#10;    super(BaseV2ComputeTest, cls).setup_credentials()&#10;  File &quot;tempest/test.py&quot;, line 362, in setup_credentials&#10;    credential_type=credentials_type)&#10;  File &quot;tempest/test.py&quot;, line 536, in get_client_manager&#10;    creds = getattr(cred_provider, credentials_method)()&#10;  File &quot;tempest/common/dynamic_creds.py&quot;, line 303, in get_primary_creds&#10;    return self.get_credentials('primary')&#10;  File &quot;tempest/common/dynamic_creds.py&quot;, line 295, in get_credentials&#10;    credentials.tenant_id)&#10;  File &quot;tempest/common/dynamic_creds.py&quot;, line 212, in _create_network_resources&#10;    router = self._create_router(router_name, tenant_id)&#10;  File &quot;tempest/common/dynamic_creds.py&quot;, line 271, in _create_router&#10;    tenant_id=tenant_id)&#10;  File &quot;tempest/lib/services/network/routers_client.py&quot;, line 27, in create_router&#10;    return self.create_resource(uri, post_body)&#10;  File &quot;tempest/lib/services/network/base.py&quot;, line 60, in create_resource&#10;    resp, body = self.post(req_uri, req_post_data)&#10;  File &quot;tempest/lib/common/rest_client.py&quot;, line 276, in post&#10;    return self.request('POST', url, extra_headers, headers, body, chunked)&#10;  File &quot;tempest/lib/common/rest_client.py&quot;, line 665, in request&#10;    resp, resp_body)&#10;  File &quot;tempest/lib/common/rest_client.py&quot;, line 768, in _error_checker&#10;    raise exceptions.BadRequest(resp_body, resp=resp)&#10;tempest.lib.exceptions.BadRequest: Bad request&#10;Details: {u'message': u&quot;Invalid input for external_gateway_info. Reason: '' is not a valid UUID.&quot;, u'type': u'HTTPBadRequest', u'detail': u''}&#10;" type="failure" /></testcase><testcase name="tempest.api.compute.servers.test_server_actions.ServerActionsTestJSON.test_rebuild_server"><failure message="Traceback (most recent call last):&#10;  File &quot;tempest/test.py&quot;, line 274, in setUpClass&#10;    six.reraise(etype, value, trace)&#10;  File &quot;tempest/test.py&quot;, line 262, in setUpClass&#10;    cls.setup_credentials()&#10;  File &quot;tempest/api/compute/servers/test_server_actions.py&quot;, line 66, in setup_credentials&#10;    super(ServerActionsTestJSON, cls).setup_credentials()&#10;  File &quot;tempest/api/compute/base.py&quot;, line 61, in setup_credentials&#10;    super(BaseV2ComputeTest, cls).setup_credentials()&#10;  File &quot;tempest/test.py&quot;, line 362, in setup_credentials&#10;    credential_type=credentials_type)&#10;  File &quot;tempest/test.py&quot;, line 536, in get_client_manager&#10;    creds = getattr(cred_provider, credentials_method)()&#10;  File &quot;tempest/common/dynamic_creds.py&quot;, line 303, in get_primary_creds&#10;    return self.get_credentials('primary')&#10;  File &quot;tempest/common/dynamic_creds.py&quot;, line 295, in get_credentials&#10;    credentials.tenant_id)&#10;  File &quot;tempest/common/dynamic_creds.py&quot;, line 212, in _create_network_resources&#10;    router = self._create_router(router_name, tenant_id)&#10;  File &quot;tempest/common/dynamic_creds.py&quot;, line 271, in _create_router&#10;    tenant_id=tenant_id)&#10;  File &quot;tempest/lib/services/network/routers_client.py&quot;, line 27, in create_router&#10;    return self.create_resource(uri, post_body)&#10;  File &quot;tempest/lib/services/network/base.py&quot;, line 60, in create_resource&#10;    resp, body = self.post(req_uri, req_post_data)&#10;  File &quot;tempest/lib/common/rest_client.py&quot;, line 276, in post&#10;    return self.request('POST', url, extra_headers, headers, body, chunked)&#10;  File &quot;tempest/lib/common/rest_client.py&quot;, line 665, in request&#10;    resp, resp_body)&#10;  File &quot;tempest/lib/common/rest_client.py&quot;, line 768, in _error_checker&#10;    raise exceptions.BadRequest(resp_body, resp=resp)&#10;tempest.lib.exceptions.BadRequest: Bad request&#10;Details: {u'message': u&quot;Invalid input for external_gateway_info. Reason: '' is not a valid UUID.&quot;, u'type': u'HTTPBadRequest', u'detail': u''}&#10;" type="failure" /></testcase><testcase name="tempest.api.network.test_routers.RoutersIpV6Test.test_create_router_with_default_snat_value"><failure message="Traceback (most recent call last):&#10;  File &quot;tempest/test.py&quot;, line 152, in wrapper&#10;    return func(*func_args, **func_kwargs)&#10;  File &quot;tempest/api/network/test_routers.py&quot;, line 114, in test_create_router_with_default_snat_value&#10;    'enable_snat': True})&#10;  File &quot;tempest/api/network/test_routers.py&quot;, line 183, in _verify_router_gateway&#10;    self.assertEqual(v, actual_ext_gw_info[k])&#10;TypeError: 'NoneType' object has no attribute '__getitem__'&#10;" type="failure" /></testcase><testcase name="tempest.api.orchestration.stacks.test_environment.StackEnvironmentTest.test_environment_parameter"><failure message="Traceback (most recent call last):&#10;  File &quot;tempest/test.py&quot;, line 274, in setUpClass&#10;    six.reraise(etype, value, trace)&#10;  File &quot;tempest/test.py&quot;, line 262, in setUpClass&#10;    cls.setup_credentials()&#10;  File &quot;tempest/api/orchestration/base.py&quot;, line 38, in setup_credentials&#10;    super(BaseOrchestrationTest, cls).setup_credentials()&#10;  File &quot;tempest/test.py&quot;, line 362, in setup_credentials&#10;    credential_type=credentials_type)&#10;  File &quot;tempest/test.py&quot;, line 536, in get_client_manager&#10;    creds = getattr(cred_provider, credentials_method)()&#10;  File &quot;tempest/common/dynamic_creds.py&quot;, line 303, in get_primary_creds&#10;    return self.get_credentials('primary')&#10;  File &quot;tempest/common/dynamic_creds.py&quot;, line 295, in get_credentials&#10;    credentials.tenant_id)&#10;  File &quot;tempest/common/dynamic_creds.py&quot;, line 212, in _create_network_resources&#10;    router = self._create_router(router_name, tenant_id)&#10;  File &quot;tempest/common/dynamic_creds.py&quot;, line 271, in _create_router&#10;    tenant_id=tenant_id)&#10;  File &quot;tempest/lib/services/network/routers_client.py&quot;, line 27, in create_router&#10;    return self.create_resource(uri, post_body)&#10;  File &quot;tempest/lib/services/network/base.py&quot;, line 60, in create_resource&#10;    resp, body = self.post(req_uri, req_post_data)&#10;  File &quot;tempest/lib/common/rest_client.py&quot;, line 276, in post&#10;    return self.request('POST', url, extra_headers, headers, body, chunked)&#10;  File &quot;tempest/lib/common/rest_client.py&quot;, line 665, in request&#10;    resp, resp_body)&#10;  File &quot;tempest/lib/common/rest_client.py&quot;, line 768, in _error_checker&#10;    raise exceptions.BadRequest(resp_body, resp=resp)&#10;tempest.lib.exceptions.BadRequest: Bad request&#10;Details: {u'message': u&quot;Invalid input for external_gateway_info. Reason: '' is not a valid UUID.&quot;, u'type': u'HTTPBadRequest', u'detail': u''}&#10;" type="failure" /></testcase><testcase name="tempest.scenario.test_volume_boot_pattern.TestVolumeBootPattern.test_create_ebs_image_and_check_boot"><failure message="Traceback (most recent call last):&#10;  File &quot;tempest/test.py&quot;, line 274, in setUpClass&#10;    six.reraise(etype, value, trace)&#10;  File &quot;tempest/test.py&quot;, line 262, in setUpClass&#10;    cls.setup_credentials()&#10;  File &quot;tempest/test.py&quot;, line 362, in setup_credentials&#10;    credential_type=credentials_type)&#10;  File &quot;tempest/test.py&quot;, line 536, in get_client_manager&#10;    creds = getattr(cred_provider, credentials_method)()&#10;  File &quot;tempest/common/dynamic_creds.py&quot;, line 303, in get_primary_creds&#10;    return self.get_credentials('primary')&#10;  File &quot;tempest/common/dynamic_creds.py&quot;, line 295, in get_credentials&#10;    credentials.tenant_id)&#10;  File &quot;tempest/common/dynamic_creds.py&quot;, line 212, in _create_network_resources&#10;    router = self._create_router(router_name, tenant_id)&#10;  File &quot;tempest/common/dynamic_creds.py&quot;, line 271, in _create_router&#10;    tenant_id=tenant_id)&#10;  File &quot;tempest/lib/services/network/routers_client.py&quot;, line 27, in create_router&#10;    return self.create_resource(uri, post_body)&#10;  File &quot;tempest/lib/services/network/base.py&quot;, line 60, in create_resource&#10;    resp, body = self.post(req_uri, req_post_data)&#10;  File &quot;tempest/lib/common/rest_client.py&quot;, line 276, in post&#10;    return self.request('POST', url, extra_headers, headers, body, chunked)&#10;  File &quot;tempest/lib/common/rest_client.py&quot;, line 665, in request&#10;    resp, resp_body)&#10;  File &quot;tempest/lib/common/rest_client.py&quot;, line 768, in _error_checker&#10;    raise exceptions.BadRequest(resp_body, resp=resp)&#10;tempest.lib.exceptions.BadRequest: Bad request&#10;Details: {u'message': u&quot;Invalid input for external_gateway_info. Reason: '' is not a valid UUID.&quot;, u'type': u'HTTPBadRequest', u'detail': u''}&#10;" type="failure" /></testcase><testcase name="tempest.api.orchestration.stacks.test_environment.StackEnvironmentTest.test_environment_provider_resource"><failure message="Traceback (most recent call last):&#10;  File &quot;tempest/test.py&quot;, line 274, in setUpClass&#10;    six.reraise(etype, value, trace)&#10;  File &quot;tempest/test.py&quot;, line 262, in setUpClass&#10;    cls.setup_credentials()&#10;  File &quot;tempest/api/orchestration/base.py&quot;, line 38, in setup_credentials&#10;    super(BaseOrchestrationTest, cls).setup_credentials()&#10;  File &quot;tempest/test.py&quot;, line 362, in setup_credentials&#10;    credential_type=credentials_type)&#10;  File &quot;tempest/test.py&quot;, line 536, in get_client_manager&#10;    creds = getattr(cred_provider, credentials_method)()&#10;  File &quot;tempest/common/dynamic_creds.py&quot;, line 303, in get_primary_creds&#10;    return self.get_credentials('primary')&#10;  File &quot;tempest/common/dynamic_creds.py&quot;, line 295, in get_credentials&#10;    credentials.tenant_id)&#10;  File &quot;tempest/common/dynamic_creds.py&quot;, line 212, in _create_network_resources&#10;    router = self._create_router(router_name, tenant_id)&#10;  File &quot;tempest/common/dynamic_creds.py&quot;, line 271, in _create_router&#10;    tenant_id=tenant_id)&#10;  File &quot;tempest/lib/services/network/routers_client.py&quot;, line 27, in create_router&#10;    return self.create_resource(uri, post_body)&#10;  File &quot;tempest/lib/services/network/base.py&quot;, line 60, in create_resource&#10;    resp, body = self.post(req_uri, req_post_data)&#10;  File &quot;tempest/lib/common/rest_client.py&quot;, line 276, in post&#10;    return self.request('POST', url, extra_headers, headers, body, chunked)&#10;  File &quot;tempest/lib/common/rest_client.py&quot;, line 665, in request&#10;    resp, resp_body)&#10;  File &quot;tempest/lib/common/rest_client.py&quot;, line 768, in _error_checker&#10;    raise exceptions.BadRequest(resp_body, resp=resp)&#10;tempest.lib.exceptions.BadRequest: Bad request&#10;Details: {u'message': u&quot;Invalid input for external_gateway_info. Reason: '' is not a valid UUID.&quot;, u'type': u'HTTPBadRequest', u'detail': u''}&#10;" type="failure" /></testcase><testcase name="tempest.scenario.test_minimum_basic.TestMinimumBasicScenario.test_minimum_basic_scenario"><failure message="Traceback (most recent call last):&#10;  File &quot;tempest/test.py&quot;, line 274, in setUpClass&#10;    six.reraise(etype, value, trace)&#10;  File &quot;tempest/test.py&quot;, line 262, in setUpClass&#10;    cls.setup_credentials()&#10;  File &quot;tempest/test.py&quot;, line 362, in setup_credentials&#10;    credential_type=credentials_type)&#10;  File &quot;tempest/test.py&quot;, line 536, in get_client_manager&#10;    creds = getattr(cred_provider, credentials_method)()&#10;  File &quot;tempest/common/dynamic_creds.py&quot;, line 303, in get_primary_creds&#10;    return self.get_credentials('primary')&#10;  File &quot;tempest/common/dynamic_creds.py&quot;, line 295, in get_credentials&#10;    credentials.tenant_id)&#10;  File &quot;tempest/common/dynamic_creds.py&quot;, line 212, in _create_network_resources&#10;    router = self._create_router(router_name, tenant_id)&#10;  File &quot;tempest/common/dynamic_creds.py&quot;, line 271, in _create_router&#10;    tenant_id=tenant_id)&#10;  File &quot;tempest/lib/services/network/routers_client.py&quot;, line 27, in create_router&#10;    return self.create_resource(uri, post_body)&#10;  File &quot;tempest/lib/services/network/base.py&quot;, line 60, in create_resource&#10;    resp, body = self.post(req_uri, req_post_data)&#10;  File &quot;tempest/lib/common/rest_client.py&quot;, line 276, in post&#10;    return self.request('POST', url, extra_headers, headers, body, chunked)&#10;  File &quot;tempest/lib/common/rest_client.py&quot;, line 665, in request&#10;    resp, resp_body)&#10;  File &quot;tempest/lib/common/rest_client.py&quot;, line 768, in _error_checker&#10;    raise exceptions.BadRequest(resp_body, resp=resp)&#10;tempest.lib.exceptions.BadRequest: Bad request&#10;Details: {u'message': u&quot;Invalid input for external_gateway_info. Reason: '' is not a valid UUID.&quot;, u'type': u'HTTPBadRequest', u'detail': u''}&#10;" type="failure" /></testcase><testcase name="tempest.api.network.test_routers.RoutersIpV6Test.test_update_router_set_gateway"><failure message="Traceback (most recent call last):&#10;  File &quot;tempest/api/network/test_routers.py&quot;, line 205, in test_update_router_set_gateway&#10;    'network_id': CONF.network.public_network_id})&#10;  File &quot;tempest/lib/services/network/routers_client.py&quot;, line 38, in update_router&#10;    return self.update_resource(uri, update_body)&#10;  File &quot;tempest/lib/services/network/base.py&quot;, line 74, in update_resource&#10;    resp, body = self.put(req_uri, req_post_data)&#10;  File &quot;tempest/lib/common/rest_client.py&quot;, line 340, in put&#10;    return self.request('PUT', url, extra_headers, headers, body, chunked)&#10;  File &quot;tempest/lib/common/rest_client.py&quot;, line 665, in request&#10;    resp, resp_body)&#10;  File &quot;tempest/lib/common/rest_client.py&quot;, line 768, in _error_checker&#10;    raise exceptions.BadRequest(resp_body, resp=resp)&#10;tempest.lib.exceptions.BadRequest: Bad request&#10;Details: {u'message': u&quot;Invalid input for external_gateway_info. Reason: '' is not a valid UUID.&quot;, u'type': u'HTTPBadRequest', u'detail': u''}&#10;" type="failure" /></testcase><testcase name="tempest.api.compute.servers.test_server_actions.ServerActionsTestJSON.test_shelve_unshelve_server"><failure message="Traceback (most recent call last):&#10;  File &quot;tempest/test.py&quot;, line 274, in setUpClass&#10;    six.reraise(etype, value, trace)&#10;  File &quot;tempest/test.py&quot;, line 262, in setUpClass&#10;    cls.setup_credentials()&#10;  File &quot;tempest/api/compute/servers/test_server_actions.py&quot;, line 66, in setup_credentials&#10;    super(ServerActionsTestJSON, cls).setup_credentials()&#10;  File &quot;tempest/api/compute/base.py&quot;, line 61, in setup_credentials&#10;    super(BaseV2ComputeTest, cls).setup_credentials()&#10;  File &quot;tempest/test.py&quot;, line 362, in setup_credentials&#10;    credential_type=credentials_type)&#10;  File &quot;tempest/test.py&quot;, line 536, in get_client_manager&#10;    creds = getattr(cred_provider, credentials_method)()&#10;  File &quot;tempest/common/dynamic_creds.py&quot;, line 303, in get_primary_creds&#10;    return self.get_credentials('primary')&#10;  File &quot;tempest/common/dynamic_creds.py&quot;, line 295, in get_credentials&#10;    credentials.tenant_id)&#10;  File &quot;tempest/common/dynamic_creds.py&quot;, line 212, in _create_network_resources&#10;    router = self._create_router(router_name, tenant_id)&#10;  File &quot;tempest/common/dynamic_creds.py&quot;, line 271, in _create_router&#10;    tenant_id=tenant_id)&#10;  File &quot;tempest/lib/services/network/routers_client.py&quot;, line 27, in create_router&#10;    return self.create_resource(uri, post_body)&#10;  File &quot;tempest/lib/services/network/base.py&quot;, line 60, in create_resource&#10;    resp, body = self.post(req_uri, req_post_data)&#10;  File &quot;tempest/lib/common/rest_client.py&quot;, line 276, in post&#10;    return self.request('POST', url, extra_headers, headers, body, chunked)&#10;  File &quot;tempest/lib/common/rest_client.py&quot;, line 665, in request&#10;    resp, resp_body)&#10;  File &quot;tempest/lib/common/rest_client.py&quot;, line 768, in _error_checker&#10;    raise exceptions.BadRequest(resp_body, resp=resp)&#10;tempest.lib.exceptions.BadRequest: Bad request&#10;Details: {u'message': u&quot;Invalid input for external_gateway_info. Reason: '' is not a valid UUID.&quot;, u'type': u'HTTPBadRequest', u'detail': u''}&#10;" type="failure" /></testcase><testcase name="tempest.api.compute.servers.test_server_actions.ServerActionsTestJSON.test_lock_unlock_server"><failure message="Traceback (most recent call last):&#10;  File &quot;tempest/test.py&quot;, line 274, in setUpClass&#10;    six.reraise(etype, value, trace)&#10;  File &quot;tempest/test.py&quot;, line 262, in setUpClass&#10;    cls.setup_credentials()&#10;  File &quot;tempest/api/compute/servers/test_server_actions.py&quot;, line 66, in setup_credentials&#10;    super(ServerActionsTestJSON, cls).setup_credentials()&#10;  File &quot;tempest/api/compute/base.py&quot;, line 61, in setup_credentials&#10;    super(BaseV2ComputeTest, cls).setup_credentials()&#10;  File &quot;tempest/test.py&quot;, line 362, in setup_credentials&#10;    credential_type=credentials_type)&#10;  File &quot;tempest/test.py&quot;, line 536, in get_client_manager&#10;    creds = getattr(cred_provider, credentials_method)()&#10;  File &quot;tempest/common/dynamic_creds.py&quot;, line 303, in get_primary_creds&#10;    return self.get_credentials('primary')&#10;  File &quot;tempest/common/dynamic_creds.py&quot;, line 295, in get_credentials&#10;    credentials.tenant_id)&#10;  File &quot;tempest/common/dynamic_creds.py&quot;, line 212, in _create_network_resources&#10;    router = self._create_router(router_name, tenant_id)&#10;  File &quot;tempest/common/dynamic_creds.py&quot;, line 271, in _create_router&#10;    tenant_id=tenant_id)&#10;  File &quot;tempest/lib/services/network/routers_client.py&quot;, line 27, in create_router&#10;    return self.create_resource(uri, post_body)&#10;  File &quot;tempest/lib/services/network/base.py&quot;, line 60, in create_resource&#10;    resp, body = self.post(req_uri, req_post_data)&#10;  File &quot;tempest/lib/common/rest_client.py&quot;, line 276, in post&#10;    return self.request('POST', url, extra_headers, headers, body, chunked)&#10;  File &quot;tempest/lib/common/rest_client.py&quot;, line 665, in request&#10;    resp, resp_body)&#10;  File &quot;tempest/lib/common/rest_client.py&quot;, line 768, in _error_checker&#10;    raise exceptions.BadRequest(resp_body, resp=resp)&#10;tempest.lib.exceptions.BadRequest: Bad request&#10;Details: {u'message': u&quot;Invalid input for external_gateway_info. Reason: '' is not a valid UUID.&quot;, u'type': u'HTTPBadRequest', u'detail': u''}&#10;" type="failure" /></testcase><testcase name="tempest.scenario.test_volume_boot_pattern.TestVolumeBootPattern.test_volume_boot_pattern"><failure message="Traceback (most recent call last):&#10;  File &quot;tempest/test.py&quot;, line 274, in setUpClass&#10;    six.reraise(etype, value, trace)&#10;  File &quot;tempest/test.py&quot;, line 262, in setUpClass&#10;    cls.setup_credentials()&#10;  File &quot;tempest/test.py&quot;, line 362, in setup_credentials&#10;    credential_type=credentials_type)&#10;  File &quot;tempest/test.py&quot;, line 536, in get_client_manager&#10;    creds = getattr(cred_provider, credentials_method)()&#10;  File &quot;tempest/common/dynamic_creds.py&quot;, line 303, in get_primary_creds&#10;    return self.get_credentials('primary')&#10;  File &quot;tempest/common/dynamic_creds.py&quot;, line 295, in get_credentials&#10;    credentials.tenant_id)&#10;  File &quot;tempest/common/dynamic_creds.py&quot;, line 212, in _create_network_resources&#10;    router = self._create_router(router_name, tenant_id)&#10;  File &quot;tempest/common/dynamic_creds.py&quot;, line 271, in _create_router&#10;    tenant_id=tenant_id)&#10;  File &quot;tempest/lib/services/network/routers_client.py&quot;, line 27, in create_router&#10;    return self.create_resource(uri, post_body)&#10;  File &quot;tempest/lib/services/network/base.py&quot;, line 60, in create_resource&#10;    resp, body = self.post(req_uri, req_post_data)&#10;  File &quot;tempest/lib/common/rest_client.py&quot;, line 276, in post&#10;    return self.request('POST', url, extra_headers, headers, body, chunked)&#10;  File &quot;tempest/lib/common/rest_client.py&quot;, line 665, in request&#10;    resp, resp_body)&#10;  File &quot;tempest/lib/common/rest_client.py&quot;, line 768, in _error_checker&#10;    raise exceptions.BadRequest(resp_body, resp=resp)&#10;tempest.lib.exceptions.BadRequest: Bad request&#10;Details: {u'message': u&quot;Invalid input for external_gateway_info. Reason: '' is not a valid UUID.&quot;, u'type': u'HTTPBadRequest', u'detail': u''}&#10;" type="failure" /></testcase><testcase name="tempest.api.orchestration.stacks.test_nova_keypair_resources.NovaKeyPairResourcesYAMLTest.test_stack_keypairs_output"><failure message="Traceback (most recent call last):&#10;  File &quot;tempest/test.py&quot;, line 274, in setUpClass&#10;    six.reraise(etype, value, trace)&#10;  File &quot;tempest/test.py&quot;, line 262, in setUpClass&#10;    cls.setup_credentials()&#10;  File &quot;tempest/api/orchestration/base.py&quot;, line 38, in setup_credentials&#10;    super(BaseOrchestrationTest, cls).setup_credentials()&#10;  File &quot;tempest/test.py&quot;, line 362, in setup_credentials&#10;    credential_type=credentials_type)&#10;  File &quot;tempest/test.py&quot;, line 536, in get_client_manager&#10;    creds = getattr(cred_provider, credentials_method)()&#10;  File &quot;tempest/common/dynamic_creds.py&quot;, line 303, in get_primary_creds&#10;    return self.get_credentials('primary')&#10;  File &quot;tempest/common/dynamic_creds.py&quot;, line 295, in get_credentials&#10;    credentials.tenant_id)&#10;  File &quot;tempest/common/dynamic_creds.py&quot;, line 212, in _create_network_resources&#10;    router = self._create_router(router_name, tenant_id)&#10;  File &quot;tempest/common/dynamic_creds.py&quot;, line 271, in _create_router&#10;    tenant_id=tenant_id)&#10;  File &quot;tempest/lib/services/network/routers_client.py&quot;, line 27, in create_router&#10;    return self.create_resource(uri, post_body)&#10;  File &quot;tempest/lib/services/network/base.py&quot;, line 60, in create_resource&#10;    resp, body = self.post(req_uri, req_post_data)&#10;  File &quot;tempest/lib/common/rest_client.py&quot;, line 276, in post&#10;    return self.request('POST', url, extra_headers, headers, body, chunked)&#10;  File &quot;tempest/lib/common/rest_client.py&quot;, line 665, in request&#10;    resp, resp_body)&#10;  File &quot;tempest/lib/common/rest_client.py&quot;, line 768, in _error_checker&#10;    raise exceptions.BadRequest(resp_body, resp=resp)&#10;tempest.lib.exceptions.BadRequest: Bad request&#10;Details: {u'message': u&quot;Invalid input for external_gateway_info. Reason: '' is not a valid UUID.&quot;, u'type': u'HTTPBadRequest', u'detail': u''}&#10;" type="failure" /></testcase><testcase name="tempest.api.orchestration.stacks.test_non_empty_stack.StacksTestJSON.test_show_event"><failure message="Traceback (most recent call last):&#10;  File &quot;tempest/test.py&quot;, line 274, in setUpClass&#10;    six.reraise(etype, value, trace)&#10;  File &quot;tempest/test.py&quot;, line 262, in setUpClass&#10;    cls.setup_credentials()&#10;  File &quot;tempest/api/orchestration/base.py&quot;, line 38, in setup_credentials&#10;    super(BaseOrchestrationTest, cls).setup_credentials()&#10;  File &quot;tempest/test.py&quot;, line 362, in setup_credentials&#10;    credential_type=credentials_type)&#10;  File &quot;tempest/test.py&quot;, line 536, in get_client_manager&#10;    creds = getattr(cred_provider, credentials_method)()&#10;  File &quot;tempest/common/dynamic_creds.py&quot;, line 303, in get_primary_creds&#10;    return self.get_credentials('primary')&#10;  File &quot;tempest/common/dynamic_creds.py&quot;, line 295, in get_credentials&#10;    credentials.tenant_id)&#10;  File &quot;tempest/common/dynamic_creds.py&quot;, line 212, in _create_network_resources&#10;    router = self._create_router(router_name, tenant_id)&#10;  File &quot;tempest/common/dynamic_creds.py&quot;, line 271, in _create_router&#10;    tenant_id=tenant_id)&#10;  File &quot;tempest/lib/services/network/routers_client.py&quot;, line 27, in create_router&#10;    return self.create_resource(uri, post_body)&#10;  File &quot;tempest/lib/services/network/base.py&quot;, line 60, in create_resource&#10;    resp, body = self.post(req_uri, req_post_data)&#10;  File &quot;tempest/lib/common/rest_client.py&quot;, line 276, in post&#10;    return self.request('POST', url, extra_headers, headers, body, chunked)&#10;  File &quot;tempest/lib/common/rest_client.py&quot;, line 665, in request&#10;    resp, resp_body)&#10;  File &quot;tempest/lib/common/rest_client.py&quot;, line 768, in _error_checker&#10;    raise exceptions.BadRequest(resp_body, resp=resp)&#10;tempest.lib.exceptions.BadRequest: Bad request&#10;Details: {u'message': u&quot;Invalid input for external_gateway_info. Reason: '' is not a valid UUID.&quot;, u'type': u'HTTPBadRequest', u'detail': u''}&#10;" type="failure" /></testcase><testcase name="tempest.api.compute.servers.test_create_server.ServersWithSpecificFlavorTestJSON.test_verify_created_server_ephemeral_disk"><failure message="Traceback (most recent call last):&#10;  File &quot;tempest/test.py&quot;, line 274, in setUpClass&#10;    six.reraise(etype, value, trace)&#10;  File &quot;tempest/test.py&quot;, line 262, in setUpClass&#10;    cls.setup_credentials()&#10;  File &quot;tempest/api/compute/servers/test_create_server.py&quot;, line 249, in setup_credentials&#10;    super(ServersWithSpecificFlavorTestJSON, cls).setup_credentials()&#10;  File &quot;tempest/api/compute/base.py&quot;, line 61, in setup_credentials&#10;    super(BaseV2ComputeTest, cls).setup_credentials()&#10;  File &quot;tempest/test.py&quot;, line 362, in setup_credentials&#10;    credential_type=credentials_type)&#10;  File &quot;tempest/test.py&quot;, line 536, in get_client_manager&#10;    creds = getattr(cred_provider, credentials_method)()&#10;  File &quot;tempest/common/dynamic_creds.py&quot;, line 303, in get_primary_creds&#10;    return self.get_credentials('primary')&#10;  File &quot;tempest/common/dynamic_creds.py&quot;, line 295, in get_credentials&#10;    credentials.tenant_id)&#10;  File &quot;tempest/common/dynamic_creds.py&quot;, line 212, in _create_network_resources&#10;    router = self._create_router(router_name, tenant_id)&#10;  File &quot;tempest/common/dynamic_creds.py&quot;, line 271, in _create_router&#10;    tenant_id=tenant_id)&#10;  File &quot;tempest/lib/services/network/routers_client.py&quot;, line 27, in create_router&#10;    return self.create_resource(uri, post_body)&#10;  File &quot;tempest/lib/services/network/base.py&quot;, line 60, in create_resource&#10;    resp, body = self.post(req_uri, req_post_data)&#10;  File &quot;tempest/lib/common/rest_client.py&quot;, line 276, in post&#10;    return self.request('POST', url, extra_headers, headers, body, chunked)&#10;  File &quot;tempest/lib/common/rest_client.py&quot;, line 665, in request&#10;    resp, resp_body)&#10;  File &quot;tempest/lib/common/rest_client.py&quot;, line 768, in _error_checker&#10;    raise exceptions.BadRequest(resp_body, resp=resp)&#10;tempest.lib.exceptions.BadRequest: Bad request&#10;Details: {u'message': u&quot;Invalid input for external_gateway_info. Reason: '' is not a valid UUID.&quot;, u'type': u'HTTPBadRequest', u'detail': u''}&#10;" type="failure" /></testcase><testcase name="tempest.api.compute.floating_ips.test_list_floating_ips.FloatingIPDetailsTestJSON.test_list_floating_ip_pools"><failure message="Traceback (most recent call last):&#10;  File &quot;tempest/test.py&quot;, line 274, in setUpClass&#10;    six.reraise(etype, value, trace)&#10;  File &quot;tempest/test.py&quot;, line 267, in setUpClass&#10;    cls.resource_setup()&#10;  File &quot;tempest/api/compute/floating_ips/test_list_floating_ips.py&quot;, line 38, in resource_setup&#10;    pool=CONF.network.floating_network_name)['floating_ip']&#10;  File &quot;tempest/lib/services/compute/floating_ips_client.py&quot;, line 62, in create_floating_ip&#10;    resp, body = self.post(url, post_body)&#10;  File &quot;tempest/lib/common/rest_client.py&quot;, line 276, in post&#10;    return self.request('POST', url, extra_headers, headers, body, chunked)&#10;  File &quot;tempest/lib/services/compute/base_compute_client.py&quot;, line 48, in request&#10;    method, url, extra_headers, headers, body, chunked)&#10;  File &quot;tempest/lib/common/rest_client.py&quot;, line 665, in request&#10;    resp, resp_body)&#10;  File &quot;tempest/lib/common/rest_client.py&quot;, line 763, in _error_checker&#10;    raise exceptions.NotFound(resp_body, resp=resp)&#10;tempest.lib.exceptions.NotFound: Object not found&#10;Details: {u'message': u'Floating IP pool not found.', u'code': 404}&#10;" type="failure" /></testcase><testcase name="tempest.api.compute.servers.test_server_rescue_negative.ServerRescueNegativeTestJSON.test_rescued_vm_attach_volume"><failure message="Traceback (most recent call last):&#10;  File &quot;tempest/test.py&quot;, line 274, in setUpClass&#10;    six.reraise(etype, value, trace)&#10;  File &quot;tempest/test.py&quot;, line 262, in setUpClass&#10;    cls.setup_credentials()&#10;  File &quot;tempest/api/compute/servers/test_server_rescue_negative.py&quot;, line 40, in setup_credentials&#10;    super(ServerRescueNegativeTestJSON, cls).setup_credentials()&#10;  File &quot;tempest/api/compute/base.py&quot;, line 61, in setup_credentials&#10;    super(BaseV2ComputeTest, cls).setup_credentials()&#10;  File &quot;tempest/test.py&quot;, line 362, in setup_credentials&#10;    credential_type=credentials_type)&#10;  File &quot;tempest/test.py&quot;, line 536, in get_client_manager&#10;    creds = getattr(cred_provider, credentials_method)()&#10;  File &quot;tempest/common/dynamic_creds.py&quot;, line 303, in get_primary_creds&#10;    return self.get_credentials('primary')&#10;  File &quot;tempest/common/dynamic_creds.py&quot;, line 295, in get_credentials&#10;    credentials.tenant_id)&#10;  File &quot;tempest/common/dynamic_creds.py&quot;, line 212, in _create_network_resources&#10;    router = self._create_router(router_name, tenant_id)&#10;  File &quot;tempest/common/dynamic_creds.py&quot;, line 271, in _create_router&#10;    tenant_id=tenant_id)&#10;  File &quot;tempest/lib/services/network/routers_client.py&quot;, line 27, in create_router&#10;    return self.create_resource(uri, post_body)&#10;  File &quot;tempest/lib/services/network/base.py&quot;, line 60, in create_resource&#10;    resp, body = self.post(req_uri, req_post_data)&#10;  File &quot;tempest/lib/common/rest_client.py&quot;, line 276, in post&#10;    return self.request('POST', url, extra_headers, headers, body, chunked)&#10;  File &quot;tempest/lib/common/rest_client.py&quot;, line 665, in request&#10;    resp, resp_body)&#10;  File &quot;tempest/lib/common/rest_client.py&quot;, line 768, in _error_checker&#10;    raise exceptions.BadRequest(resp_body, resp=resp)&#10;tempest.lib.exceptions.BadRequest: Bad request&#10;Details: {u'message': u&quot;Invalid input for external_gateway_info. Reason: '' is not a valid UUID.&quot;, u'type': u'HTTPBadRequest', u'detail': u''}&#10;" type="failure" /></testcase><testcase name="tempest.api.orchestration.stacks.test_stacks.StacksTestJSON.test_stack_crud_no_resources"><failure message="Traceback (most recent call last):&#10;  File &quot;tempest/test.py&quot;, line 274, in setUpClass&#10;    six.reraise(etype, value, trace)&#10;  File &quot;tempest/test.py&quot;, line 262, in setUpClass&#10;    cls.setup_credentials()&#10;  File &quot;tempest/api/orchestration/base.py&quot;, line 38, in setup_credentials&#10;    super(BaseOrchestrationTest, cls).setup_credentials()&#10;  File &quot;tempest/test.py&quot;, line 362, in setup_credentials&#10;    credential_type=credentials_type)&#10;  File &quot;tempest/test.py&quot;, line 536, in get_client_manager&#10;    creds = getattr(cred_provider, credentials_method)()&#10;  File &quot;tempest/common/dynamic_creds.py&quot;, line 303, in get_primary_creds&#10;    return self.get_credentials('primary')&#10;  File &quot;tempest/common/dynamic_creds.py&quot;, line 295, in get_credentials&#10;    credentials.tenant_id)&#10;  File &quot;tempest/common/dynamic_creds.py&quot;, line 212, in _create_network_resources&#10;    router = self._create_router(router_name, tenant_id)&#10;  File &quot;tempest/common/dynamic_creds.py&quot;, line 271, in _create_router&#10;    tenant_id=tenant_id)&#10;  File &quot;tempest/lib/services/network/routers_client.py&quot;, line 27, in create_router&#10;    return self.create_resource(uri, post_body)&#10;  File &quot;tempest/lib/services/network/base.py&quot;, line 60, in create_resource&#10;    resp, body = self.post(req_uri, req_post_data)&#10;  File &quot;tempest/lib/common/rest_client.py&quot;, line 276, in post&#10;    return self.request('POST', url, extra_headers, headers, body, chunked)&#10;  File &quot;tempest/lib/common/rest_client.py&quot;, line 665, in request&#10;    resp, resp_body)&#10;  File &quot;tempest/lib/common/rest_client.py&quot;, line 768, in _error_checker&#10;    raise exceptions.BadRequest(resp_body, resp=resp)&#10;tempest.lib.exceptions.BadRequest: Bad request&#10;Details: {u'message': u&quot;Invalid input for external_gateway_info. Reason: '' is not a valid UUID.&quot;, u'type': u'HTTPBadRequest', u'detail': u''}&#10;" type="failure" /></testcase><testcase name="tempest.api.compute.servers.test_server_actions.ServerActionsTestJSON.test_get_console_output"><failure message="Traceback (most recent call last):&#10;  File &quot;tempest/test.py&quot;, line 274, in setUpClass&#10;    six.reraise(etype, value, trace)&#10;  File &quot;tempest/test.py&quot;, line 262, in setUpClass&#10;    cls.setup_credentials()&#10;  File &quot;tempest/api/compute/servers/test_server_actions.py&quot;, line 66, in setup_credentials&#10;    super(ServerActionsTestJSON, cls).setup_credentials()&#10;  File &quot;tempest/api/compute/base.py&quot;, line 61, in setup_credentials&#10;    super(BaseV2ComputeTest, cls).setup_credentials()&#10;  File &quot;tempest/test.py&quot;, line 362, in setup_credentials&#10;    credential_type=credentials_type)&#10;  File &quot;tempest/test.py&quot;, line 536, in get_client_manager&#10;    creds = getattr(cred_provider, credentials_method)()&#10;  File &quot;tempest/common/dynamic_creds.py&quot;, line 303, in get_primary_creds&#10;    return self.get_credentials('primary')&#10;  File &quot;tempest/common/dynamic_creds.py&quot;, line 295, in get_credentials&#10;    credentials.tenant_id)&#10;  File &quot;tempest/common/dynamic_creds.py&quot;, line 212, in _create_network_resources&#10;    router = self._create_router(router_name, tenant_id)&#10;  File &quot;tempest/common/dynamic_creds.py&quot;, line 271, in _create_router&#10;    tenant_id=tenant_id)&#10;  File &quot;tempest/lib/services/network/routers_client.py&quot;, line 27, in create_router&#10;    return self.create_resource(uri, post_body)&#10;  File &quot;tempest/lib/services/network/base.py&quot;, line 60, in create_resource&#10;    resp, body = self.post(req_uri, req_post_data)&#10;  File &quot;tempest/lib/common/rest_client.py&quot;, line 276, in post&#10;    return self.request('POST', url, extra_headers, headers, body, chunked)&#10;  File &quot;tempest/lib/common/rest_client.py&quot;, line 665, in request&#10;    resp, resp_body)&#10;  File &quot;tempest/lib/common/rest_client.py&quot;, line 768, in _error_checker&#10;    raise exceptions.BadRequest(resp_body, resp=resp)&#10;tempest.lib.exceptions.BadRequest: Bad request&#10;Details: {u'message': u&quot;Invalid input for external_gateway_info. Reason: '' is not a valid UUID.&quot;, u'type': u'HTTPBadRequest', u'detail': u''}&#10;" type="failure" /></testcase><testcase name="tempest.api.network.test_floating_ips.FloatingIPTestJSON.test_floating_ip_delete_port"><failure message="Traceback (most recent call last):&#10;  File &quot;tempest/api/network/test_floating_ips.py&quot;, line 125, in test_floating_ip_delete_port&#10;    floating_network_id=self.ext_net_id)&#10;  File &quot;tempest/lib/services/network/floating_ips_client.py&quot;, line 30, in create_floatingip&#10;    return self.create_resource(uri, post_data)&#10;  File &quot;tempest/lib/services/network/base.py&quot;, line 60, in create_resource&#10;    resp, body = self.post(req_uri, req_post_data)&#10;  File &quot;tempest/lib/common/rest_client.py&quot;, line 276, in post&#10;    return self.request('POST', url, extra_headers, headers, body, chunked)&#10;  File &quot;tempest/lib/common/rest_client.py&quot;, line 665, in request&#10;    resp, resp_body)&#10;  File &quot;tempest/lib/common/rest_client.py&quot;, line 768, in _error_checker&#10;    raise exceptions.BadRequest(resp_body, resp=resp)&#10;tempest.lib.exceptions.BadRequest: Bad request&#10;Details: {u'message': u&quot;Invalid input for floating_network_id. Reason: '' is not a valid UUID.&quot;, u'type': u'HTTPBadRequest', u'detail': u''}&#10;" type="failure" /></testcase><testcase name="tempest.scenario.test_server_basic_ops.TestServerBasicOps.test_server_basic_ops"><failure message="Traceback (most recent call last):&#10;  File &quot;tempest/test.py&quot;, line 274, in setUpClass&#10;    six.reraise(etype, value, trace)&#10;  File &quot;tempest/test.py&quot;, line 262, in setUpClass&#10;    cls.setup_credentials()&#10;  File &quot;tempest/test.py&quot;, line 362, in setup_credentials&#10;    credential_type=credentials_type)&#10;  File &quot;tempest/test.py&quot;, line 536, in get_client_manager&#10;    creds = getattr(cred_provider, credentials_method)()&#10;  File &quot;tempest/common/dynamic_creds.py&quot;, line 303, in get_primary_creds&#10;    return self.get_credentials('primary')&#10;  File &quot;tempest/common/dynamic_creds.py&quot;, line 295, in get_credentials&#10;    credentials.tenant_id)&#10;  File &quot;tempest/common/dynamic_creds.py&quot;, line 212, in _create_network_resources&#10;    router = self._create_router(router_name, tenant_id)&#10;  File &quot;tempest/common/dynamic_creds.py&quot;, line 271, in _create_router&#10;    tenant_id=tenant_id)&#10;  File &quot;tempest/lib/services/network/routers_client.py&quot;, line 27, in create_router&#10;    return self.create_resource(uri, post_body)&#10;  File &quot;tempest/lib/services/network/base.py&quot;, line 60, in create_resource&#10;    resp, body = self.post(req_uri, req_post_data)&#10;  File &quot;tempest/lib/common/rest_client.py&quot;, line 276, in post&#10;    return self.request('POST', url, extra_headers, headers, body, chunked)&#10;  File &quot;tempest/lib/common/rest_client.py&quot;, line 665, in request&#10;    resp, resp_body)&#10;  File &quot;tempest/lib/common/rest_client.py&quot;, line 768, in _error_checker&#10;    raise exceptions.BadRequest(resp_body, resp=resp)&#10;tempest.lib.exceptions.BadRequest: Bad request&#10;Details: {u'message': u&quot;Invalid input for external_gateway_info. Reason: '' is not a valid UUID.&quot;, u'type': u'HTTPBadRequest', u'detail': u''}&#10;" type="failure" /></testcase><testcase name="tempest.api.compute.floating_ips.test_floating_ips_actions.FloatingIPsTestJSON.test_delete_floating_ip"><failure message="Traceback (most recent call last):&#10;  File &quot;tempest/test.py&quot;, line 274, in setUpClass&#10;    six.reraise(etype, value, trace)&#10;  File &quot;tempest/test.py&quot;, line 262, in setUpClass&#10;    cls.setup_credentials()&#10;  File &quot;tempest/api/compute/floating_ips/base.py&quot;, line 26, in setup_credentials&#10;    super(BaseFloatingIPsTest, cls).setup_credentials()&#10;  File &quot;tempest/api/compute/base.py&quot;, line 61, in setup_credentials&#10;    super(BaseV2ComputeTest, cls).setup_credentials()&#10;  File &quot;tempest/test.py&quot;, line 362, in setup_credentials&#10;    credential_type=credentials_type)&#10;  File &quot;tempest/test.py&quot;, line 536, in get_client_manager&#10;    creds = getattr(cred_provider, credentials_method)()&#10;  File &quot;tempest/common/dynamic_creds.py&quot;, line 303, in get_primary_creds&#10;    return self.get_credentials('primary')&#10;  File &quot;tempest/common/dynamic_creds.py&quot;, line 295, in get_credentials&#10;    credentials.tenant_id)&#10;  File &quot;tempest/common/dynamic_creds.py&quot;, line 212, in _create_network_resources&#10;    router = self._create_router(router_name, tenant_id)&#10;  File &quot;tempest/common/dynamic_creds.py&quot;, line 271, in _create_router&#10;    tenant_id=tenant_id)&#10;  File &quot;tempest/lib/services/network/routers_client.py&quot;, line 27, in create_router&#10;    return self.create_resource(uri, post_body)&#10;  File &quot;tempest/lib/services/network/base.py&quot;, line 60, in create_resource&#10;    resp, body = self.post(req_uri, req_post_data)&#10;  File &quot;tempest/lib/common/rest_client.py&quot;, line 276, in post&#10;    return self.request('POST', url, extra_headers, headers, body, chunked)&#10;  File &quot;tempest/lib/common/rest_client.py&quot;, line 665, in request&#10;    resp, resp_body)&#10;  File &quot;tempest/lib/common/rest_client.py&quot;, line 768, in _error_checker&#10;    raise exceptions.BadRequest(resp_body, resp=resp)&#10;tempest.lib.exceptions.BadRequest: Bad request&#10;Details: {u'message': u&quot;Invalid input for external_gateway_info. Reason: '' is not a valid UUID.&quot;, u'type': u'HTTPBadRequest', u'detail': u''}&#10;" type="failure" /></testcase><testcase name="tempest.api.orchestration.stacks.test_limits.TestServerStackLimits.test_exceed_max_resources_per_stack"><failure message="Traceback (most recent call last):&#10;  File &quot;tempest/test.py&quot;, line 274, in setUpClass&#10;    six.reraise(etype, value, trace)&#10;  File &quot;tempest/test.py&quot;, line 262, in setUpClass&#10;    cls.setup_credentials()&#10;  File &quot;tempest/api/orchestration/base.py&quot;, line 38, in setup_credentials&#10;    super(BaseOrchestrationTest, cls).setup_credentials()&#10;  File &quot;tempest/test.py&quot;, line 362, in setup_credentials&#10;    credential_type=credentials_type)&#10;  File &quot;tempest/test.py&quot;, line 536, in get_client_manager&#10;    creds = getattr(cred_provider, credentials_method)()&#10;  File &quot;tempest/common/dynamic_creds.py&quot;, line 303, in get_primary_creds&#10;    return self.get_credentials('primary')&#10;  File &quot;tempest/common/dynamic_creds.py&quot;, line 295, in get_credentials&#10;    credentials.tenant_id)&#10;  File &quot;tempest/common/dynamic_creds.py&quot;, line 212, in _create_network_resources&#10;    router = self._create_router(router_name, tenant_id)&#10;  File &quot;tempest/common/dynamic_creds.py&quot;, line 271, in _create_router&#10;    tenant_id=tenant_id)&#10;  File &quot;tempest/lib/services/network/routers_client.py&quot;, line 27, in create_router&#10;    return self.create_resource(uri, post_body)&#10;  File &quot;tempest/lib/services/network/base.py&quot;, line 60, in create_resource&#10;    resp, body = self.post(req_uri, req_post_data)&#10;  File &quot;tempest/lib/common/rest_client.py&quot;, line 276, in post&#10;    return self.request('POST', url, extra_headers, headers, body, chunked)&#10;  File &quot;tempest/lib/common/rest_client.py&quot;, line 665, in request&#10;    resp, resp_body)&#10;  File &quot;tempest/lib/common/rest_client.py&quot;, line 768, in _error_checker&#10;    raise exceptions.BadRequest(resp_body, resp=resp)&#10;tempest.lib.exceptions.BadRequest: Bad request&#10;Details: {u'message': u&quot;Invalid input for external_gateway_info. Reason: '' is not a valid UUID.&quot;, u'type': u'HTTPBadRequest', u'detail': u''}&#10;" type="failure" /></testcase><testcase name="tempest.api.compute.servers.test_server_actions.ServerActionsTestJSON.test_resize_server_confirm_from_stopped"><failure message="Traceback (most recent call last):&#10;  File &quot;tempest/test.py&quot;, line 274, in setUpClass&#10;    six.reraise(etype, value, trace)&#10;  File &quot;tempest/test.py&quot;, line 262, in setUpClass&#10;    cls.setup_credentials()&#10;  File &quot;tempest/api/compute/servers/test_server_actions.py&quot;, line 66, in setup_credentials&#10;    super(ServerActionsTestJSON, cls).setup_credentials()&#10;  File &quot;tempest/api/compute/base.py&quot;, line 61, in setup_credentials&#10;    super(BaseV2ComputeTest, cls).setup_credentials()&#10;  File &quot;tempest/test.py&quot;, line 362, in setup_credentials&#10;    credential_type=credentials_type)&#10;  File &quot;tempest/test.py&quot;, line 536, in get_client_manager&#10;    creds = getattr(cred_provider, credentials_method)()&#10;  File &quot;tempest/common/dynamic_creds.py&quot;, line 303, in get_primary_creds&#10;    return self.get_credentials('primary')&#10;  File &quot;tempest/common/dynamic_creds.py&quot;, line 295, in get_credentials&#10;    credentials.tenant_id)&#10;  File &quot;tempest/common/dynamic_creds.py&quot;, line 212, in _create_network_resources&#10;    router = self._create_router(router_name, tenant_id)&#10;  File &quot;tempest/common/dynamic_creds.py&quot;, line 271, in _create_router&#10;    tenant_id=tenant_id)&#10;  File &quot;tempest/lib/services/network/routers_client.py&quot;, line 27, in create_router&#10;    return self.create_resource(uri, post_body)&#10;  File &quot;tempest/lib/services/network/base.py&quot;, line 60, in create_resource&#10;    resp, body = self.post(req_uri, req_post_data)&#10;  File &quot;tempest/lib/common/rest_client.py&quot;, line 276, in post&#10;    return self.request('POST', url, extra_headers, headers, body, chunked)&#10;  File &quot;tempest/lib/common/rest_client.py&quot;, line 665, in request&#10;    resp, resp_body)&#10;  File &quot;tempest/lib/common/rest_client.py&quot;, line 768, in _error_checker&#10;    raise exceptions.BadRequest(resp_body, resp=resp)&#10;tempest.lib.exceptions.BadRequest: Bad request&#10;Details: {u'message': u&quot;Invalid input for external_gateway_info. Reason: '' is not a valid UUID.&quot;, u'type': u'HTTPBadRequest', u'detail': u''}&#10;" type="failure" /></testcase><testcase name="tempest.api.compute.servers.test_create_server.ServersTestManualDisk.test_create_server_with_scheduler_hint_group"><failure message="Traceback (most recent call last):&#10;  File &quot;tempest/test.py&quot;, line 274, in setUpClass&#10;    six.reraise(etype, value, trace)&#10;  File &quot;tempest/test.py&quot;, line 262, in setUpClass&#10;    cls.setup_credentials()&#10;  File &quot;tempest/api/compute/servers/test_create_server.py&quot;, line 35, in setup_credentials&#10;    super(ServersTestJSON, cls).setup_credentials()&#10;  File &quot;tempest/api/compute/base.py&quot;, line 61, in setup_credentials&#10;    super(BaseV2ComputeTest, cls).setup_credentials()&#10;  File &quot;tempest/test.py&quot;, line 362, in setup_credentials&#10;    credential_type=credentials_type)&#10;  File &quot;tempest/test.py&quot;, line 536, in get_client_manager&#10;    creds = getattr(cred_provider, credentials_method)()&#10;  File &quot;tempest/common/dynamic_creds.py&quot;, line 303, in get_primary_creds&#10;    return self.get_credentials('primary')&#10;  File &quot;tempest/common/dynamic_creds.py&quot;, line 295, in get_credentials&#10;    credentials.tenant_id)&#10;  File &quot;tempest/common/dynamic_creds.py&quot;, line 212, in _create_network_resources&#10;    router = self._create_router(router_name, tenant_id)&#10;  File &quot;tempest/common/dynamic_creds.py&quot;, line 271, in _create_router&#10;    tenant_id=tenant_id)&#10;  File &quot;tempest/lib/services/network/routers_client.py&quot;, line 27, in create_router&#10;    return self.create_resource(uri, post_body)&#10;  File &quot;tempest/lib/services/network/base.py&quot;, line 60, in create_resource&#10;    resp, body = self.post(req_uri, req_post_data)&#10;  File &quot;tempest/lib/common/rest_client.py&quot;, line 276, in post&#10;    return self.request('POST', url, extra_headers, headers, body, chunked)&#10;  File &quot;tempest/lib/common/rest_client.py&quot;, line 665, in request&#10;    resp, resp_body)&#10;  File &quot;tempest/lib/common/rest_client.py&quot;, line 768, in _error_checker&#10;    raise exceptions.BadRequest(resp_body, resp=resp)&#10;tempest.lib.exceptions.BadRequest: Bad request&#10;Details: {u'message': u&quot;Invalid input for external_gateway_info. Reason: '' is not a valid UUID.&quot;, u'type': u'HTTPBadRequest', u'detail': u''}&#10;" type="failure" /></testcase><testcase name="tempest.api.network.test_routers.RoutersTest.test_update_router_reset_gateway_without_snat"><failure message="Traceback (most recent call last):&#10;  File &quot;tempest/test.py&quot;, line 152, in wrapper&#10;    return func(*func_args, **func_kwargs)&#10;  File &quot;tempest/api/network/test_routers.py&quot;, line 266, in test_update_router_reset_gateway_without_snat&#10;    'enable_snat': False})&#10;  File &quot;tempest/lib/services/network/routers_client.py&quot;, line 38, in update_router&#10;    return self.update_resource(uri, update_body)&#10;  File &quot;tempest/lib/services/network/base.py&quot;, line 74, in update_resource&#10;    resp, body = self.put(req_uri, req_post_data)&#10;  File &quot;tempest/lib/common/rest_client.py&quot;, line 340, in put&#10;    return self.request('PUT', url, extra_headers, headers, body, chunked)&#10;  File &quot;tempest/lib/common/rest_client.py&quot;, line 665, in request&#10;    resp, resp_body)&#10;  File &quot;tempest/lib/common/rest_client.py&quot;, line 768, in _error_checker&#10;    raise exceptions.BadRequest(resp_body, resp=resp)&#10;tempest.lib.exceptions.BadRequest: Bad request&#10;Details: {u'message': u&quot;Invalid input for external_gateway_info. Reason: '' is not a valid UUID.&quot;, u'type': u'HTTPBadRequest', u'detail': u''}&#10;" type="failure" /></testcase><testcase name="tempest.api.orchestration.stacks.test_environment.StackEnvironmentTest.test_files_provider_resource"><failure message="Traceback (most recent call last):&#10;  File &quot;tempest/test.py&quot;, line 274, in setUpClass&#10;    six.reraise(etype, value, trace)&#10;  File &quot;tempest/test.py&quot;, line 262, in setUpClass&#10;    cls.setup_credentials()&#10;  File &quot;tempest/api/orchestration/base.py&quot;, line 38, in setup_credentials&#10;    super(BaseOrchestrationTest, cls).setup_credentials()&#10;  File &quot;tempest/test.py&quot;, line 362, in setup_credentials&#10;    credential_type=credentials_type)&#10;  File &quot;tempest/test.py&quot;, line 536, in get_client_manager&#10;    creds = getattr(cred_provider, credentials_method)()&#10;  File &quot;tempest/common/dynamic_creds.py&quot;, line 303, in get_primary_creds&#10;    return self.get_credentials('primary')&#10;  File &quot;tempest/common/dynamic_creds.py&quot;, line 295, in get_credentials&#10;    credentials.tenant_id)&#10;  File &quot;tempest/common/dynamic_creds.py&quot;, line 212, in _create_network_resources&#10;    router = self._create_router(router_name, tenant_id)&#10;  File &quot;tempest/common/dynamic_creds.py&quot;, line 271, in _create_router&#10;    tenant_id=tenant_id)&#10;  File &quot;tempest/lib/services/network/routers_client.py&quot;, line 27, in create_router&#10;    return self.create_resource(uri, post_body)&#10;  File &quot;tempest/lib/services/network/base.py&quot;, line 60, in create_resource&#10;    resp, body = self.post(req_uri, req_post_data)&#10;  File &quot;tempest/lib/common/rest_client.py&quot;, line 276, in post&#10;    return self.request('POST', url, extra_headers, headers, body, chunked)&#10;  File &quot;tempest/lib/common/rest_client.py&quot;, line 665, in request&#10;    resp, resp_body)&#10;  File &quot;tempest/lib/common/rest_client.py&quot;, line 768, in _error_checker&#10;    raise exceptions.BadRequest(resp_body, resp=resp)&#10;tempest.lib.exceptions.BadRequest: Bad request&#10;Details: {u'message': u&quot;Invalid input for external_gateway_info. Reason: '' is not a valid UUID.&quot;, u'type': u'HTTPBadRequest', u'detail': u''}&#10;" type="failure" /></testcase><testcase name="tempest.scenario.test_shelve_instance.TestShelveInstance.test_shelve_volume_backed_instance"><failure message="Traceback (most recent call last):&#10;  File &quot;tempest/test.py&quot;, line 274, in setUpClass&#10;    six.reraise(etype, value, trace)&#10;  File &quot;tempest/test.py&quot;, line 262, in setUpClass&#10;    cls.setup_credentials()&#10;  File &quot;tempest/test.py&quot;, line 362, in setup_credentials&#10;    credential_type=credentials_type)&#10;  File &quot;tempest/test.py&quot;, line 536, in get_client_manager&#10;    creds = getattr(cred_provider, credentials_method)()&#10;  File &quot;tempest/common/dynamic_creds.py&quot;, line 303, in get_primary_creds&#10;    return self.get_credentials('primary')&#10;  File &quot;tempest/common/dynamic_creds.py&quot;, line 295, in get_credentials&#10;    credentials.tenant_id)&#10;  File &quot;tempest/common/dynamic_creds.py&quot;, line 212, in _create_network_resources&#10;    router = self._create_router(router_name, tenant_id)&#10;  File &quot;tempest/common/dynamic_creds.py&quot;, line 271, in _create_router&#10;    tenant_id=tenant_id)&#10;  File &quot;tempest/lib/services/network/routers_client.py&quot;, line 27, in create_router&#10;    return self.create_resource(uri, post_body)&#10;  File &quot;tempest/lib/services/network/base.py&quot;, line 60, in create_resource&#10;    resp, body = self.post(req_uri, req_post_data)&#10;  File &quot;tempest/lib/common/rest_client.py&quot;, line 276, in post&#10;    return self.request('POST', url, extra_headers, headers, body, chunked)&#10;  File &quot;tempest/lib/common/rest_client.py&quot;, line 665, in request&#10;    resp, resp_body)&#10;  File &quot;tempest/lib/common/rest_client.py&quot;, line 768, in _error_checker&#10;    raise exceptions.BadRequest(resp_body, resp=resp)&#10;tempest.lib.exceptions.BadRequest: Bad request&#10;Details: {u'message': u&quot;Invalid input for external_gateway_info. Reason: '' is not a valid UUID.&quot;, u'type': u'HTTPBadRequest', u'detail': u''}&#10;" type="failure" /></testcase><testcase name="tempest.api.compute.floating_ips.test_floating_ips_actions_negative.FloatingIPsNegativeTestJSON.test_allocate_floating_ip_from_nonexistent_pool"><failure message="Traceback (most recent call last):&#10;  File &quot;tempest/test.py&quot;, line 274, in setUpClass&#10;    six.reraise(etype, value, trace)&#10;  File &quot;tempest/test.py&quot;, line 262, in setUpClass&#10;    cls.setup_credentials()&#10;  File &quot;tempest/api/compute/floating_ips/base.py&quot;, line 26, in setup_credentials&#10;    super(BaseFloatingIPsTest, cls).setup_credentials()&#10;  File &quot;tempest/api/compute/base.py&quot;, line 61, in setup_credentials&#10;    super(BaseV2ComputeTest, cls).setup_credentials()&#10;  File &quot;tempest/test.py&quot;, line 362, in setup_credentials&#10;    credential_type=credentials_type)&#10;  File &quot;tempest/test.py&quot;, line 536, in get_client_manager&#10;    creds = getattr(cred_provider, credentials_method)()&#10;  File &quot;tempest/common/dynamic_creds.py&quot;, line 303, in get_primary_creds&#10;    return self.get_credentials('primary')&#10;  File &quot;tempest/common/dynamic_creds.py&quot;, line 295, in get_credentials&#10;    credentials.tenant_id)&#10;  File &quot;tempest/common/dynamic_creds.py&quot;, line 212, in _create_network_resources&#10;    router = self._create_router(router_name, tenant_id)&#10;  File &quot;tempest/common/dynamic_creds.py&quot;, line 271, in _create_router&#10;    tenant_id=tenant_id)&#10;  File &quot;tempest/lib/services/network/routers_client.py&quot;, line 27, in create_router&#10;    return self.create_resource(uri, post_body)&#10;  File &quot;tempest/lib/services/network/base.py&quot;, line 60, in create_resource&#10;    resp, body = self.post(req_uri, req_post_data)&#10;  File &quot;tempest/lib/common/rest_client.py&quot;, line 276, in post&#10;    return self.request('POST', url, extra_headers, headers, body, chunked)&#10;  File &quot;tempest/lib/common/rest_client.py&quot;, line 665, in request&#10;    resp, resp_body)&#10;  File &quot;tempest/lib/common/rest_client.py&quot;, line 768, in _error_checker&#10;    raise exceptions.BadRequest(resp_body, resp=resp)&#10;tempest.lib.exceptions.BadRequest: Bad request&#10;Details: {u'message': u&quot;Invalid input for external_gateway_info. Reason: '' is not a valid UUID.&quot;, u'type': u'HTTPBadRequest', u'detail': u''}&#10;" type="failure" /></testcase><testcase name="tempest.api.compute.images.test_images_oneserver_negative.ImagesOneServerNegativeTestJSON.test_delete_image_that_is_not_yet_active"><failure message="Traceback (most recent call last):&#10;  File &quot;tempest/test.py&quot;, line 274, in setUpClass&#10;    six.reraise(etype, value, trace)&#10;  File &quot;tempest/test.py&quot;, line 262, in setUpClass&#10;    cls.setup_credentials()&#10;  File &quot;tempest/api/compute/images/test_images_oneserver_negative.py&quot;, line 74, in setup_credentials&#10;    super(ImagesOneServerNegativeTestJSON, cls).setup_credentials()&#10;  File &quot;tempest/api/compute/base.py&quot;, line 61, in setup_credentials&#10;    super(BaseV2ComputeTest, cls).setup_credentials()&#10;  File &quot;tempest/test.py&quot;, line 362, in setup_credentials&#10;    credential_type=credentials_type)&#10;  File &quot;tempest/test.py&quot;, line 536, in get_client_manager&#10;    creds = getattr(cred_provider, credentials_method)()&#10;  File &quot;tempest/common/dynamic_creds.py&quot;, line 303, in get_primary_creds&#10;    return self.get_credentials('primary')&#10;  File &quot;tempest/common/dynamic_creds.py&quot;, line 295, in get_credentials&#10;    credentials.tenant_id)&#10;  File &quot;tempest/common/dynamic_creds.py&quot;, line 212, in _create_network_resources&#10;    router = self._create_router(router_name, tenant_id)&#10;  File &quot;tempest/common/dynamic_creds.py&quot;, line 271, in _create_router&#10;    tenant_id=tenant_id)&#10;  File &quot;tempest/lib/services/network/routers_client.py&quot;, line 27, in create_router&#10;    return self.create_resource(uri, post_body)&#10;  File &quot;tempest/lib/services/network/base.py&quot;, line 60, in create_resource&#10;    resp, body = self.post(req_uri, req_post_data)&#10;  File &quot;tempest/lib/common/rest_client.py&quot;, line 276, in post&#10;    return self.request('POST', url, extra_headers, headers, body, chunked)&#10;  File &quot;tempest/lib/common/rest_client.py&quot;, line 665, in request&#10;    resp, resp_body)&#10;  File &quot;tempest/lib/common/rest_client.py&quot;, line 768, in _error_checker&#10;    raise exceptions.BadRequest(resp_body, resp=resp)&#10;tempest.lib.exceptions.BadRequest: Bad request&#10;Details: {u'message': u&quot;Invalid input for external_gateway_info. Reason: '' is not a valid UUID.&quot;, u'type': u'HTTPBadRequest', u'detail': u''}&#10;" type="failure" /></testcase><testcase name="tempest.api.orchestration.stacks.test_templates.TemplateYAMLTestJSON.test_show_template"><failure message="Traceback (most recent call last):&#10;  File &quot;tempest/test.py&quot;, line 274, in setUpClass&#10;    six.reraise(etype, value, trace)&#10;  File &quot;tempest/test.py&quot;, line 262, in setUpClass&#10;    cls.setup_credentials()&#10;  File &quot;tempest/api/orchestration/base.py&quot;, line 38, in setup_credentials&#10;    super(BaseOrchestrationTest, cls).setup_credentials()&#10;  File &quot;tempest/test.py&quot;, line 362, in setup_credentials&#10;    credential_type=credentials_type)&#10;  File &quot;tempest/test.py&quot;, line 536, in get_client_manager&#10;    creds = getattr(cred_provider, credentials_method)()&#10;  File &quot;tempest/common/dynamic_creds.py&quot;, line 303, in get_primary_creds&#10;    return self.get_credentials('primary')&#10;  File &quot;tempest/common/dynamic_creds.py&quot;, line 295, in get_credentials&#10;    credentials.tenant_id)&#10;  File &quot;tempest/common/dynamic_creds.py&quot;, line 212, in _create_network_resources&#10;    router = self._create_router(router_name, tenant_id)&#10;  File &quot;tempest/common/dynamic_creds.py&quot;, line 271, in _create_router&#10;    tenant_id=tenant_id)&#10;  File &quot;tempest/lib/services/network/routers_client.py&quot;, line 27, in create_router&#10;    return self.create_resource(uri, post_body)&#10;  File &quot;tempest/lib/services/network/base.py&quot;, line 60, in create_resource&#10;    resp, body = self.post(req_uri, req_post_data)&#10;  File &quot;tempest/lib/common/rest_client.py&quot;, line 276, in post&#10;    return self.request('POST', url, extra_headers, headers, body, chunked)&#10;  File &quot;tempest/lib/common/rest_client.py&quot;, line 665, in request&#10;    resp, resp_body)&#10;  File &quot;tempest/lib/common/rest_client.py&quot;, line 768, in _error_checker&#10;    raise exceptions.BadRequest(resp_body, resp=resp)&#10;tempest.lib.exceptions.BadRequest: Bad request&#10;Details: {u'message': u&quot;Invalid input for external_gateway_info. Reason: '' is not a valid UUID.&quot;, u'type': u'HTTPBadRequest', u'detail': u''}&#10;" type="failure" /></testcase><testcase name="tempest.api.orchestration.stacks.test_nova_keypair_resources.NovaKeyPairResourcesYAMLTest.test_created_resources"><failure message="Traceback (most recent call last):&#10;  File &quot;tempest/test.py&quot;, line 274, in setUpClass&#10;    six.reraise(etype, value, trace)&#10;  File &quot;tempest/test.py&quot;, line 262, in setUpClass&#10;    cls.setup_credentials()&#10;  File &quot;tempest/api/orchestration/base.py&quot;, line 38, in setup_credentials&#10;    super(BaseOrchestrationTest, cls).setup_credentials()&#10;  File &quot;tempest/test.py&quot;, line 362, in setup_credentials&#10;    credential_type=credentials_type)&#10;  File &quot;tempest/test.py&quot;, line 536, in get_client_manager&#10;    creds = getattr(cred_provider, credentials_method)()&#10;  File &quot;tempest/common/dynamic_creds.py&quot;, line 303, in get_primary_creds&#10;    return self.get_credentials('primary')&#10;  File &quot;tempest/common/dynamic_creds.py&quot;, line 295, in get_credentials&#10;    credentials.tenant_id)&#10;  File &quot;tempest/common/dynamic_creds.py&quot;, line 212, in _create_network_resources&#10;    router = self._create_router(router_name, tenant_id)&#10;  File &quot;tempest/common/dynamic_creds.py&quot;, line 271, in _create_router&#10;    tenant_id=tenant_id)&#10;  File &quot;tempest/lib/services/network/routers_client.py&quot;, line 27, in create_router&#10;    return self.create_resource(uri, post_body)&#10;  File &quot;tempest/lib/services/network/base.py&quot;, line 60, in create_resource&#10;    resp, body = self.post(req_uri, req_post_data)&#10;  File &quot;tempest/lib/common/rest_client.py&quot;, line 276, in post&#10;    return self.request('POST', url, extra_headers, headers, body, chunked)&#10;  File &quot;tempest/lib/common/rest_client.py&quot;, line 665, in request&#10;    resp, resp_body)&#10;  File &quot;tempest/lib/common/rest_client.py&quot;, line 768, in _error_checker&#10;    raise exceptions.BadRequest(resp_body, resp=resp)&#10;tempest.lib.exceptions.BadRequest: Bad request&#10;Details: {u'message': u&quot;Invalid input for external_gateway_info. Reason: '' is not a valid UUID.&quot;, u'type': u'HTTPBadRequest', u'detail': u''}&#10;" type="failure" /></testcase><testcase name="tempest.api.orchestration.stacks.test_templates_negative.TemplateAWSNegativeTestJSON.test_validate_template_url"><failure message="Traceback (most recent call last):&#10;  File &quot;tempest/test.py&quot;, line 274, in setUpClass&#10;    six.reraise(etype, value, trace)&#10;  File &quot;tempest/test.py&quot;, line 262, in setUpClass&#10;    cls.setup_credentials()&#10;  File &quot;tempest/api/orchestration/base.py&quot;, line 38, in setup_credentials&#10;    super(BaseOrchestrationTest, cls).setup_credentials()&#10;  File &quot;tempest/test.py&quot;, line 362, in setup_credentials&#10;    credential_type=credentials_type)&#10;  File &quot;tempest/test.py&quot;, line 536, in get_client_manager&#10;    creds = getattr(cred_provider, credentials_method)()&#10;  File &quot;tempest/common/dynamic_creds.py&quot;, line 303, in get_primary_creds&#10;    return self.get_credentials('primary')&#10;  File &quot;tempest/common/dynamic_creds.py&quot;, line 295, in get_credentials&#10;    credentials.tenant_id)&#10;  File &quot;tempest/common/dynamic_creds.py&quot;, line 212, in _create_network_resources&#10;    router = self._create_router(router_name, tenant_id)&#10;  File &quot;tempest/common/dynamic_creds.py&quot;, line 271, in _create_router&#10;    tenant_id=tenant_id)&#10;  File &quot;tempest/lib/services/network/routers_client.py&quot;, line 27, in create_router&#10;    return self.create_resource(uri, post_body)&#10;  File &quot;tempest/lib/services/network/base.py&quot;, line 60, in create_resource&#10;    resp, body = self.post(req_uri, req_post_data)&#10;  File &quot;tempest/lib/common/rest_client.py&quot;, line 276, in post&#10;    return self.request('POST', url, extra_headers, headers, body, chunked)&#10;  File &quot;tempest/lib/common/rest_client.py&quot;, line 665, in request&#10;    resp, resp_body)&#10;  File &quot;tempest/lib/common/rest_client.py&quot;, line 768, in _error_checker&#10;    raise exceptions.BadRequest(resp_body, resp=resp)&#10;tempest.lib.exceptions.BadRequest: Bad request&#10;Details: {u'message': u&quot;Invalid input for external_gateway_info. Reason: '' is not a valid UUID.&quot;, u'type': u'HTTPBadRequest', u'detail': u''}&#10;" type="failure" /></testcase><testcase name="tempest.scenario.test_stamp_pattern.TestStampPattern.test_stamp_pattern"><failure message="Traceback (most recent call last):&#10;  File &quot;tempest/test.py&quot;, line 274, in setUpClass&#10;    six.reraise(etype, value, trace)&#10;  File &quot;tempest/test.py&quot;, line 262, in setUpClass&#10;    cls.setup_credentials()&#10;  File &quot;tempest/test.py&quot;, line 362, in setup_credentials&#10;    credential_type=credentials_type)&#10;  File &quot;tempest/test.py&quot;, line 536, in get_client_manager&#10;    creds = getattr(cred_provider, credentials_method)()&#10;  File &quot;tempest/common/dynamic_creds.py&quot;, line 303, in get_primary_creds&#10;    return self.get_credentials('primary')&#10;  File &quot;tempest/common/dynamic_creds.py&quot;, line 295, in get_credentials&#10;    credentials.tenant_id)&#10;  File &quot;tempest/common/dynamic_creds.py&quot;, line 212, in _create_network_resources&#10;    router = self._create_router(router_name, tenant_id)&#10;  File &quot;tempest/common/dynamic_creds.py&quot;, line 271, in _create_router&#10;    tenant_id=tenant_id)&#10;  File &quot;tempest/lib/services/network/routers_client.py&quot;, line 27, in create_router&#10;    return self.create_resource(uri, post_body)&#10;  File &quot;tempest/lib/services/network/base.py&quot;, line 60, in create_resource&#10;    resp, body = self.post(req_uri, req_post_data)&#10;  File &quot;tempest/lib/common/rest_client.py&quot;, line 276, in post&#10;    return self.request('POST', url, extra_headers, headers, body, chunked)&#10;  File &quot;tempest/lib/common/rest_client.py&quot;, line 665, in request&#10;    resp, resp_body)&#10;  File &quot;tempest/lib/common/rest_client.py&quot;, line 768, in _error_checker&#10;    raise exceptions.BadRequest(resp_body, resp=resp)&#10;tempest.lib.exceptions.BadRequest: Bad request&#10;Details: {u'message': u&quot;Invalid input for external_gateway_info. Reason: '' is not a valid UUID.&quot;, u'type': u'HTTPBadRequest', u'detail': u''}&#10;" type="failure" /></testcase><testcase name="tempest.api.network.test_routers.RoutersTest.test_update_router_set_gateway"><failure message="Traceback (most recent call last):&#10;  File &quot;tempest/api/network/test_routers.py&quot;, line 205, in test_update_router_set_gateway&#10;    'network_id': CONF.network.public_network_id})&#10;  File &quot;tempest/lib/services/network/routers_client.py&quot;, line 38, in update_router&#10;    return self.update_resource(uri, update_body)&#10;  File &quot;tempest/lib/services/network/base.py&quot;, line 74, in update_resource&#10;    resp, body = self.put(req_uri, req_post_data)&#10;  File &quot;tempest/lib/common/rest_client.py&quot;, line 340, in put&#10;    return self.request('PUT', url, extra_headers, headers, body, chunked)&#10;  File &quot;tempest/lib/common/rest_client.py&quot;, line 665, in request&#10;    resp, resp_body)&#10;  File &quot;tempest/lib/common/rest_client.py&quot;, line 768, in _error_checker&#10;    raise exceptions.BadRequest(resp_body, resp=resp)&#10;tempest.lib.exceptions.BadRequest: Bad request&#10;Details: {u'message': u&quot;Invalid input for external_gateway_info. Reason: '' is not a valid UUID.&quot;, u'type': u'HTTPBadRequest', u'detail': u''}&#10;" type="failure" /></testcase><testcase name="tempest.api.network.test_routers.RoutersTest.test_update_router_set_gateway_with_snat_explicit"><failure message="Traceback (most recent call last):&#10;  File &quot;tempest/test.py&quot;, line 152, in wrapper&#10;    return func(*func_args, **func_kwargs)&#10;  File &quot;tempest/api/network/test_routers.py&quot;, line 220, in test_update_router_set_gateway_with_snat_explicit&#10;    'enable_snat': True})&#10;  File &quot;tempest/lib/services/network/routers_client.py&quot;, line 38, in update_router&#10;    return self.update_resource(uri, update_body)&#10;  File &quot;tempest/lib/services/network/base.py&quot;, line 74, in update_resource&#10;    resp, body = self.put(req_uri, req_post_data)&#10;  File &quot;tempest/lib/common/rest_client.py&quot;, line 340, in put&#10;    return self.request('PUT', url, extra_headers, headers, body, chunked)&#10;  File &quot;tempest/lib/common/rest_client.py&quot;, line 665, in request&#10;    resp, resp_body)&#10;  File &quot;tempest/lib/common/rest_client.py&quot;, line 768, in _error_checker&#10;    raise exceptions.BadRequest(resp_body, resp=resp)&#10;tempest.lib.exceptions.BadRequest: Bad request&#10;Details: {u'message': u&quot;Invalid input for external_gateway_info. Reason: '' is not a valid UUID.&quot;, u'type': u'HTTPBadRequest', u'detail': u''}&#10;" type="failure" /></testcase><testcase name="tempest.api.compute.servers.test_server_actions.ServerActionsTestJSON.test_get_console_output_with_unlimited_size"><failure message="Traceback (most recent call last):&#10;  File &quot;tempest/test.py&quot;, line 274, in setUpClass&#10;    six.reraise(etype, value, trace)&#10;  File &quot;tempest/test.py&quot;, line 262, in setUpClass&#10;    cls.setup_credentials()&#10;  File &quot;tempest/api/compute/servers/test_server_actions.py&quot;, line 66, in setup_credentials&#10;    super(ServerActionsTestJSON, cls).setup_credentials()&#10;  File &quot;tempest/api/compute/base.py&quot;, line 61, in setup_credentials&#10;    super(BaseV2ComputeTest, cls).setup_credentials()&#10;  File &quot;tempest/test.py&quot;, line 362, in setup_credentials&#10;    credential_type=credentials_type)&#10;  File &quot;tempest/test.py&quot;, line 536, in get_client_manager&#10;    creds = getattr(cred_provider, credentials_method)()&#10;  File &quot;tempest/common/dynamic_creds.py&quot;, line 303, in get_primary_creds&#10;    return self.get_credentials('primary')&#10;  File &quot;tempest/common/dynamic_creds.py&quot;, line 295, in get_credentials&#10;    credentials.tenant_id)&#10;  File &quot;tempest/common/dynamic_creds.py&quot;, line 212, in _create_network_resources&#10;    router = self._create_router(router_name, tenant_id)&#10;  File &quot;tempest/common/dynamic_creds.py&quot;, line 271, in _create_router&#10;    tenant_id=tenant_id)&#10;  File &quot;tempest/lib/services/network/routers_client.py&quot;, line 27, in create_router&#10;    return self.create_resource(uri, post_body)&#10;  File &quot;tempest/lib/services/network/base.py&quot;, line 60, in create_resource&#10;    resp, body = self.post(req_uri, req_post_data)&#10;  File &quot;tempest/lib/common/rest_client.py&quot;, line 276, in post&#10;    return self.request('POST', url, extra_headers, headers, body, chunked)&#10;  File &quot;tempest/lib/common/rest_client.py&quot;, line 665, in request&#10;    resp, resp_body)&#10;  File &quot;tempest/lib/common/rest_client.py&quot;, line 768, in _error_checker&#10;    raise exceptions.BadRequest(resp_body, resp=resp)&#10;tempest.lib.exceptions.BadRequest: Bad request&#10;Details: {u'message': u&quot;Invalid input for external_gateway_info. Reason: '' is not a valid UUID.&quot;, u'type': u'HTTPBadRequest', u'detail': u''}&#10;" type="failure" /></testcase><testcase name="tempest.api.compute.servers.test_server_rescue_negative.ServerRescueNegativeTestJSON.test_rescue_non_existent_server"><failure message="Traceback (most recent call last):&#10;  File &quot;tempest/test.py&quot;, line 274, in setUpClass&#10;    six.reraise(etype, value, trace)&#10;  File &quot;tempest/test.py&quot;, line 262, in setUpClass&#10;    cls.setup_credentials()&#10;  File &quot;tempest/api/compute/servers/test_server_rescue_negative.py&quot;, line 40, in setup_credentials&#10;    super(ServerRescueNegativeTestJSON, cls).setup_credentials()&#10;  File &quot;tempest/api/compute/base.py&quot;, line 61, in setup_credentials&#10;    super(BaseV2ComputeTest, cls).setup_credentials()&#10;  File &quot;tempest/test.py&quot;, line 362, in setup_credentials&#10;    credential_type=credentials_type)&#10;  File &quot;tempest/test.py&quot;, line 536, in get_client_manager&#10;    creds = getattr(cred_provider, credentials_method)()&#10;  File &quot;tempest/common/dynamic_creds.py&quot;, line 303, in get_primary_creds&#10;    return self.get_credentials('primary')&#10;  File &quot;tempest/common/dynamic_creds.py&quot;, line 295, in get_credentials&#10;    credentials.tenant_id)&#10;  File &quot;tempest/common/dynamic_creds.py&quot;, line 212, in _create_network_resources&#10;    router = self._create_router(router_name, tenant_id)&#10;  File &quot;tempest/common/dynamic_creds.py&quot;, line 271, in _create_router&#10;    tenant_id=tenant_id)&#10;  File &quot;tempest/lib/services/network/routers_client.py&quot;, line 27, in create_router&#10;    return self.create_resource(uri, post_body)&#10;  File &quot;tempest/lib/services/network/base.py&quot;, line 60, in create_resource&#10;    resp, body = self.post(req_uri, req_post_data)&#10;  File &quot;tempest/lib/common/rest_client.py&quot;, line 276, in post&#10;    return self.request('POST', url, extra_headers, headers, body, chunked)&#10;  File &quot;tempest/lib/common/rest_client.py&quot;, line 665, in request&#10;    resp, resp_body)&#10;  File &quot;tempest/lib/common/rest_client.py&quot;, line 768, in _error_checker&#10;    raise exceptions.BadRequest(resp_body, resp=resp)&#10;tempest.lib.exceptions.BadRequest: Bad request&#10;Details: {u'message': u&quot;Invalid input for external_gateway_info. Reason: '' is not a valid UUID.&quot;, u'type': u'HTTPBadRequest', u'detail': u''}&#10;" type="failure" /></testcase><testcase name="tempest.api.compute.floating_ips.test_list_floating_ips.FloatingIPDetailsTestJSON.test_get_floating_ip_details"><failure message="Traceback (most recent call last):&#10;  File &quot;tempest/test.py&quot;, line 274, in setUpClass&#10;    six.reraise(etype, value, trace)&#10;  File &quot;tempest/test.py&quot;, line 267, in setUpClass&#10;    cls.resource_setup()&#10;  File &quot;tempest/api/compute/floating_ips/test_list_floating_ips.py&quot;, line 38, in resource_setup&#10;    pool=CONF.network.floating_network_name)['floating_ip']&#10;  File &quot;tempest/lib/services/compute/floating_ips_client.py&quot;, line 62, in create_floating_ip&#10;    resp, body = self.post(url, post_body)&#10;  File &quot;tempest/lib/common/rest_client.py&quot;, line 276, in post&#10;    return self.request('POST', url, extra_headers, headers, body, chunked)&#10;  File &quot;tempest/lib/services/compute/base_compute_client.py&quot;, line 48, in request&#10;    method, url, extra_headers, headers, body, chunked)&#10;  File &quot;tempest/lib/common/rest_client.py&quot;, line 665, in request&#10;    resp, resp_body)&#10;  File &quot;tempest/lib/common/rest_client.py&quot;, line 763, in _error_checker&#10;    raise exceptions.NotFound(resp_body, resp=resp)&#10;tempest.lib.exceptions.NotFound: Object not found&#10;Details: {u'message': u'Floating IP pool not found.', u'code': 404}&#10;" type="failure" /></testcase><testcase name="tempest.api.compute.servers.test_server_actions.ServerActionsTestJSON.test_rebuild_server_with_volume_attached"><failure message="Traceback (most recent call last):&#10;  File &quot;tempest/test.py&quot;, line 274, in setUpClass&#10;    six.reraise(etype, value, trace)&#10;  File &quot;tempest/test.py&quot;, line 262, in setUpClass&#10;    cls.setup_credentials()&#10;  File &quot;tempest/api/compute/servers/test_server_actions.py&quot;, line 66, in setup_credentials&#10;    super(ServerActionsTestJSON, cls).setup_credentials()&#10;  File &quot;tempest/api/compute/base.py&quot;, line 61, in setup_credentials&#10;    super(BaseV2ComputeTest, cls).setup_credentials()&#10;  File &quot;tempest/test.py&quot;, line 362, in setup_credentials&#10;    credential_type=credentials_type)&#10;  File &quot;tempest/test.py&quot;, line 536, in get_client_manager&#10;    creds = getattr(cred_provider, credentials_method)()&#10;  File &quot;tempest/common/dynamic_creds.py&quot;, line 303, in get_primary_creds&#10;    return self.get_credentials('primary')&#10;  File &quot;tempest/common/dynamic_creds.py&quot;, line 295, in get_credentials&#10;    credentials.tenant_id)&#10;  File &quot;tempest/common/dynamic_creds.py&quot;, line 212, in _create_network_resources&#10;    router = self._create_router(router_name, tenant_id)&#10;  File &quot;tempest/common/dynamic_creds.py&quot;, line 271, in _create_router&#10;    tenant_id=tenant_id)&#10;  File &quot;tempest/lib/services/network/routers_client.py&quot;, line 27, in create_router&#10;    return self.create_resource(uri, post_body)&#10;  File &quot;tempest/lib/services/network/base.py&quot;, line 60, in create_resource&#10;    resp, body = self.post(req_uri, req_post_data)&#10;  File &quot;tempest/lib/common/rest_client.py&quot;, line 276, in post&#10;    return self.request('POST', url, extra_headers, headers, body, chunked)&#10;  File &quot;tempest/lib/common/rest_client.py&quot;, line 665, in request&#10;    resp, resp_body)&#10;  File &quot;tempest/lib/common/rest_client.py&quot;, line 768, in _error_checker&#10;    raise exceptions.BadRequest(resp_body, resp=resp)&#10;tempest.lib.exceptions.BadRequest: Bad request&#10;Details: {u'message': u&quot;Invalid input for external_gateway_info. Reason: '' is not a valid UUID.&quot;, u'type': u'HTTPBadRequest', u'detail': u''}&#10;" type="failure" /></testcase><testcase name="tempest.api.orchestration.stacks.test_soft_conf.TestSoftwareConfig.test_get_software_config"><failure message="Traceback (most recent call last):&#10;  File &quot;tempest/test.py&quot;, line 274, in setUpClass&#10;    six.reraise(etype, value, trace)&#10;  File &quot;tempest/test.py&quot;, line 262, in setUpClass&#10;    cls.setup_credentials()&#10;  File &quot;tempest/api/orchestration/base.py&quot;, line 38, in setup_credentials&#10;    super(BaseOrchestrationTest, cls).setup_credentials()&#10;  File &quot;tempest/test.py&quot;, line 362, in setup_credentials&#10;    credential_type=credentials_type)&#10;  File &quot;tempest/test.py&quot;, line 536, in get_client_manager&#10;    creds = getattr(cred_provider, credentials_method)()&#10;  File &quot;tempest/common/dynamic_creds.py&quot;, line 303, in get_primary_creds&#10;    return self.get_credentials('primary')&#10;  File &quot;tempest/common/dynamic_creds.py&quot;, line 295, in get_credentials&#10;    credentials.tenant_id)&#10;  File &quot;tempest/common/dynamic_creds.py&quot;, line 212, in _create_network_resources&#10;    router = self._create_router(router_name, tenant_id)&#10;  File &quot;tempest/common/dynamic_creds.py&quot;, line 271, in _create_router&#10;    tenant_id=tenant_id)&#10;  File &quot;tempest/lib/services/network/routers_client.py&quot;, line 27, in create_router&#10;    return self.create_resource(uri, post_body)&#10;  File &quot;tempest/lib/services/network/base.py&quot;, line 60, in create_resource&#10;    resp, body = self.post(req_uri, req_post_data)&#10;  File &quot;tempest/lib/common/rest_client.py&quot;, line 276, in post&#10;    return self.request('POST', url, extra_headers, headers, body, chunked)&#10;  File &quot;tempest/lib/common/rest_client.py&quot;, line 665, in request&#10;    resp, resp_body)&#10;  File &quot;tempest/lib/common/rest_client.py&quot;, line 768, in _error_checker&#10;    raise exceptions.BadRequest(resp_body, resp=resp)&#10;tempest.lib.exceptions.BadRequest: Bad request&#10;Details: {u'message': u&quot;Invalid input for external_gateway_info. Reason: '' is not a valid UUID.&quot;, u'type': u'HTTPBadRequest', u'detail': u''}&#10;" type="failure" /></testcase><testcase name="tempest.api.compute.floating_ips.test_floating_ips_actions_negative.FloatingIPsNegativeTestJSON.test_delete_nonexistent_floating_ip"><failure message="Traceback (most recent call last):&#10;  File &quot;tempest/test.py&quot;, line 274, in setUpClass&#10;    six.reraise(etype, value, trace)&#10;  File &quot;tempest/test.py&quot;, line 262, in setUpClass&#10;    cls.setup_credentials()&#10;  File &quot;tempest/api/compute/floating_ips/base.py&quot;, line 26, in setup_credentials&#10;    super(BaseFloatingIPsTest, cls).setup_credentials()&#10;  File &quot;tempest/api/compute/base.py&quot;, line 61, in setup_credentials&#10;    super(BaseV2ComputeTest, cls).setup_credentials()&#10;  File &quot;tempest/test.py&quot;, line 362, in setup_credentials&#10;    credential_type=credentials_type)&#10;  File &quot;tempest/test.py&quot;, line 536, in get_client_manager&#10;    creds = getattr(cred_provider, credentials_method)()&#10;  File &quot;tempest/common/dynamic_creds.py&quot;, line 303, in get_primary_creds&#10;    return self.get_credentials('primary')&#10;  File &quot;tempest/common/dynamic_creds.py&quot;, line 295, in get_credentials&#10;    credentials.tenant_id)&#10;  File &quot;tempest/common/dynamic_creds.py&quot;, line 212, in _create_network_resources&#10;    router = self._create_router(router_name, tenant_id)&#10;  File &quot;tempest/common/dynamic_creds.py&quot;, line 271, in _create_router&#10;    tenant_id=tenant_id)&#10;  File &quot;tempest/lib/services/network/routers_client.py&quot;, line 27, in create_router&#10;    return self.create_resource(uri, post_body)&#10;  File &quot;tempest/lib/services/network/base.py&quot;, line 60, in create_resource&#10;    resp, body = self.post(req_uri, req_post_data)&#10;  File &quot;tempest/lib/common/rest_client.py&quot;, line 276, in post&#10;    return self.request('POST', url, extra_headers, headers, body, chunked)&#10;  File &quot;tempest/lib/common/rest_client.py&quot;, line 665, in request&#10;    resp, resp_body)&#10;  File &quot;tempest/lib/common/rest_client.py&quot;, line 768, in _error_checker&#10;    raise exceptions.BadRequest(resp_body, resp=resp)&#10;tempest.lib.exceptions.BadRequest: Bad request&#10;Details: {u'message': u&quot;Invalid input for external_gateway_info. Reason: '' is not a valid UUID.&quot;, u'type': u'HTTPBadRequest', u'detail': u''}&#10;" type="failure" /></testcase><testcase name="tempest.api.orchestration.stacks.test_nova_keypair_resources.NovaKeyPairResourcesAWSTest.test_created_resources"><failure message="Traceback (most recent call last):&#10;  File &quot;tempest/test.py&quot;, line 274, in setUpClass&#10;    six.reraise(etype, value, trace)&#10;  File &quot;tempest/test.py&quot;, line 262, in setUpClass&#10;    cls.setup_credentials()&#10;  File &quot;tempest/api/orchestration/base.py&quot;, line 38, in setup_credentials&#10;    super(BaseOrchestrationTest, cls).setup_credentials()&#10;  File &quot;tempest/test.py&quot;, line 362, in setup_credentials&#10;    credential_type=credentials_type)&#10;  File &quot;tempest/test.py&quot;, line 536, in get_client_manager&#10;    creds = getattr(cred_provider, credentials_method)()&#10;  File &quot;tempest/common/dynamic_creds.py&quot;, line 303, in get_primary_creds&#10;    return self.get_credentials('primary')&#10;  File &quot;tempest/common/dynamic_creds.py&quot;, line 295, in get_credentials&#10;    credentials.tenant_id)&#10;  File &quot;tempest/common/dynamic_creds.py&quot;, line 212, in _create_network_resources&#10;    router = self._create_router(router_name, tenant_id)&#10;  File &quot;tempest/common/dynamic_creds.py&quot;, line 271, in _create_router&#10;    tenant_id=tenant_id)&#10;  File &quot;tempest/lib/services/network/routers_client.py&quot;, line 27, in create_router&#10;    return self.create_resource(uri, post_body)&#10;  File &quot;tempest/lib/services/network/base.py&quot;, line 60, in create_resource&#10;    resp, body = self.post(req_uri, req_post_data)&#10;  File &quot;tempest/lib/common/rest_client.py&quot;, line 276, in post&#10;    return self.request('POST', url, extra_headers, headers, body, chunked)&#10;  File &quot;tempest/lib/common/rest_client.py&quot;, line 665, in request&#10;    resp, resp_body)&#10;  File &quot;tempest/lib/common/rest_client.py&quot;, line 768, in _error_checker&#10;    raise exceptions.BadRequest(resp_body, resp=resp)&#10;tempest.lib.exceptions.BadRequest: Bad request&#10;Details: {u'message': u&quot;Invalid input for external_gateway_info. Reason: '' is not a valid UUID.&quot;, u'type': u'HTTPBadRequest', u'detail': u''}&#10;" type="failure" /></testcase><testcase name="tempest.api.compute.servers.test_create_server.ServersTestManualDisk.test_list_servers"><failure message="Traceback (most recent call last):&#10;  File &quot;tempest/test.py&quot;, line 274, in setUpClass&#10;    six.reraise(etype, value, trace)&#10;  File &quot;tempest/test.py&quot;, line 262, in setUpClass&#10;    cls.setup_credentials()&#10;  File &quot;tempest/api/compute/servers/test_create_server.py&quot;, line 35, in setup_credentials&#10;    super(ServersTestJSON, cls).setup_credentials()&#10;  File &quot;tempest/api/compute/base.py&quot;, line 61, in setup_credentials&#10;    super(BaseV2ComputeTest, cls).setup_credentials()&#10;  File &quot;tempest/test.py&quot;, line 362, in setup_credentials&#10;    credential_type=credentials_type)&#10;  File &quot;tempest/test.py&quot;, line 536, in get_client_manager&#10;    creds = getattr(cred_provider, credentials_method)()&#10;  File &quot;tempest/common/dynamic_creds.py&quot;, line 303, in get_primary_creds&#10;    return self.get_credentials('primary')&#10;  File &quot;tempest/common/dynamic_creds.py&quot;, line 295, in get_credentials&#10;    credentials.tenant_id)&#10;  File &quot;tempest/common/dynamic_creds.py&quot;, line 212, in _create_network_resources&#10;    router = self._create_router(router_name, tenant_id)&#10;  File &quot;tempest/common/dynamic_creds.py&quot;, line 271, in _create_router&#10;    tenant_id=tenant_id)&#10;  File &quot;tempest/lib/services/network/routers_client.py&quot;, line 27, in create_router&#10;    return self.create_resource(uri, post_body)&#10;  File &quot;tempest/lib/services/network/base.py&quot;, line 60, in create_resource&#10;    resp, body = self.post(req_uri, req_post_data)&#10;  File &quot;tempest/lib/common/rest_client.py&quot;, line 276, in post&#10;    return self.request('POST', url, extra_headers, headers, body, chunked)&#10;  File &quot;tempest/lib/common/rest_client.py&quot;, line 665, in request&#10;    resp, resp_body)&#10;  File &quot;tempest/lib/common/rest_client.py&quot;, line 768, in _error_checker&#10;    raise exceptions.BadRequest(resp_body, resp=resp)&#10;tempest.lib.exceptions.BadRequest: Bad request&#10;Details: {u'message': u&quot;Invalid input for external_gateway_info. Reason: '' is not a valid UUID.&quot;, u'type': u'HTTPBadRequest', u'detail': u''}&#10;" type="failure" /></testcase><testcase name="tempest.api.orchestration.stacks.test_resource_types.ResourceTypesTest.test_resource_type_list"><failure message="Traceback (most recent call last):&#10;  File &quot;tempest/test.py&quot;, line 274, in setUpClass&#10;    six.reraise(etype, value, trace)&#10;  File &quot;tempest/test.py&quot;, line 262, in setUpClass&#10;    cls.setup_credentials()&#10;  File &quot;tempest/api/orchestration/base.py&quot;, line 38, in setup_credentials&#10;    super(BaseOrchestrationTest, cls).setup_credentials()&#10;  File &quot;tempest/test.py&quot;, line 362, in setup_credentials&#10;    credential_type=credentials_type)&#10;  File &quot;tempest/test.py&quot;, line 536, in get_client_manager&#10;    creds = getattr(cred_provider, credentials_method)()&#10;  File &quot;tempest/common/dynamic_creds.py&quot;, line 303, in get_primary_creds&#10;    return self.get_credentials('primary')&#10;  File &quot;tempest/common/dynamic_creds.py&quot;, line 295, in get_credentials&#10;    credentials.tenant_id)&#10;  File &quot;tempest/common/dynamic_creds.py&quot;, line 212, in _create_network_resources&#10;    router = self._create_router(router_name, tenant_id)&#10;  File &quot;tempest/common/dynamic_creds.py&quot;, line 271, in _create_router&#10;    tenant_id=tenant_id)&#10;  File &quot;tempest/lib/services/network/routers_client.py&quot;, line 27, in create_router&#10;    return self.create_resource(uri, post_body)&#10;  File &quot;tempest/lib/services/network/base.py&quot;, line 60, in create_resource&#10;    resp, body = self.post(req_uri, req_post_data)&#10;  File &quot;tempest/lib/common/rest_client.py&quot;, line 276, in post&#10;    return self.request('POST', url, extra_headers, headers, body, chunked)&#10;  File &quot;tempest/lib/common/rest_client.py&quot;, line 665, in request&#10;    resp, resp_body)&#10;  File &quot;tempest/lib/common/rest_client.py&quot;, line 768, in _error_checker&#10;    raise exceptions.BadRequest(resp_body, resp=resp)&#10;tempest.lib.exceptions.BadRequest: Bad request&#10;Details: {u'message': u&quot;Invalid input for external_gateway_info. Reason: '' is not a valid UUID.&quot;, u'type': u'HTTPBadRequest', u'detail': u''}&#10;" type="failure" /></testcase><testcase name="tempest.api.network.test_routers.RoutersIpV6Test.test_create_router_with_snat_explicit"><failure message="Traceback (most recent call last):&#10;  File &quot;tempest/test.py&quot;, line 152, in wrapper&#10;    return func(*func_args, **func_kwargs)&#10;  File &quot;tempest/api/network/test_routers.py&quot;, line 127, in test_create_router_with_snat_explicit&#10;    name=name, external_gateway_info=external_gateway_info)&#10;  File &quot;tempest/lib/services/network/routers_client.py&quot;, line 27, in create_router&#10;    return self.create_resource(uri, post_body)&#10;  File &quot;tempest/lib/services/network/base.py&quot;, line 60, in create_resource&#10;    resp, body = self.post(req_uri, req_post_data)&#10;  File &quot;tempest/lib/common/rest_client.py&quot;, line 276, in post&#10;    return self.request('POST', url, extra_headers, headers, body, chunked)&#10;  File &quot;tempest/lib/common/rest_client.py&quot;, line 665, in request&#10;    resp, resp_body)&#10;  File &quot;tempest/lib/common/rest_client.py&quot;, line 768, in _error_checker&#10;    raise exceptions.BadRequest(resp_body, resp=resp)&#10;tempest.lib.exceptions.BadRequest: Bad request&#10;Details: {u'message': u&quot;Invalid input for external_gateway_info. Reason: '' is not a valid UUID.&quot;, u'type': u'HTTPBadRequest', u'detail': u''}&#10;" type="failure" /></testcase><testcase name="tempest.api.network.admin.test_floating_ips_admin_actions.FloatingIPAdminTestJSON.test_create_list_show_floating_ip_with_tenant_id_by_admin"><failure message="Traceback (most recent call last):&#10;  File &quot;tempest/test.py&quot;, line 274, in setUpClass&#10;    six.reraise(etype, value, trace)&#10;  File &quot;tempest/test.py&quot;, line 267, in setUpClass&#10;    cls.resource_setup()&#10;  File &quot;tempest/api/network/admin/test_floating_ips_admin_actions.py&quot;, line 44, in resource_setup&#10;    cls.floating_ip = cls.create_floatingip(cls.ext_net_id)&#10;  File &quot;tempest/api/network/base.py&quot;, line 227, in create_floatingip&#10;    floating_network_id=external_network_id)&#10;  File &quot;tempest/lib/services/network/floating_ips_client.py&quot;, line 30, in create_floatingip&#10;    return self.create_resource(uri, post_data)&#10;  File &quot;tempest/lib/services/network/base.py&quot;, line 60, in create_resource&#10;    resp, body = self.post(req_uri, req_post_data)&#10;  File &quot;tempest/lib/common/rest_client.py&quot;, line 276, in post&#10;    return self.request('POST', url, extra_headers, headers, body, chunked)&#10;  File &quot;tempest/lib/common/rest_client.py&quot;, line 665, in request&#10;    resp, resp_body)&#10;  File &quot;tempest/lib/common/rest_client.py&quot;, line 768, in _error_checker&#10;    raise exceptions.BadRequest(resp_body, resp=resp)&#10;tempest.lib.exceptions.BadRequest: Bad request&#10;Details: {u'message': u&quot;Invalid input for floating_network_id. Reason: '' is not a valid UUID.&quot;, u'type': u'HTTPBadRequest', u'detail': u''}&#10;" type="failure" /></testcase><testcase name="tempest.api.compute.images.test_images_oneserver_negative.ImagesOneServerNegativeTestJSON.test_create_image_specify_invalid_metadata"><failure message="Traceback (most recent call last):&#10;  File &quot;tempest/test.py&quot;, line 274, in setUpClass&#10;    six.reraise(etype, value, trace)&#10;  File &quot;tempest/test.py&quot;, line 262, in setUpClass&#10;    cls.setup_credentials()&#10;  File &quot;tempest/api/compute/images/test_images_oneserver_negative.py&quot;, line 74, in setup_credentials&#10;    super(ImagesOneServerNegativeTestJSON, cls).setup_credentials()&#10;  File &quot;tempest/api/compute/base.py&quot;, line 61, in setup_credentials&#10;    super(BaseV2ComputeTest, cls).setup_credentials()&#10;  File &quot;tempest/test.py&quot;, line 362, in setup_credentials&#10;    credential_type=credentials_type)&#10;  File &quot;tempest/test.py&quot;, line 536, in get_client_manager&#10;    creds = getattr(cred_provider, credentials_method)()&#10;  File &quot;tempest/common/dynamic_creds.py&quot;, line 303, in get_primary_creds&#10;    return self.get_credentials('primary')&#10;  File &quot;tempest/common/dynamic_creds.py&quot;, line 295, in get_credentials&#10;    credentials.tenant_id)&#10;  File &quot;tempest/common/dynamic_creds.py&quot;, line 212, in _create_network_resources&#10;    router = self._create_router(router_name, tenant_id)&#10;  File &quot;tempest/common/dynamic_creds.py&quot;, line 271, in _create_router&#10;    tenant_id=tenant_id)&#10;  File &quot;tempest/lib/services/network/routers_client.py&quot;, line 27, in create_router&#10;    return self.create_resource(uri, post_body)&#10;  File &quot;tempest/lib/services/network/base.py&quot;, line 60, in create_resource&#10;    resp, body = self.post(req_uri, req_post_data)&#10;  File &quot;tempest/lib/common/rest_client.py&quot;, line 276, in post&#10;    return self.request('POST', url, extra_headers, headers, body, chunked)&#10;  File &quot;tempest/lib/common/rest_client.py&quot;, line 665, in request&#10;    resp, resp_body)&#10;  File &quot;tempest/lib/common/rest_client.py&quot;, line 768, in _error_checker&#10;    raise exceptions.BadRequest(resp_body, resp=resp)&#10;tempest.lib.exceptions.BadRequest: Bad request&#10;Details: {u'message': u&quot;Invalid input for external_gateway_info. Reason: '' is not a valid UUID.&quot;, u'type': u'HTTPBadRequest', u'detail': u''}&#10;" type="failure" /></testcase><testcase name="tempest.api.compute.servers.test_create_server.ServersTestManualDisk.test_list_servers_with_detail"><failure message="Traceback (most recent call last):&#10;  File &quot;tempest/test.py&quot;, line 274, in setUpClass&#10;    six.reraise(etype, value, trace)&#10;  File &quot;tempest/test.py&quot;, line 262, in setUpClass&#10;    cls.setup_credentials()&#10;  File &quot;tempest/api/compute/servers/test_create_server.py&quot;, line 35, in setup_credentials&#10;    super(ServersTestJSON, cls).setup_credentials()&#10;  File &quot;tempest/api/compute/base.py&quot;, line 61, in setup_credentials&#10;    super(BaseV2ComputeTest, cls).setup_credentials()&#10;  File &quot;tempest/test.py&quot;, line 362, in setup_credentials&#10;    credential_type=credentials_type)&#10;  File &quot;tempest/test.py&quot;, line 536, in get_client_manager&#10;    creds = getattr(cred_provider, credentials_method)()&#10;  File &quot;tempest/common/dynamic_creds.py&quot;, line 303, in get_primary_creds&#10;    return self.get_credentials('primary')&#10;  File &quot;tempest/common/dynamic_creds.py&quot;, line 295, in get_credentials&#10;    credentials.tenant_id)&#10;  File &quot;tempest/common/dynamic_creds.py&quot;, line 212, in _create_network_resources&#10;    router = self._create_router(router_name, tenant_id)&#10;  File &quot;tempest/common/dynamic_creds.py&quot;, line 271, in _create_router&#10;    tenant_id=tenant_id)&#10;  File &quot;tempest/lib/services/network/routers_client.py&quot;, line 27, in create_router&#10;    return self.create_resource(uri, post_body)&#10;  File &quot;tempest/lib/services/network/base.py&quot;, line 60, in create_resource&#10;    resp, body = self.post(req_uri, req_post_data)&#10;  File &quot;tempest/lib/common/rest_client.py&quot;, line 276, in post&#10;    return self.request('POST', url, extra_headers, headers, body, chunked)&#10;  File &quot;tempest/lib/common/rest_client.py&quot;, line 665, in request&#10;    resp, resp_body)&#10;  File &quot;tempest/lib/common/rest_client.py&quot;, line 768, in _error_checker&#10;    raise exceptions.BadRequest(resp_body, resp=resp)&#10;tempest.lib.exceptions.BadRequest: Bad request&#10;Details: {u'message': u&quot;Invalid input for external_gateway_info. Reason: '' is not a valid UUID.&quot;, u'type': u'HTTPBadRequest', u'detail': u''}&#10;" type="failure" /></testcase><testcase name="tempest.api.compute.images.test_images_oneserver_negative.ImagesOneServerNegativeTestJSON.test_create_image_specify_metadata_over_limits"><failure message="Traceback (most recent call last):&#10;  File &quot;tempest/test.py&quot;, line 274, in setUpClass&#10;    six.reraise(etype, value, trace)&#10;  File &quot;tempest/test.py&quot;, line 262, in setUpClass&#10;    cls.setup_credentials()&#10;  File &quot;tempest/api/compute/images/test_images_oneserver_negative.py&quot;, line 74, in setup_credentials&#10;    super(ImagesOneServerNegativeTestJSON, cls).setup_credentials()&#10;  File &quot;tempest/api/compute/base.py&quot;, line 61, in setup_credentials&#10;    super(BaseV2ComputeTest, cls).setup_credentials()&#10;  File &quot;tempest/test.py&quot;, line 362, in setup_credentials&#10;    credential_type=credentials_type)&#10;  File &quot;tempest/test.py&quot;, line 536, in get_client_manager&#10;    creds = getattr(cred_provider, credentials_method)()&#10;  File &quot;tempest/common/dynamic_creds.py&quot;, line 303, in get_primary_creds&#10;    return self.get_credentials('primary')&#10;  File &quot;tempest/common/dynamic_creds.py&quot;, line 295, in get_credentials&#10;    credentials.tenant_id)&#10;  File &quot;tempest/common/dynamic_creds.py&quot;, line 212, in _create_network_resources&#10;    router = self._create_router(router_name, tenant_id)&#10;  File &quot;tempest/common/dynamic_creds.py&quot;, line 271, in _create_router&#10;    tenant_id=tenant_id)&#10;  File &quot;tempest/lib/services/network/routers_client.py&quot;, line 27, in create_router&#10;    return self.create_resource(uri, post_body)&#10;  File &quot;tempest/lib/services/network/base.py&quot;, line 60, in create_resource&#10;    resp, body = self.post(req_uri, req_post_data)&#10;  File &quot;tempest/lib/common/rest_client.py&quot;, line 276, in post&#10;    return self.request('POST', url, extra_headers, headers, body, chunked)&#10;  File &quot;tempest/lib/common/rest_client.py&quot;, line 665, in request&#10;    resp, resp_body)&#10;  File &quot;tempest/lib/common/rest_client.py&quot;, line 768, in _error_checker&#10;    raise exceptions.BadRequest(resp_body, resp=resp)&#10;tempest.lib.exceptions.BadRequest: Bad request&#10;Details: {u'message': u&quot;Invalid input for external_gateway_info. Reason: '' is not a valid UUID.&quot;, u'type': u'HTTPBadRequest', u'detail': u''}&#10;" type="failure" /></testcase><testcase name="tempest.api.orchestration.stacks.test_stacks.StacksTestJSON.test_stack_list_responds"><failure message="Traceback (most recent call last):&#10;  File &quot;tempest/test.py&quot;, line 274, in setUpClass&#10;    six.reraise(etype, value, trace)&#10;  File &quot;tempest/test.py&quot;, line 262, in setUpClass&#10;    cls.setup_credentials()&#10;  File &quot;tempest/api/orchestration/base.py&quot;, line 38, in setup_credentials&#10;    super(BaseOrchestrationTest, cls).setup_credentials()&#10;  File &quot;tempest/test.py&quot;, line 362, in setup_credentials&#10;    credential_type=credentials_type)&#10;  File &quot;tempest/test.py&quot;, line 536, in get_client_manager&#10;    creds = getattr(cred_provider, credentials_method)()&#10;  File &quot;tempest/common/dynamic_creds.py&quot;, line 303, in get_primary_creds&#10;    return self.get_credentials('primary')&#10;  File &quot;tempest/common/dynamic_creds.py&quot;, line 295, in get_credentials&#10;    credentials.tenant_id)&#10;  File &quot;tempest/common/dynamic_creds.py&quot;, line 212, in _create_network_resources&#10;    router = self._create_router(router_name, tenant_id)&#10;  File &quot;tempest/common/dynamic_creds.py&quot;, line 271, in _create_router&#10;    tenant_id=tenant_id)&#10;  File &quot;tempest/lib/services/network/routers_client.py&quot;, line 27, in create_router&#10;    return self.create_resource(uri, post_body)&#10;  File &quot;tempest/lib/services/network/base.py&quot;, line 60, in create_resource&#10;    resp, body = self.post(req_uri, req_post_data)&#10;  File &quot;tempest/lib/common/rest_client.py&quot;, line 276, in post&#10;    return self.request('POST', url, extra_headers, headers, body, chunked)&#10;  File &quot;tempest/lib/common/rest_client.py&quot;, line 665, in request&#10;    resp, resp_body)&#10;  File &quot;tempest/lib/common/rest_client.py&quot;, line 768, in _error_checker&#10;    raise exceptions.BadRequest(resp_body, resp=resp)&#10;tempest.lib.exceptions.BadRequest: Bad request&#10;Details: {u'message': u&quot;Invalid input for external_gateway_info. Reason: '' is not a valid UUID.&quot;, u'type': u'HTTPBadRequest', u'detail': u''}&#10;" type="failure" /></testcase><testcase name="tempest.api.network.test_routers.RoutersTest.test_create_router_with_snat_explicit"><failure message="Traceback (most recent call last):&#10;  File &quot;tempest/test.py&quot;, line 152, in wrapper&#10;    return func(*func_args, **func_kwargs)&#10;  File &quot;tempest/api/network/test_routers.py&quot;, line 127, in test_create_router_with_snat_explicit&#10;    name=name, external_gateway_info=external_gateway_info)&#10;  File &quot;tempest/lib/services/network/routers_client.py&quot;, line 27, in create_router&#10;    return self.create_resource(uri, post_body)&#10;  File &quot;tempest/lib/services/network/base.py&quot;, line 60, in create_resource&#10;    resp, body = self.post(req_uri, req_post_data)&#10;  File &quot;tempest/lib/common/rest_client.py&quot;, line 276, in post&#10;    return self.request('POST', url, extra_headers, headers, body, chunked)&#10;  File &quot;tempest/lib/common/rest_client.py&quot;, line 665, in request&#10;    resp, resp_body)&#10;  File &quot;tempest/lib/common/rest_client.py&quot;, line 768, in _error_checker&#10;    raise exceptions.BadRequest(resp_body, resp=resp)&#10;tempest.lib.exceptions.BadRequest: Bad request&#10;Details: {u'message': u&quot;Invalid input for external_gateway_info. Reason: '' is not a valid UUID.&quot;, u'type': u'HTTPBadRequest', u'detail': u''}&#10;" type="failure" /></testcase><testcase name="tempest.api.network.test_routers.RoutersIpV6Test.test_create_show_list_update_delete_router"><failure message="Traceback (most recent call last):&#10;  File &quot;tempest/api/network/test_routers.py&quot;, line 58, in test_create_show_list_update_delete_router&#10;    admin_state_up=False)&#10;  File &quot;tempest/lib/services/network/routers_client.py&quot;, line 27, in create_router&#10;    return self.create_resource(uri, post_body)&#10;  File &quot;tempest/lib/services/network/base.py&quot;, line 60, in create_resource&#10;    resp, body = self.post(req_uri, req_post_data)&#10;  File &quot;tempest/lib/common/rest_client.py&quot;, line 276, in post&#10;    return self.request('POST', url, extra_headers, headers, body, chunked)&#10;  File &quot;tempest/lib/common/rest_client.py&quot;, line 665, in request&#10;    resp, resp_body)&#10;  File &quot;tempest/lib/common/rest_client.py&quot;, line 768, in _error_checker&#10;    raise exceptions.BadRequest(resp_body, resp=resp)&#10;tempest.lib.exceptions.BadRequest: Bad request&#10;Details: {u'message': u&quot;Invalid input for external_gateway_info. Reason: '' is not a valid UUID.&quot;, u'type': u'HTTPBadRequest', u'detail': u''}&#10;" type="failure" /></testcase><testcase name="tempest.scenario.test_volume_boot_pattern.TestVolumeBootPatternV2.test_volume_boot_pattern"><failure message="Traceback (most recent call last):&#10;  File &quot;tempest/test.py&quot;, line 274, in setUpClass&#10;    six.reraise(etype, value, trace)&#10;  File &quot;tempest/test.py&quot;, line 262, in setUpClass&#10;    cls.setup_credentials()&#10;  File &quot;tempest/test.py&quot;, line 362, in setup_credentials&#10;    credential_type=credentials_type)&#10;  File &quot;tempest/test.py&quot;, line 536, in get_client_manager&#10;    creds = getattr(cred_provider, credentials_method)()&#10;  File &quot;tempest/common/dynamic_creds.py&quot;, line 303, in get_primary_creds&#10;    return self.get_credentials('primary')&#10;  File &quot;tempest/common/dynamic_creds.py&quot;, line 295, in get_credentials&#10;    credentials.tenant_id)&#10;  File &quot;tempest/common/dynamic_creds.py&quot;, line 212, in _create_network_resources&#10;    router = self._create_router(router_name, tenant_id)&#10;  File &quot;tempest/common/dynamic_creds.py&quot;, line 271, in _create_router&#10;    tenant_id=tenant_id)&#10;  File &quot;tempest/lib/services/network/routers_client.py&quot;, line 27, in create_router&#10;    return self.create_resource(uri, post_body)&#10;  File &quot;tempest/lib/services/network/base.py&quot;, line 60, in create_resource&#10;    resp, body = self.post(req_uri, req_post_data)&#10;  File &quot;tempest/lib/common/rest_client.py&quot;, line 276, in post&#10;    return self.request('POST', url, extra_headers, headers, body, chunked)&#10;  File &quot;tempest/lib/common/rest_client.py&quot;, line 665, in request&#10;    resp, resp_body)&#10;  File &quot;tempest/lib/common/rest_client.py&quot;, line 768, in _error_checker&#10;    raise exceptions.BadRequest(resp_body, resp=resp)&#10;tempest.lib.exceptions.BadRequest: Bad request&#10;Details: {u'message': u&quot;Invalid input for external_gateway_info. Reason: '' is not a valid UUID.&quot;, u'type': u'HTTPBadRequest', u'detail': u''}&#10;" type="failure" /></testcase><testcase name="tempest.api.compute.servers.test_server_actions.ServerActionsTestJSON.test_resize_server_revert"><failure message="Traceback (most recent call last):&#10;  File &quot;tempest/test.py&quot;, line 274, in setUpClass&#10;    six.reraise(etype, value, trace)&#10;  File &quot;tempest/test.py&quot;, line 262, in setUpClass&#10;    cls.setup_credentials()&#10;  File &quot;tempest/api/compute/servers/test_server_actions.py&quot;, line 66, in setup_credentials&#10;    super(ServerActionsTestJSON, cls).setup_credentials()&#10;  File &quot;tempest/api/compute/base.py&quot;, line 61, in setup_credentials&#10;    super(BaseV2ComputeTest, cls).setup_credentials()&#10;  File &quot;tempest/test.py&quot;, line 362, in setup_credentials&#10;    credential_type=credentials_type)&#10;  File &quot;tempest/test.py&quot;, line 536, in get_client_manager&#10;    creds = getattr(cred_provider, credentials_method)()&#10;  File &quot;tempest/common/dynamic_creds.py&quot;, line 303, in get_primary_creds&#10;    return self.get_credentials('primary')&#10;  File &quot;tempest/common/dynamic_creds.py&quot;, line 295, in get_credentials&#10;    credentials.tenant_id)&#10;  File &quot;tempest/common/dynamic_creds.py&quot;, line 212, in _create_network_resources&#10;    router = self._create_router(router_name, tenant_id)&#10;  File &quot;tempest/common/dynamic_creds.py&quot;, line 271, in _create_router&#10;    tenant_id=tenant_id)&#10;  File &quot;tempest/lib/services/network/routers_client.py&quot;, line 27, in create_router&#10;    return self.create_resource(uri, post_body)&#10;  File &quot;tempest/lib/services/network/base.py&quot;, line 60, in create_resource&#10;    resp, body = self.post(req_uri, req_post_data)&#10;  File &quot;tempest/lib/common/rest_client.py&quot;, line 276, in post&#10;    return self.request('POST', url, extra_headers, headers, body, chunked)&#10;  File &quot;tempest/lib/common/rest_client.py&quot;, line 665, in request&#10;    resp, resp_body)&#10;  File &quot;tempest/lib/common/rest_client.py&quot;, line 768, in _error_checker&#10;    raise exceptions.BadRequest(resp_body, resp=resp)&#10;tempest.lib.exceptions.BadRequest: Bad request&#10;Details: {u'message': u&quot;Invalid input for external_gateway_info. Reason: '' is not a valid UUID.&quot;, u'type': u'HTTPBadRequest', u'detail': u''}&#10;" type="failure" /></testcase><testcase name="tempest.api.compute.servers.test_create_server.ServersTestManualDisk.test_verify_created_server_vcpus"><failure message="Traceback (most recent call last):&#10;  File &quot;tempest/test.py&quot;, line 274, in setUpClass&#10;    six.reraise(etype, value, trace)&#10;  File &quot;tempest/test.py&quot;, line 262, in setUpClass&#10;    cls.setup_credentials()&#10;  File &quot;tempest/api/compute/servers/test_create_server.py&quot;, line 35, in setup_credentials&#10;    super(ServersTestJSON, cls).setup_credentials()&#10;  File &quot;tempest/api/compute/base.py&quot;, line 61, in setup_credentials&#10;    super(BaseV2ComputeTest, cls).setup_credentials()&#10;  File &quot;tempest/test.py&quot;, line 362, in setup_credentials&#10;    credential_type=credentials_type)&#10;  File &quot;tempest/test.py&quot;, line 536, in get_client_manager&#10;    creds = getattr(cred_provider, credentials_method)()&#10;  File &quot;tempest/common/dynamic_creds.py&quot;, line 303, in get_primary_creds&#10;    return self.get_credentials('primary')&#10;  File &quot;tempest/common/dynamic_creds.py&quot;, line 295, in get_credentials&#10;    credentials.tenant_id)&#10;  File &quot;tempest/common/dynamic_creds.py&quot;, line 212, in _create_network_resources&#10;    router = self._create_router(router_name, tenant_id)&#10;  File &quot;tempest/common/dynamic_creds.py&quot;, line 271, in _create_router&#10;    tenant_id=tenant_id)&#10;  File &quot;tempest/lib/services/network/routers_client.py&quot;, line 27, in create_router&#10;    return self.create_resource(uri, post_body)&#10;  File &quot;tempest/lib/services/network/base.py&quot;, line 60, in create_resource&#10;    resp, body = self.post(req_uri, req_post_data)&#10;  File &quot;tempest/lib/common/rest_client.py&quot;, line 276, in post&#10;    return self.request('POST', url, extra_headers, headers, body, chunked)&#10;  File &quot;tempest/lib/common/rest_client.py&quot;, line 665, in request&#10;    resp, resp_body)&#10;  File &quot;tempest/lib/common/rest_client.py&quot;, line 768, in _error_checker&#10;    raise exceptions.BadRequest(resp_body, resp=resp)&#10;tempest.lib.exceptions.BadRequest: Bad request&#10;Details: {u'message': u&quot;Invalid input for external_gateway_info. Reason: '' is not a valid UUID.&quot;, u'type': u'HTTPBadRequest', u'detail': u''}&#10;" type="failure" /></testcase><testcase name="tempest.api.orchestration.stacks.test_non_empty_stack.StacksTestJSON.test_list_events"><failure message="Traceback (most recent call last):&#10;  File &quot;tempest/test.py&quot;, line 274, in setUpClass&#10;    six.reraise(etype, value, trace)&#10;  File &quot;tempest/test.py&quot;, line 262, in setUpClass&#10;    cls.setup_credentials()&#10;  File &quot;tempest/api/orchestration/base.py&quot;, line 38, in setup_credentials&#10;    super(BaseOrchestrationTest, cls).setup_credentials()&#10;  File &quot;tempest/test.py&quot;, line 362, in setup_credentials&#10;    credential_type=credentials_type)&#10;  File &quot;tempest/test.py&quot;, line 536, in get_client_manager&#10;    creds = getattr(cred_provider, credentials_method)()&#10;  File &quot;tempest/common/dynamic_creds.py&quot;, line 303, in get_primary_creds&#10;    return self.get_credentials('primary')&#10;  File &quot;tempest/common/dynamic_creds.py&quot;, line 295, in get_credentials&#10;    credentials.tenant_id)&#10;  File &quot;tempest/common/dynamic_creds.py&quot;, line 212, in _create_network_resources&#10;    router = self._create_router(router_name, tenant_id)&#10;  File &quot;tempest/common/dynamic_creds.py&quot;, line 271, in _create_router&#10;    tenant_id=tenant_id)&#10;  File &quot;tempest/lib/services/network/routers_client.py&quot;, line 27, in create_router&#10;    return self.create_resource(uri, post_body)&#10;  File &quot;tempest/lib/services/network/base.py&quot;, line 60, in create_resource&#10;    resp, body = self.post(req_uri, req_post_data)&#10;  File &quot;tempest/lib/common/rest_client.py&quot;, line 276, in post&#10;    return self.request('POST', url, extra_headers, headers, body, chunked)&#10;  File &quot;tempest/lib/common/rest_client.py&quot;, line 665, in request&#10;    resp, resp_body)&#10;  File &quot;tempest/lib/common/rest_client.py&quot;, line 768, in _error_checker&#10;    raise exceptions.BadRequest(resp_body, resp=resp)&#10;tempest.lib.exceptions.BadRequest: Bad request&#10;Details: {u'message': u&quot;Invalid input for external_gateway_info. Reason: '' is not a valid UUID.&quot;, u'type': u'HTTPBadRequest', u'detail': u''}&#10;" type="failure" /></testcase><testcase name="tempest.api.orchestration.stacks.test_templates.TemplateAWSTestJSON.test_validate_template"><failure message="Traceback (most recent call last):&#10;  File &quot;tempest/test.py&quot;, line 274, in setUpClass&#10;    six.reraise(etype, value, trace)&#10;  File &quot;tempest/test.py&quot;, line 262, in setUpClass&#10;    cls.setup_credentials()&#10;  File &quot;tempest/api/orchestration/base.py&quot;, line 38, in setup_credentials&#10;    super(BaseOrchestrationTest, cls).setup_credentials()&#10;  File &quot;tempest/test.py&quot;, line 362, in setup_credentials&#10;    credential_type=credentials_type)&#10;  File &quot;tempest/test.py&quot;, line 536, in get_client_manager&#10;    creds = getattr(cred_provider, credentials_method)()&#10;  File &quot;tempest/common/dynamic_creds.py&quot;, line 303, in get_primary_creds&#10;    return self.get_credentials('primary')&#10;  File &quot;tempest/common/dynamic_creds.py&quot;, line 295, in get_credentials&#10;    credentials.tenant_id)&#10;  File &quot;tempest/common/dynamic_creds.py&quot;, line 212, in _create_network_resources&#10;    router = self._create_router(router_name, tenant_id)&#10;  File &quot;tempest/common/dynamic_creds.py&quot;, line 271, in _create_router&#10;    tenant_id=tenant_id)&#10;  File &quot;tempest/lib/services/network/routers_client.py&quot;, line 27, in create_router&#10;    return self.create_resource(uri, post_body)&#10;  File &quot;tempest/lib/services/network/base.py&quot;, line 60, in create_resource&#10;    resp, body = self.post(req_uri, req_post_data)&#10;  File &quot;tempest/lib/common/rest_client.py&quot;, line 276, in post&#10;    return self.request('POST', url, extra_headers, headers, body, chunked)&#10;  File &quot;tempest/lib/common/rest_client.py&quot;, line 665, in request&#10;    resp, resp_body)&#10;  File &quot;tempest/lib/common/rest_client.py&quot;, line 768, in _error_checker&#10;    raise exceptions.BadRequest(resp_body, resp=resp)&#10;tempest.lib.exceptions.BadRequest: Bad request&#10;Details: {u'message': u&quot;Invalid input for external_gateway_info. Reason: '' is not a valid UUID.&quot;, u'type': u'HTTPBadRequest', u'detail': u''}&#10;" type="failure" /></testcase><testcase name="tempest.api.orchestration.stacks.test_non_empty_stack.StacksTestJSON.test_stack_show"><failure message="Traceback (most recent call last):&#10;  File &quot;tempest/test.py&quot;, line 274, in setUpClass&#10;    six.reraise(etype, value, trace)&#10;  File &quot;tempest/test.py&quot;, line 262, in setUpClass&#10;    cls.setup_credentials()&#10;  File &quot;tempest/api/orchestration/base.py&quot;, line 38, in setup_credentials&#10;    super(BaseOrchestrationTest, cls).setup_credentials()&#10;  File &quot;tempest/test.py&quot;, line 362, in setup_credentials&#10;    credential_type=credentials_type)&#10;  File &quot;tempest/test.py&quot;, line 536, in get_client_manager&#10;    creds = getattr(cred_provider, credentials_method)()&#10;  File &quot;tempest/common/dynamic_creds.py&quot;, line 303, in get_primary_creds&#10;    return self.get_credentials('primary')&#10;  File &quot;tempest/common/dynamic_creds.py&quot;, line 295, in get_credentials&#10;    credentials.tenant_id)&#10;  File &quot;tempest/common/dynamic_creds.py&quot;, line 212, in _create_network_resources&#10;    router = self._create_router(router_name, tenant_id)&#10;  File &quot;tempest/common/dynamic_creds.py&quot;, line 271, in _create_router&#10;    tenant_id=tenant_id)&#10;  File &quot;tempest/lib/services/network/routers_client.py&quot;, line 27, in create_router&#10;    return self.create_resource(uri, post_body)&#10;  File &quot;tempest/lib/services/network/base.py&quot;, line 60, in create_resource&#10;    resp, body = self.post(req_uri, req_post_data)&#10;  File &quot;tempest/lib/common/rest_client.py&quot;, line 276, in post&#10;    return self.request('POST', url, extra_headers, headers, body, chunked)&#10;  File &quot;tempest/lib/common/rest_client.py&quot;, line 665, in request&#10;    resp, resp_body)&#10;  File &quot;tempest/lib/common/rest_client.py&quot;, line 768, in _error_checker&#10;    raise exceptions.BadRequest(resp_body, resp=resp)&#10;tempest.lib.exceptions.BadRequest: Bad request&#10;Details: {u'message': u&quot;Invalid input for external_gateway_info. Reason: '' is not a valid UUID.&quot;, u'type': u'HTTPBadRequest', u'detail': u''}&#10;" type="failure" /></testcase><testcase name="tempest.api.orchestration.stacks.test_templates.TemplateYAMLTestJSON.test_validate_template"><failure message="Traceback (most recent call last):&#10;  File &quot;tempest/test.py&quot;, line 274, in setUpClass&#10;    six.reraise(etype, value, trace)&#10;  File &quot;tempest/test.py&quot;, line 262, in setUpClass&#10;    cls.setup_credentials()&#10;  File &quot;tempest/api/orchestration/base.py&quot;, line 38, in setup_credentials&#10;    super(BaseOrchestrationTest, cls).setup_credentials()&#10;  File &quot;tempest/test.py&quot;, line 362, in setup_credentials&#10;    credential_type=credentials_type)&#10;  File &quot;tempest/test.py&quot;, line 536, in get_client_manager&#10;    creds = getattr(cred_provider, credentials_method)()&#10;  File &quot;tempest/common/dynamic_creds.py&quot;, line 303, in get_primary_creds&#10;    return self.get_credentials('primary')&#10;  File &quot;tempest/common/dynamic_creds.py&quot;, line 295, in get_credentials&#10;    credentials.tenant_id)&#10;  File &quot;tempest/common/dynamic_creds.py&quot;, line 212, in _create_network_resources&#10;    router = self._create_router(router_name, tenant_id)&#10;  File &quot;tempest/common/dynamic_creds.py&quot;, line 271, in _create_router&#10;    tenant_id=tenant_id)&#10;  File &quot;tempest/lib/services/network/routers_client.py&quot;, line 27, in create_router&#10;    return self.create_resource(uri, post_body)&#10;  File &quot;tempest/lib/services/network/base.py&quot;, line 60, in create_resource&#10;    resp, body = self.post(req_uri, req_post_data)&#10;  File &quot;tempest/lib/common/rest_client.py&quot;, line 276, in post&#10;    return self.request('POST', url, extra_headers, headers, body, chunked)&#10;  File &quot;tempest/lib/common/rest_client.py&quot;, line 665, in request&#10;    resp, resp_body)&#10;  File &quot;tempest/lib/common/rest_client.py&quot;, line 768, in _error_checker&#10;    raise exceptions.BadRequest(resp_body, resp=resp)&#10;tempest.lib.exceptions.BadRequest: Bad request&#10;Details: {u'message': u&quot;Invalid input for external_gateway_info. Reason: '' is not a valid UUID.&quot;, u'type': u'HTTPBadRequest', u'detail': u''}&#10;" type="failure" /></testcase><testcase name="tempest.api.compute.servers.test_server_actions.ServerActionsTestJSON.test_create_backup"><failure message="Traceback (most recent call last):&#10;  File &quot;tempest/test.py&quot;, line 274, in setUpClass&#10;    six.reraise(etype, value, trace)&#10;  File &quot;tempest/test.py&quot;, line 262, in setUpClass&#10;    cls.setup_credentials()&#10;  File &quot;tempest/api/compute/servers/test_server_actions.py&quot;, line 66, in setup_credentials&#10;    super(ServerActionsTestJSON, cls).setup_credentials()&#10;  File &quot;tempest/api/compute/base.py&quot;, line 61, in setup_credentials&#10;    super(BaseV2ComputeTest, cls).setup_credentials()&#10;  File &quot;tempest/test.py&quot;, line 362, in setup_credentials&#10;    credential_type=credentials_type)&#10;  File &quot;tempest/test.py&quot;, line 536, in get_client_manager&#10;    creds = getattr(cred_provider, credentials_method)()&#10;  File &quot;tempest/common/dynamic_creds.py&quot;, line 303, in get_primary_creds&#10;    return self.get_credentials('primary')&#10;  File &quot;tempest/common/dynamic_creds.py&quot;, line 295, in get_credentials&#10;    credentials.tenant_id)&#10;  File &quot;tempest/common/dynamic_creds.py&quot;, line 212, in _create_network_resources&#10;    router = self._create_router(router_name, tenant_id)&#10;  File &quot;tempest/common/dynamic_creds.py&quot;, line 271, in _create_router&#10;    tenant_id=tenant_id)&#10;  File &quot;tempest/lib/services/network/routers_client.py&quot;, line 27, in create_router&#10;    return self.create_resource(uri, post_body)&#10;  File &quot;tempest/lib/services/network/base.py&quot;, line 60, in create_resource&#10;    resp, body = self.post(req_uri, req_post_data)&#10;  File &quot;tempest/lib/common/rest_client.py&quot;, line 276, in post&#10;    return self.request('POST', url, extra_headers, headers, body, chunked)&#10;  File &quot;tempest/lib/common/rest_client.py&quot;, line 665, in request&#10;    resp, resp_body)&#10;  File &quot;tempest/lib/common/rest_client.py&quot;, line 768, in _error_checker&#10;    raise exceptions.BadRequest(resp_body, resp=resp)&#10;tempest.lib.exceptions.BadRequest: Bad request&#10;Details: {u'message': u&quot;Invalid input for external_gateway_info. Reason: '' is not a valid UUID.&quot;, u'type': u'HTTPBadRequest', u'detail': u''}&#10;" type="failure" /></testcase><testcase name="tempest.scenario.test_shelve_instance.TestShelveInstance.test_shelve_instance"><failure message="Traceback (most recent call last):&#10;  File &quot;tempest/test.py&quot;, line 274, in setUpClass&#10;    six.reraise(etype, value, trace)&#10;  File &quot;tempest/test.py&quot;, line 262, in setUpClass&#10;    cls.setup_credentials()&#10;  File &quot;tempest/test.py&quot;, line 362, in setup_credentials&#10;    credential_type=credentials_type)&#10;  File &quot;tempest/test.py&quot;, line 536, in get_client_manager&#10;    creds = getattr(cred_provider, credentials_method)()&#10;  File &quot;tempest/common/dynamic_creds.py&quot;, line 303, in get_primary_creds&#10;    return self.get_credentials('primary')&#10;  File &quot;tempest/common/dynamic_creds.py&quot;, line 295, in get_credentials&#10;    credentials.tenant_id)&#10;  File &quot;tempest/common/dynamic_creds.py&quot;, line 212, in _create_network_resources&#10;    router = self._create_router(router_name, tenant_id)&#10;  File &quot;tempest/common/dynamic_creds.py&quot;, line 271, in _create_router&#10;    tenant_id=tenant_id)&#10;  File &quot;tempest/lib/services/network/routers_client.py&quot;, line 27, in create_router&#10;    return self.create_resource(uri, post_body)&#10;  File &quot;tempest/lib/services/network/base.py&quot;, line 60, in create_resource&#10;    resp, body = self.post(req_uri, req_post_data)&#10;  File &quot;tempest/lib/common/rest_client.py&quot;, line 276, in post&#10;    return self.request('POST', url, extra_headers, headers, body, chunked)&#10;  File &quot;tempest/lib/common/rest_client.py&quot;, line 665, in request&#10;    resp, resp_body)&#10;  File &quot;tempest/lib/common/rest_client.py&quot;, line 768, in _error_checker&#10;    raise exceptions.BadRequest(resp_body, resp=resp)&#10;tempest.lib.exceptions.BadRequest: Bad request&#10;Details: {u'message': u&quot;Invalid input for external_gateway_info. Reason: '' is not a valid UUID.&quot;, u'type': u'HTTPBadRequest', u'detail': u''}&#10;" type="failure" /></testcase><testcase name="tempest.api.compute.admin.test_networks.NetworksTest.test_get_network"><failure message="Traceback (most recent call last):&#10;  File &quot;tempest/api/compute/admin/test_networks.py&quot;, line 47, in test_get_network&#10;    configured_network = configured_network[0]&#10;IndexError: list index out of range&#10;" type="failure" /></testcase><testcase name="tempest.api.network.test_floating_ips.FloatingIPTestJSON.test_create_list_show_update_delete_floating_ip"><failure message="Traceback (most recent call last):&#10;  File &quot;tempest/api/network/test_floating_ips.py&quot;, line 71, in test_create_list_show_update_delete_floating_ip&#10;    port_id=self.ports[0]['id'])&#10;  File &quot;tempest/lib/services/network/floating_ips_client.py&quot;, line 30, in create_floatingip&#10;    return self.create_resource(uri, post_data)&#10;  File &quot;tempest/lib/services/network/base.py&quot;, line 60, in create_resource&#10;    resp, body = self.post(req_uri, req_post_data)&#10;  File &quot;tempest/lib/common/rest_client.py&quot;, line 276, in post&#10;    return self.request('POST', url, extra_headers, headers, body, chunked)&#10;  File &quot;tempest/lib/common/rest_client.py&quot;, line 665, in request&#10;    resp, resp_body)&#10;  File &quot;tempest/lib/common/rest_client.py&quot;, line 768, in _error_checker&#10;    raise exceptions.BadRequest(resp_body, resp=resp)&#10;tempest.lib.exceptions.BadRequest: Bad request&#10;Details: {u'message': u&quot;Invalid input for floating_network_id. Reason: '' is not a valid UUID.&quot;, u'type': u'HTTPBadRequest', u'detail': u''}&#10;" type="failure" /></testcase><testcase name="tempest.api.orchestration.stacks.test_non_empty_stack.StacksTestJSON.test_suspend_resume_stack"><failure message="Traceback (most recent call last):&#10;  File &quot;tempest/test.py&quot;, line 274, in setUpClass&#10;    six.reraise(etype, value, trace)&#10;  File &quot;tempest/test.py&quot;, line 262, in setUpClass&#10;    cls.setup_credentials()&#10;  File &quot;tempest/api/orchestration/base.py&quot;, line 38, in setup_credentials&#10;    super(BaseOrchestrationTest, cls).setup_credentials()&#10;  File &quot;tempest/test.py&quot;, line 362, in setup_credentials&#10;    credential_type=credentials_type)&#10;  File &quot;tempest/test.py&quot;, line 536, in get_client_manager&#10;    creds = getattr(cred_provider, credentials_method)()&#10;  File &quot;tempest/common/dynamic_creds.py&quot;, line 303, in get_primary_creds&#10;    return self.get_credentials('primary')&#10;  File &quot;tempest/common/dynamic_creds.py&quot;, line 295, in get_credentials&#10;    credentials.tenant_id)&#10;  File &quot;tempest/common/dynamic_creds.py&quot;, line 212, in _create_network_resources&#10;    router = self._create_router(router_name, tenant_id)&#10;  File &quot;tempest/common/dynamic_creds.py&quot;, line 271, in _create_router&#10;    tenant_id=tenant_id)&#10;  File &quot;tempest/lib/services/network/routers_client.py&quot;, line 27, in create_router&#10;    return self.create_resource(uri, post_body)&#10;  File &quot;tempest/lib/services/network/base.py&quot;, line 60, in create_resource&#10;    resp, body = self.post(req_uri, req_post_data)&#10;  File &quot;tempest/lib/common/rest_client.py&quot;, line 276, in post&#10;    return self.request('POST', url, extra_headers, headers, body, chunked)&#10;  File &quot;tempest/lib/common/rest_client.py&quot;, line 665, in request&#10;    resp, resp_body)&#10;  File &quot;tempest/lib/common/rest_client.py&quot;, line 768, in _error_checker&#10;    raise exceptions.BadRequest(resp_body, resp=resp)&#10;tempest.lib.exceptions.BadRequest: Bad request&#10;Details: {u'message': u&quot;Invalid input for external_gateway_info. Reason: '' is not a valid UUID.&quot;, u'type': u'HTTPBadRequest', u'detail': u''}&#10;" type="failure" /></testcase><testcase name="tempest.api.volume.admin.test_volume_quotas.VolumeQuotasAdminV1TestJSON.test_update_all_quota_resources_for_tenant"><skipped message="VolumeQuotasAdminV1TestJSON skipped as Cinder is not available" type="skipped" /></testcase><testcase name="tempest.api.data_processing.test_job_binaries.JobBinaryTest.test_internal_db_job_binary_get"><skipped message="Sahara support is required" type="skipped" /></testcase><testcase name="tempest.api.compute.servers.test_servers_negative.ServersNegativeTestJSON.test_personality_file_contents_not_encoded"><skipped message="Nova personality feature disabled" type="skipped" /></testcase><testcase name="tempest.api.volume.admin.test_volume_types.VolumeTypesV2Test.test_volume_type_encryption_create_get_delete"><skipped message="VolumeTypesV2Test skipped as Cinder is not available" type="skipped" /></testcase><testcase name="tempest.api.baremetal.admin.test_api_discovery.TestApiDiscovery.test_version_1_resources"><skipped message="TestApiDiscovery skipped as Ironic is not available" type="skipped" /></testcase><testcase name="tempest.api.volume.v2.test_image_metadata.VolumesV2ImageMetadata.test_update_image_metadata"><skipped message="VolumesV2ImageMetadata skipped as Cinder is not available" type="skipped" /></testcase><testcase name="tempest.api.volume.v2.test_volumes_list.VolumesV2ListTestJSON.test_volume_list_details_pagination"><skipped message="VolumesV2ListTestJSON skipped as Cinder is not available" type="skipped" /></testcase><testcase name="tempest.api.baremetal.admin.test_chassis.TestChassis.test_show_chassis"><skipped message="TestChassis skipped as Ironic is not available" type="skipped" /></testcase><testcase name="tempest.api.volume.test_volumes_snapshots_list.VolumesV1SnapshotLimitTestJSON.test_snapshot_list_param_limit_equals_infinite"><skipped message="VolumesV1SnapshotLimitTestJSON skipped as Cinder is not available" type="skipped" /></testcase><testcase name="tempest.api.volume.test_availability_zone.AvailabilityZoneV1TestJSON.test_get_availability_zone_list"><skipped message="AvailabilityZoneV1TestJSON skipped as Cinder is not available" type="skipped" /></testcase><testcase name="tempest.api.object_storage.test_container_services.ContainerTest.test_list_container_metadata"><skipped message="ContainerTest skipped as swift is not available" type="skipped" /></testcase><testcase name="tempest.api.compute.volumes.test_volumes_list.VolumesTestJSON.test_volume_list_with_detail_param_offset_and_limit"><skipped message="VolumesTestJSON skipped as Cinder is not available" type="skipped" /></testcase><testcase name="tempest.scenario.test_object_storage_basic_ops.TestObjectStorageBasicOps.test_swift_basic_ops"><skipped message="TestObjectStorageBasicOps skipped as swift is not available" type="skipped" /></testcase><testcase name="tempest.api.baremetal.admin.test_nodestates.TestNodeStates.test_list_nodestates"><skipped message="TestNodeStates skipped as Ironic is not available" type="skipped" /></testcase><testcase name="tempest.api.object_storage.test_object_services.ObjectTest.test_copy_object_with_x_object_meta"><skipped message="ObjectTest skipped as swift is not available" type="skipped" /></testcase><testcase name="tempest.api.volume.admin.test_qos.QosSpecsV2TestJSON.test_create_delete_qos_with_back_end_consumer"><skipped message="QosSpecsV2TestJSON skipped as Cinder is not available" type="skipped" /></testcase><testcase name="tempest.api.baremetal.admin.test_ports.TestPorts.test_create_port"><skipped message="TestPorts skipped as Ironic is not available" type="skipped" /></testcase><testcase name="tempest.api.volume.test_volumes_backup.VolumesBackupsV2Test.test_backup_create_attached_volume"><skipped message="VolumesBackupsV2Test skipped as Cinder is not available" type="skipped" /></testcase><testcase name="tempest.api.compute.admin.test_live_migration.LiveAutoBlockMigrationV225TestJSON.test_volume_backed_live_migration"><skipped message="The microversion range[2.25 - latest] of this test is out of the configuration range[None - None]." type="skipped" /></testcase><testcase name="tempest.api.volume.admin.test_volumes_actions.VolumesActionsV2Test.test_volume_reset_status"><skipped message="VolumesActionsV2Test skipped as Cinder is not available" type="skipped" /></testcase><testcase name="tempest.api.volume.test_volumes_negative.VolumesV2NegativeTest.test_volume_extend_with_nonexistent_volume_id"><skipped message="VolumesV2NegativeTest skipped as Cinder is not available" type="skipped" /></testcase><testcase name="tempest.api.compute.admin.test_servers.ServersAdminTestJSON.test_get_server_diagnostics_by_admin"><skipped message="Skipped until Bug: 1240043 is resolved." type="skipped" /></testcase><testcase name="tempest.api.volume.test_extensions.ExtensionsV1TestJSON.test_list_extensions"><skipped message="ExtensionsV1TestJSON skipped as Cinder is not available" type="skipped" /></testcase><testcase name="tempest.api.volume.admin.test_snapshots_actions.SnapshotsActionsV2Test.test_snapshot_force_delete_when_snapshot_is_deleting"><skipped message="SnapshotsActionsV2Test skipped as Cinder is not available" type="skipped" /></testcase><testcase name="tempest.api.volume.test_volumes_negative.VolumesV1NegativeTest.test_attach_volumes_with_nonexistent_volume_id"><skipped message="VolumesV1NegativeTest skipped as Cinder is not available" type="skipped" /></testcase><testcase name="tempest.scenario.test_network_v6.TestGettingAddress.test_dualnet_multi_prefix_dhcpv6_stateless"><skipped message="Either project_networks_reachable must be &quot;true&quot;, or public_network_id must be defined." type="skipped" /></testcase><testcase name="tempest.api.data_processing.test_node_group_templates.NodeGroupTemplateTest.test_node_group_template_list"><skipped message="Sahara support is required" type="skipped" /></testcase><testcase name="tempest.api.volume.admin.test_volume_types_extra_specs_negative.ExtraSpecsNegativeV1Test.test_update_multiple_extra_spec"><skipped message="ExtraSpecsNegativeV1Test skipped as Cinder is not available" type="skipped" /></testcase><testcase name="tempest.api.object_storage.test_container_services.ContainerTest.test_create_container_with_remove_metadata_value"><skipped message="ContainerTest skipped as swift is not available" type="skipped" /></testcase><testcase name="tempest.api.object_storage.test_object_expiry.ObjectExpiryTest.test_get_object_at_expiry_time"><skipped message="ObjectExpiryTest skipped as swift is not available" type="skipped" /></testcase><testcase name="tempest.api.object_storage.test_container_acl_negative.ObjectACLsNegativeTest.test_read_object_with_non_authorized_user"><skipped message="ObjectACLsNegativeTest skipped as swift is not available" type="skipped" /></testcase><testcase name="tempest.scenario.test_network_basic_ops.TestNetworkBasicOps.test_connectivity_between_vms_on_different_networks"><skipped message="Either project_networks_reachable must be &quot;true&quot;, or public_network_id must be defined." type="skipped" /></testcase><testcase name="tempest.api.volume.admin.test_volume_types_extra_specs_negative.ExtraSpecsNegativeV2Test.test_update_none_extra_spec_id"><skipped message="ExtraSpecsNegativeV2Test skipped as Cinder is not available" type="skipped" /></testcase><testcase name="tempest.api.object_storage.test_account_services.AccountTest.test_list_containers_with_limit"><skipped message="AccountTest skipped as swift is not available" type="skipped" /></testcase><testcase name="tempest.api.volume.admin.test_volume_types_extra_specs.VolumeTypesExtraSpecsV2Test.test_volume_type_extra_specs_update"><skipped message="VolumeTypesExtraSpecsV2Test skipped as Cinder is not available" type="skipped" /></testcase><testcase name="tempest.api.volume.test_volumes_actions.VolumesV1ActionsTest.test_volume_upload"><skipped message="VolumesV1ActionsTest skipped as Cinder is not available" type="skipped" /></testcase><testcase name="tempest.api.object_storage.test_container_acl.ObjectTestACLs.test_write_object_with_rights"><skipped message="ObjectTestACLs skipped as swift is not available" type="skipped" /></testcase><testcase name="tempest.api.volume.test_volumes_actions.VolumesV1ActionsTest.test_attach_detach_volume_to_instance"><skipped message="VolumesV1ActionsTest skipped as Cinder is not available" type="skipped" /></testcase><testcase name="tempest.api.data_processing.test_cluster_templates.ClusterTemplateTest.test_cluster_template_list"><skipped message="Sahara support is required" type="skipped" /></testcase><testcase name="tempest.scenario.test_network_advanced_server_ops.TestNetworkAdvancedServerOps.test_server_connectivity_rebuild"><skipped message="Either project_networks_reachable must be &quot;true&quot;, or public_network_id must be defined." type="skipped" /></testcase><testcase name="tempest.api.volume.admin.test_volume_services.VolumesServicesV2TestJSON.test_get_service_by_service_binary_name"><skipped message="VolumesServicesV2TestJSON skipped as Cinder is not available" type="skipped" /></testcase><testcase name="tempest.api.volume.admin.test_volume_services.VolumesServicesV1TestJSON.test_list_services"><skipped message="VolumesServicesV1TestJSON skipped as Cinder is not available" type="skipped" /></testcase><testcase name="tempest.api.volume.test_volumes_list.VolumesV1ListTestJSON.test_volume_list_with_detail_param_display_name_and_status"><skipped message="VolumesV1ListTestJSON skipped as Cinder is not available" type="skipped" /></testcase><testcase name="tempest.api.object_storage.test_container_services.ContainerTest.test_create_container_with_remove_metadata_key"><skipped message="ContainerTest skipped as swift is not available" type="skipped" /></testcase><testcase name="tempest.api.volume.test_volumes_actions.VolumesV1ActionsTest.test_volume_bootable"><skipped message="VolumesV1ActionsTest skipped as Cinder is not available" type="skipped" /></testcase><testcase name="tempest.api.compute.security_groups.test_security_groups_negative.SecurityGroupsNegativeTestJSON.test_security_group_create_with_invalid_group_name"><skipped message="Skipped until Bug: 1161411 is resolved." type="skipped" /></testcase><testcase name="tempest.api.object_storage.test_object_version.ContainerTest.test_versioned_container"><skipped message="ContainerTest skipped as swift is not available" type="skipped" /></testcase><testcase name="tempest.api.object_storage.test_object_services.ObjectTest.test_create_object_with_x_remove_object_metakey"><skipped message="ObjectTest skipped as swift is not available" type="skipped" /></testcase><testcase name="tempest.api.volume.admin.v3.test_user_messages.UserMessagesTest.test_list_messages"><skipped message="UserMessagesTest skipped as Cinder is not available" type="skipped" /></testcase><testcase name="tempest.api.object_storage.test_account_services.AccountTest.test_list_containers"><skipped message="AccountTest skipped as swift is not available" type="skipped" /></testcase><testcase name="tempest.api.volume.test_volumes_negative.VolumesV2NegativeTest.test_get_volume_without_passing_volume_id"><skipped message="VolumesV2NegativeTest skipped as Cinder is not available" type="skipped" /></testcase><testcase name="tempest.api.data_processing.test_plugins.PluginsTest.test_plugin_get"><skipped message="Sahara support is required" type="skipped" /></testcase><testcase name="tempest.api.volume.test_volumes_snapshots.VolumesV1SnapshotTestJSON.test_snapshot_create_with_volume_in_use"><skipped message="VolumesV1SnapshotTestJSON skipped as Cinder is not available" type="skipped" /></testcase><testcase name="tempest.api.compute.certificates.test_certificates.CertificatesV2TestJSON.test_create_root_certificate"><skipped message="Nova cert is not available" type="skipped" /></testcase><testcase name="tempest.api.volume.admin.test_volumes_actions.VolumesActionsV2Test.test_volume_force_delete_when_volume_is_error"><skipped message="VolumesActionsV2Test skipped as Cinder is not available" type="skipped" /></testcase><testcase name="tempest.api.object_storage.test_object_services.ObjectTest.test_create_object_with_expect_continue"><skipped message="ObjectTest skipped as swift is not available" type="skipped" /></testcase><testcase name="tempest.api.baremetal.admin.test_chassis.TestChassis.test_create_chassis_unicode_description"><skipped message="TestChassis skipped as Ironic is not available" type="skipped" /></testcase><testcase name="tempest.api.compute.volumes.test_attach_volume.AttachVolumeTestJSON.test_list_get_volume_attachments"><skipped message="AttachVolumeTestJSON skipped as Cinder is not available" type="skipped" /></testcase><testcase name="tempest.api.compute.admin.test_live_migration.LiveAutoBlockMigrationV225TestJSON.test_live_block_migration_paused"><skipped message="The microversion range[2.25 - latest] of this test is out of the configuration range[None - None]." type="skipped" /></testcase><testcase name="tempest.api.object_storage.test_object_services.PublicObjectTest.test_access_public_object_with_another_user_creds"><skipped message="PublicObjectTest skipped as swift is not available" type="skipped" /></testcase><testcase name="tempest.api.volume.test_volumes_actions.VolumesV2ActionsTest.test_get_volume_attachment"><skipped message="VolumesV2ActionsTest skipped as Cinder is not available" type="skipped" /></testcase><testcase name="tempest.api.volume.test_volumes_snapshots_negative.VolumesV1SnapshotNegativeTestJSON.test_create_snapshot_without_passing_volume_id"><skipped message="VolumesV1SnapshotNegativeTestJSON skipped as Cinder is not available" type="skipped" /></testcase><testcase name="tempest.scenario.test_network_basic_ops.TestNetworkBasicOps.test_network_basic_ops"><skipped message="Either project_networks_reachable must be &quot;true&quot;, or public_network_id must be defined." type="skipped" /></testcase><testcase name="tempest.api.volume.test_volumes_negative.VolumesV1NegativeTest.test_list_volumes_detail_with_invalid_status"><skipped message="VolumesV1NegativeTest skipped as Cinder is not available" type="skipped" /></testcase><testcase name="tempest.api.compute.admin.test_fixed_ips.FixedIPsTestJson.test_list_fixed_ip_details"><skipped message="FixedIPsTestJson skipped as neutron is available" type="skipped" /></testcase><testcase name="tempest.api.compute.volumes.test_volumes_negative.VolumesNegativeTest.test_create_volume_with_size_zero"><skipped message="VolumesNegativeTest skipped as Cinder is not available" type="skipped" /></testcase><testcase name="tempest.api.object_storage.test_container_services.ContainerTest.test_list_container_contents_with_no_object"><skipped message="ContainerTest skipped as swift is not available" type="skipped" /></testcase><testcase name="tempest.api.network.test_metering_extensions.MeteringIpV6TestJSON.test_create_delete_metering_label_rule_with_filters"><skipped message="metering extension not enabled." type="skipped" /></testcase><testcase name="tempest.api.object_storage.test_crossdomain.CrossdomainTest.test_get_crossdomain_policy"><skipped message="CrossdomainTest skipped as swift is not available" type="skipped" /></testcase><testcase name="tempest.api.compute.admin.test_live_migration.LiveAutoBlockMigrationV225TestJSON.test_iscsi_volume"><skipped message="The microversion range[2.25 - latest] of this test is out of the configuration range[None - None]." type="skipped" /></testcase><testcase name="tempest.api.volume.test_volumes_negative.VolumesV2NegativeTest.test_delete_invalid_volume_id"><skipped message="VolumesV2NegativeTest skipped as Cinder is not available" type="skipped" /></testcase><testcase name="tempest.api.volume.test_volumes_negative.VolumesV1NegativeTest.test_list_volumes_with_nonexistent_name"><skipped message="VolumesV1NegativeTest skipped as Cinder is not available" type="skipped" /></testcase><testcase name="tempest.api.object_storage.test_object_slo.ObjectSloTest.test_upload_manifest"><skipped message="ObjectSloTest skipped as swift is not available" type="skipped" /></testcase><testcase name="tempest.api.object_storage.test_object_formpost.ObjectFormPostTest.test_post_object_using_form"><skipped message="ObjectFormPostTest skipped as swift is not available" type="skipped" /></testcase><testcase name="tempest.api.volume.admin.test_qos.QosSpecsV2TestJSON.test_set_unset_qos_key"><skipped message="QosSpecsV2TestJSON skipped as Cinder is not available" type="skipped" /></testcase><testcase name="tempest.api.baremetal.admin.test_ports.TestPorts.test_update_port_add"><skipped message="TestPorts skipped as Ironic is not available" type="skipped" /></testcase><testcase name="tempest.api.compute.volumes.test_volumes_negative.VolumesNegativeTest.test_delete_volume_without_passing_volume_id"><skipped message="VolumesNegativeTest skipped as Cinder is not available" type="skipped" /></testcase><testcase name="tempest.api.object_storage.test_object_services.ObjectTest.test_copy_object_2d_way"><skipped message="ObjectTest skipped as swift is not available" type="skipped" /></testcase><testcase name="tempest.api.volume.admin.test_qos.QosSpecsV1TestJSON.test_get_qos"><skipped message="QosSpecsV1TestJSON skipped as Cinder is not available" type="skipped" /></testcase><testcase name="tempest.api.volume.admin.test_volume_types_negative.VolumeTypesNegativeV1Test.test_delete_nonexistent_type_id"><skipped message="VolumeTypesNegativeV1Test skipped as Cinder is not available" type="skipped" /></testcase><testcase name="tempest.api.compute.servers.test_server_personality.ServerPersonalityTestJSON.test_create_server_with_personality"><skipped message="Nova personality feature disabled" type="skipped" /></testcase><testcase name="tempest.api.volume.test_volumes_clone.VolumesCloneTest.test_create_from_volume"><skipped message="VolumesCloneTest skipped as Cinder is not available" type="skipped" /></testcase><testcase name="tempest.api.data_processing.test_job_binaries.JobBinaryTest.test_swift_job_binary_create"><skipped message="Sahara support is required" type="skipped" /></testcase><testcase name="tempest.api.data_processing.test_cluster_templates.ClusterTemplateTest.test_cluster_template_delete"><skipped message="Sahara support is required" type="skipped" /></testcase><testcase name="tempest.api.volume.admin.test_volume_quotas.BaseVolumeQuotasAdminV2TestJSON.test_quota_usage"><skipped message="BaseVolumeQuotasAdminV2TestJSON skipped as Cinder is not available" type="skipped" /></testcase><testcase name="tempest.scenario.test_network_basic_ops.TestNetworkBasicOps.test_update_router_admin_state"><skipped message="Either project_networks_reachable must be &quot;true&quot;, or public_network_id must be defined." type="skipped" /></testcase><testcase name="tempest.api.object_storage.test_container_services.ContainerTest.test_list_container_contents_with_format_json"><skipped message="ContainerTest skipped as swift is not available" type="skipped" /></testcase><testcase name="tempest.api.compute.volumes.test_attach_volume.AttachVolumeShelveTestJSON.test_attach_volume_shelved_or_offload_server"><skipped message="The microversion range[2.20 - latest] of this test is out of the configuration range[None - None]." type="skipped" /></testcase><testcase name="tempest.api.volume.v2.test_volumes_list.VolumesV2ListTestJSON.test_volume_list_with_detail_param_marker"><skipped message="VolumesV2ListTestJSON skipped as Cinder is not available" type="skipped" /></testcase><testcase name="tempest.api.object_storage.test_account_services_negative.AccountNegativeTest.test_list_containers_with_non_authorized_user"><skipped message="AccountNegativeTest skipped as swift is not available" type="skipped" /></testcase><testcase name="tempest.api.object_storage.test_account_services.AccountTest.test_update_account_metadata_with_delete_matadata"><skipped message="AccountTest skipped as swift is not available" type="skipped" /></testcase><testcase name="tempest.api.volume.test_volumes_list.VolumesV2ListTestJSON.test_volume_list_with_param_metadata"><skipped message="VolumesV2ListTestJSON skipped as Cinder is not available" type="skipped" /></testcase><testcase name="tempest.api.compute.keypairs.test_keypairs_v22.KeyPairsV22TestJSON.test_keypair_create_delete"><skipped message="The microversion range[2.2 - latest] of this test is out of the configuration range[None - None]." type="skipped" /></testcase><testcase name="tempest.api.volume.test_volumes_snapshots_negative.VolumesV2SnapshotNegativeTestJSON.test_create_snapshot_with_nonexistent_volume_id"><skipped message="VolumesV2SnapshotNegativeTestJSON skipped as Cinder is not available" type="skipped" /></testcase><testcase name="tempest.api.object_storage.test_container_acl_negative.ObjectACLsNegativeTest.test_write_object_without_rights"><skipped message="ObjectACLsNegativeTest skipped as swift is not available" type="skipped" /></testcase><testcase name="tempest.api.baremetal.admin.test_ports.TestPorts.test_show_port_with_links"><skipped message="TestPorts skipped as Ironic is not available" type="skipped" /></testcase><testcase name="tempest.api.object_storage.test_container_staticweb.StaticWebTest.test_web_listing"><skipped message="StaticWebTest skipped as swift is not available" type="skipped" /></testcase><testcase name="tempest.api.volume.test_volumes_list.VolumesV2ListTestJSON.test_volume_list_with_detail_param_metadata"><skipped message="VolumesV2ListTestJSON skipped as Cinder is not available" type="skipped" /></testcase><testcase name="tempest.scenario.test_security_groups_basic_ops.TestSecurityGroupsBasicOps.test_multiple_security_groups"><skipped message="Either project_networks_reachable must be &quot;true&quot;, or public_network_id must be defined." type="skipped" /></testcase><testcase name="tempest.api.network.test_metering_extensions.MeteringTestJSON.test_show_metering_label"><skipped message="metering extension not enabled." type="skipped" /></testcase><testcase name="tempest.api.volume.test_volume_metadata.VolumesV2MetadataTest.test_update_volume_metadata"><skipped message="VolumesV2MetadataTest skipped as Cinder is not available" type="skipped" /></testcase><testcase name="tempest.api.volume.test_volumes_snapshots_list.VolumesV1SnapshotLimitTestJSON.test_snapshots_list_with_params"><skipped message="VolumesV1SnapshotLimitTestJSON skipped as Cinder is not available" type="skipped" /></testcase><testcase name="tempest.api.volume.admin.test_volume_types_extra_specs_negative.ExtraSpecsNegativeV1Test.test_create_invalid_body"><skipped message="ExtraSpecsNegativeV1Test skipped as Cinder is not available" type="skipped" /></testcase><testcase name="tempest.api.volume.test_volumes_list.VolumesV1ListTestJSON.test_volume_list_details_by_name"><skipped message="VolumesV1ListTestJSON skipped as Cinder is not available" type="skipped" /></testcase><testcase name="tempest.api.compute.volumes.test_volumes_get.VolumesGetTestJSON.test_volume_create_get_delete"><skipped message="VolumesGetTestJSON skipped as Cinder is not available" type="skipped" /></testcase><testcase name="tempest.api.data_processing.test_data_sources.DataSourceTest.test_swift_data_source_get"><skipped message="Sahara support is required" type="skipped" /></testcase><testcase name="tempest.api.volume.test_volumes_negative.VolumesV1NegativeTest.test_reserve_volume_with_negative_volume_status"><skipped message="VolumesV1NegativeTest skipped as Cinder is not available" type="skipped" /></testcase><testcase name="tempest.api.volume.admin.test_volume_services.VolumesServicesV1TestJSON.test_get_service_by_host_name"><skipped message="VolumesServicesV1TestJSON skipped as Cinder is not available" type="skipped" /></testcase><testcase name="tempest.api.volume.admin.test_qos.QosSpecsV1TestJSON.test_associate_disassociate_qos"><skipped message="QosSpecsV1TestJSON skipped as Cinder is not available" type="skipped" /></testcase><testcase name="tempest.api.object_storage.test_container_services.ContainerTest.test_create_container_overwrite"><skipped message="ContainerTest skipped as swift is not available" type="skipped" /></testcase><testcase name="tempest.api.volume.test_volumes_negative.VolumesV1NegativeTest.test_volume_delete_nonexistent_volume_id"><skipped message="VolumesV1NegativeTest skipped as Cinder is not available" type="skipped" /></testcase><testcase name="tempest.api.compute.volumes.test_volumes_negative.VolumesNegativeTest.test_volume_get_nonexistent_volume_id"><skipped message="VolumesNegativeTest skipped as Cinder is not available" type="skipped" /></testcase><testcase name="tempest.scenario.test_network_v6.TestGettingAddress.test_dualnet_dhcp6_stateless_from_os"><skipped message="Either project_networks_reachable must be &quot;true&quot;, or public_network_id must be defined." type="skipped" /></testcase><testcase name="tempest.api.volume.admin.test_volume_quotas.BaseVolumeQuotasAdminV2TestJSON.test_list_default_quotas"><skipped message="BaseVolumeQuotasAdminV2TestJSON skipped as Cinder is not available" type="skipped" /></testcase><testcase name="tempest.api.object_storage.test_account_quotas.AccountQuotasTest.test_admin_modify_quota"><skipped message="AccountQuotasTest skipped as swift is not available" type="skipped" /></testcase><testcase name="tempest.api.object_storage.test_container_quotas.ContainerQuotasTest.test_upload_too_many_objects"><skipped message="ContainerQuotasTest skipped as swift is not available" type="skipped" /></testcase><testcase name="tempest.api.compute.security_groups.test_security_groups_negative.SecurityGroupsNegativeTestJSON.test_update_security_group_with_invalid_sg_des"><skipped message="Neutron does not check the security group description" type="skipped" /></testcase><testcase name="tempest.api.baremetal.admin.test_ports.TestPorts.test_create_port_with_extra"><skipped message="TestPorts skipped as Ironic is not available" type="skipped" /></testcase><testcase name="tempest.api.data_processing.test_job_binary_internals.JobBinaryInternalTest.test_job_binary_internal_get"><skipped message="Sahara support is required" type="skipped" /></testcase><testcase name="tempest.api.volume.test_volumes_list.VolumesV1ListTestJSON.test_volume_list_param_display_name_and_status"><skipped message="VolumesV1ListTestJSON skipped as Cinder is not available" type="skipped" /></testcase><testcase name="tempest.scenario.test_network_v6.TestGettingAddress.test_multi_prefix_slaac"><skipped message="Either project_networks_reachable must be &quot;true&quot;, or public_network_id must be defined." type="skipped" /></testcase><testcase name="tempest.api.orchestration.stacks.test_neutron_resources.NeutronResourcesTestJSON.test_created_router_interface"><skipped message="Skipped until Bug: 1547261 is resolved." type="skipped" /></testcase><testcase name="tempest.api.compute.servers.test_list_server_filters.ListServerFiltersTestJSON.test_list_servers_filtered_by_ip_regex"><skipped message="Skipped until Bug: 1540645 is resolved." type="skipped" /></testcase><testcase name="tempest.api.volume.admin.test_volume_types_extra_specs_negative.ExtraSpecsNegativeV2Test.test_create_none_body"><skipped message="ExtraSpecsNegativeV2Test skipped as Cinder is not available" type="skipped" /></testcase><testcase name="tempest.api.object_storage.test_container_acl_negative.ObjectACLsNegativeTest.test_write_object_without_write_rights"><skipped message="ObjectACLsNegativeTest skipped as swift is not available" type="skipped" /></testcase><testcase name="tempest.api.volume.admin.test_qos.QosSpecsV2TestJSON.test_create_delete_qos_with_front_end_consumer"><skipped message="QosSpecsV2TestJSON skipped as Cinder is not available" type="skipped" /></testcase><testcase name="tempest.api.compute.keypairs.test_keypairs_v22.KeyPairsV22TestJSON.test_keypairsv22_create_list_show"><skipped message="The microversion range[2.2 - latest] of this test is out of the configuration range[None - None]." type="skipped" /></testcase><testcase name="tempest.api.volume.test_volumes_snapshots_negative.VolumesV1SnapshotNegativeTestJSON.test_volume_from_snapshot_decreasing_size"><skipped message="VolumesV1SnapshotNegativeTestJSON skipped as Cinder is not available" type="skipped" /></testcase><testcase name="tempest.api.volume.admin.test_qos.QosSpecsV2TestJSON.test_get_qos"><skipped message="QosSpecsV2TestJSON skipped as Cinder is not available" type="skipped" /></testcase><testcase name="tempest.api.object_storage.test_account_services.AccountTest.test_list_containers_with_limit_and_marker_and_end_marker"><skipped message="AccountTest skipped as swift is not available" type="skipped" /></testcase><testcase name="tempest.api.volume.admin.test_volume_types.VolumeTypesV2Test.test_volume_crud_with_volume_type_and_extra_specs"><skipped message="VolumeTypesV2Test skipped as Cinder is not available" type="skipped" /></testcase><testcase name="tempest.api.volume.admin.test_volume_types_negative.VolumeTypesNegativeV1Test.test_create_with_empty_name"><skipped message="VolumeTypesNegativeV1Test skipped as Cinder is not available" type="skipped" /></testcase><testcase name="tempest.api.volume.test_volumes_negative.VolumesV2NegativeTest.test_attach_volumes_with_nonexistent_volume_id"><skipped message="VolumesV2NegativeTest skipped as Cinder is not available" type="skipped" /></testcase><testcase name="tempest.api.object_storage.test_object_services.ObjectTest.test_copy_object_across_containers"><skipped message="ObjectTest skipped as swift is not available" type="skipped" /></testcase><testcase name="tempest.api.volume.test_volumes_negative.VolumesV2NegativeTest.test_delete_volume_without_passing_volume_id"><skipped message="VolumesV2NegativeTest skipped as Cinder is not available" type="skipped" /></testcase><testcase name="tempest.api.volume.test_volumes_negative.VolumesV2NegativeTest.test_list_volumes_detail_with_invalid_status"><skipped message="VolumesV2NegativeTest skipped as Cinder is not available" type="skipped" /></testcase><testcase name="tempest.api.volume.admin.test_volume_types_negative.VolumeTypesNegativeV2Test.test_create_with_nonexistent_volume_type"><skipped message="VolumeTypesNegativeV2Test skipped as Cinder is not available" type="skipped" /></testcase><testcase name="tempest.api.volume.test_volumes_snapshots_list.VolumesV2SnapshotListTestJSON.test_snapshot_list_param_limit_equals_zero"><skipped message="VolumesV2SnapshotListTestJSON skipped as Cinder is not available" type="skipped" /></testcase><testcase name="tempest.api.network.test_metering_extensions.MeteringIpV6TestJSON.test_show_metering_label"><skipped message="metering extension not enabled." type="skipped" /></testcase><testcase name="tempest.api.volume.test_volumes_get.VolumesV1GetTest.test_volume_create_get_update_delete_from_image"><skipped message="VolumesV1GetTest skipped as Cinder is not available" type="skipped" /></testcase><testcase name="tempest.api.volume.admin.test_volume_quotas_negative.BaseVolumeQuotasNegativeV2TestJSON.test_quota_volumes"><skipped message="BaseVolumeQuotasNegativeV2TestJSON skipped as Cinder is not available" type="skipped" /></testcase><testcase name="tempest.api.object_storage.test_account_services.AccountTest.test_list_containers_with_marker_and_end_marker"><skipped message="AccountTest skipped as swift is not available" type="skipped" /></testcase><testcase name="tempest.api.object_storage.test_object_services.ObjectTest.test_list_object_metadata_with_x_object_manifest"><skipped message="ObjectTest skipped as swift is not available" type="skipped" /></testcase><testcase name="tempest.api.volume.admin.test_volume_types_extra_specs_negative.ExtraSpecsNegativeV1Test.test_create_none_body"><skipped message="ExtraSpecsNegativeV1Test skipped as Cinder is not available" type="skipped" /></testcase><testcase name="tempest.api.object_storage.test_container_staticweb.StaticWebTest.test_web_error"><skipped message="StaticWebTest skipped as swift is not available" type="skipped" /></testcase><testcase name="tempest.api.object_storage.test_object_services.ObjectTest.test_create_object_with_content_encoding"><skipped message="ObjectTest skipped as swift is not available" type="skipped" /></testcase><testcase name="tempest.api.object_storage.test_container_services.ContainerTest.test_list_container_contents_with_end_marker"><skipped message="ContainerTest skipped as swift is not available" type="skipped" /></testcase><testcase name="tempest.api.volume.test_volumes_snapshots.VolumesV1SnapshotTestJSON.test_volume_from_snapshot"><skipped message="VolumesV1SnapshotTestJSON skipped as Cinder is not available" type="skipped" /></testcase><testcase name="tempest.api.compute.volumes.test_volumes_list.VolumesTestJSON.test_volume_list_with_detail_param_limit"><skipped message="VolumesTestJSON skipped as Cinder is not available" type="skipped" /></testcase><testcase name="tempest.api.object_storage.test_container_services.ContainerTest.test_list_no_container_metadata"><skipped message="ContainerTest skipped as swift is not available" type="skipped" /></testcase><testcase name="tempest.api.baremetal.admin.test_ports.TestPorts.test_show_port"><skipped message="TestPorts skipped as Ironic is not available" type="skipped" /></testcase><testcase name="tempest.api.object_storage.test_object_services.ObjectTest.test_get_object_with_if_modified_since"><skipped message="ObjectTest skipped as swift is not available" type="skipped" /></testcase><testcase name="tempest.api.object_storage.test_container_services.ContainerTest.test_update_container_metadata_with_create_metadata"><skipped message="ContainerTest skipped as swift is not available" type="skipped" /></testcase><testcase name="tempest.api.volume.v2.test_volumes_list.VolumesV2ListTestJSON.test_volume_list_pagination"><skipped message="VolumesV2ListTestJSON skipped as Cinder is not available" type="skipped" /></testcase><testcase name="tempest.api.object_storage.test_container_services.ContainerTest.test_list_container_contents_with_limit"><skipped message="ContainerTest skipped as swift is not available" type="skipped" /></testcase><testcase name="tempest.api.volume.admin.test_volume_snapshot_quotas_negative.VolumeSnapshotQuotasNegativeV2TestJSON.test_quota_volume_gigabytes_snapshots"><skipped message="VolumeSnapshotQuotasNegativeV2TestJSON skipped as Cinder is not available" type="skipped" /></testcase><testcase name="tempest.api.baremetal.admin.test_ports_negative.TestPortsNegative.test_show_port_by_mac_not_allowed"><skipped message="TestPortsNegative skipped as Ironic is not available" type="skipped" /></testcase><testcase name="tempest.api.object_storage.test_account_services.AccountTest.test_list_containers_with_marker"><skipped message="AccountTest skipped as swift is not available" type="skipped" /></testcase><testcase name="tempest.api.volume.admin.test_snapshots_actions.SnapshotsActionsV2Test.test_snapshot_force_delete_when_snapshot_is_error_deleting"><skipped message="SnapshotsActionsV2Test skipped as Cinder is not available" type="skipped" /></testcase><testcase name="tempest.api.volume.admin.test_volume_services.VolumesServicesV1TestJSON.test_get_service_by_service_and_host_name"><skipped message="VolumesServicesV1TestJSON skipped as Cinder is not available" type="skipped" /></testcase><testcase name="tempest.api.baremetal.admin.test_nodes.TestNodes.test_get_node_supported_boot_devices"><skipped message="TestNodes skipped as Ironic is not available" type="skipped" /></testcase><testcase name="tempest.api.object_storage.test_container_services.ContainerTest.test_update_container_metadata_with_delete_metadata_key"><skipped message="ContainerTest skipped as swift is not available" type="skipped" /></testcase><testcase name="tempest.api.volume.admin.test_volume_types_extra_specs_negative.ExtraSpecsNegativeV2Test.test_get_nonexistent_extra_spec_id"><skipped message="ExtraSpecsNegativeV2Test skipped as Cinder is not available" type="skipped" /></testcase><testcase name="tempest.api.compute.admin.test_migrations.MigrationsAdminTest.test_cold_migration"><skipped message="Less than 2 compute nodes, skipping multinode tests." type="skipped" /></testcase><testcase name="tempest.api.orchestration.stacks.test_swift_resources.SwiftResourcesTestJSON.test_metadata"><skipped message="Swift support is required" type="skipped" /></testcase><testcase name="tempest.api.network.test_metering_extensions.MeteringTestJSON.test_create_delete_metering_label_rule_with_filters"><skipped message="metering extension not enabled." type="skipped" /></testcase><testcase name="tempest.api.volume.test_volumes_list.VolumesV1ListTestJSON.test_volumes_list_details_by_availability_zone"><skipped message="VolumesV1ListTestJSON skipped as Cinder is not available" type="skipped" /></testcase><testcase name="tempest.api.object_storage.test_object_services.ObjectTest.test_create_object_with_etag"><skipped message="ObjectTest skipped as swift is not available" type="skipped" /></testcase><testcase name="tempest.api.baremetal.admin.test_ports_negative.TestPortsNegative.test_create_port_duplicated_port_uuid"><skipped message="TestPortsNegative skipped as Ironic is not available" type="skipped" /></testcase><testcase name="tempest.api.volume.admin.test_multi_backend.VolumeMultiBackendV1Test.test_backend_name_reporting"><skipped message="VolumeMultiBackendV1Test skipped as Cinder is not available" type="skipped" /></testcase><testcase name="tempest.api.object_storage.test_account_services.AccountTest.test_list_containers_with_format_json"><skipped message="AccountTest skipped as swift is not available" type="skipped" /></testcase><testcase name="tempest.api.volume.test_volumes_actions.VolumesV2ActionsTest.test_volume_bootable"><skipped message="VolumesV2ActionsTest skipped as Cinder is not available" type="skipped" /></testcase><testcase name="tempest.api.object_storage.test_account_services.AccountTest.test_update_account_metadata_with_create_metadata"><skipped message="AccountTest skipped as swift is not available" type="skipped" /></testcase><testcase name="tempest.api.data_processing.test_data_sources.DataSourceTest.test_external_hdfs_data_source_create"><skipped message="Sahara support is required" type="skipped" /></testcase><testcase name="tempest.scenario.test_encrypted_cinder_volumes.TestEncryptedCinderVolumes.test_encrypted_cinder_volumes_cryptsetup"><skipped message="Encrypted volume attach is not supported" type="skipped" /></testcase><testcase name="tempest.api.volume.admin.test_volume_types_extra_specs.VolumeTypesExtraSpecsV2Test.test_volume_type_extra_spec_create_get_delete"><skipped message="VolumeTypesExtraSpecsV2Test skipped as Cinder is not available" type="skipped" /></testcase><testcase name="tempest.api.volume.test_volume_metadata.VolumesV1MetadataTest.test_create_get_delete_volume_metadata"><skipped message="VolumesV1MetadataTest skipped as Cinder is not available" type="skipped" /></testcase><testcase name="tempest.api.volume.test_volumes_actions.VolumesV1ActionsTest.test_volume_readonly_update"><skipped message="VolumesV1ActionsTest skipped as Cinder is not available" type="skipped" /></testcase><testcase name="tempest.api.object_storage.test_container_staticweb.StaticWebTest.test_web_index"><skipped message="StaticWebTest skipped as swift is not available" type="skipped" /></testcase><testcase name="tempest.scenario.test_network_advanced_server_ops.TestNetworkAdvancedServerOps.test_server_connectivity_stop_start"><skipped message="Either project_networks_reachable must be &quot;true&quot;, or public_network_id must be defined." type="skipped" /></testcase><testcase name="tempest.api.volume.test_volumes_negative.VolumesV2NegativeTest.test_create_volume_with_nonexistent_volume_type"><skipped message="VolumesV2NegativeTest skipped as Cinder is not available" type="skipped" /></testcase><testcase name="tempest.api.volume.test_volumes_negative.VolumesV1NegativeTest.test_delete_volume_without_passing_volume_id"><skipped message="VolumesV1NegativeTest skipped as Cinder is not available" type="skipped" /></testcase><testcase name="tempest.api.volume.admin.v3.test_user_messages.UserMessagesTest.test_show_message"><skipped message="UserMessagesTest skipped as Cinder is not available" type="skipped" /></testcase><testcase name="tempest.api.baremetal.admin.test_nodes.TestNodes.test_get_node_boot_device"><skipped message="TestNodes skipped as Ironic is not available" type="skipped" /></testcase><testcase name="tempest.api.volume.test_volumes_negative.VolumesV1NegativeTest.test_volume_extend_with_size_smaller_than_original_size"><skipped message="VolumesV1NegativeTest skipped as Cinder is not available" type="skipped" /></testcase><testcase name="tempest.api.object_storage.test_object_services.ObjectTest.test_update_object_metadata"><skipped message="ObjectTest skipped as swift is not available" type="skipped" /></testcase><testcase name="tempest.api.compute.volumes.test_attach_volume.AttachVolumeShelveTestJSON.test_attach_detach_volume"><skipped message="The microversion range[2.20 - latest] of this test is out of the configuration range[None - None]." type="skipped" /></testcase><testcase name="tempest.api.volume.admin.test_snapshots_actions.SnapshotsActionsV1Test.test_snapshot_force_delete_when_snapshot_is_error_deleting"><skipped message="SnapshotsActionsV1Test skipped as Cinder is not available" type="skipped" /></testcase><testcase name="tempest.api.volume.test_volumes_backup.VolumesBackupsV2Test.test_volume_backup_create_get_detailed_list_restore_delete"><skipped message="VolumesBackupsV2Test skipped as Cinder is not available" type="skipped" /></testcase><testcase name="tempest.api.volume.admin.v3.test_user_messages.UserMessagesTest.test_delete_message"><skipped message="UserMessagesTest skipped as Cinder is not available" type="skipped" /></testcase><testcase name="tempest.api.volume.test_volumes_negative.VolumesV2NegativeTest.test_create_volume_with_nonexistent_snapshot_id"><skipped message="VolumesV2NegativeTest skipped as Cinder is not available" type="skipped" /></testcase><testcase name="tempest.api.orchestration.stacks.test_swift_resources.SwiftResourcesTestJSON.test_created_resources"><skipped message="Swift support is required" type="skipped" /></testcase><testcase name="tempest.api.baremetal.admin.test_ports_negative.TestPortsNegative.test_update_port_replace_nonexistent_property"><skipped message="TestPortsNegative skipped as Ironic is not available" type="skipped" /></testcase><testcase name="tempest.api.compute.test_live_block_migration_negative.LiveBlockMigrationNegativeTestJSON.test_invalid_host_for_migration"><skipped message="Live migration is not enabled" type="skipped" /></testcase><testcase name="tempest.api.object_storage.test_account_services.AccountTest.test_list_containers_with_prefix"><skipped message="AccountTest skipped as swift is not available" type="skipped" /></testcase><testcase name="tempest.api.compute.admin.test_security_group_default_rules.SecurityGroupDefaultRulesTest.test_create_security_group_default_rule_without_cidr"><skipped message="Skip as this functionality is not yet implemented in Neutron. Related Bug#1311500" type="skipped" /></testcase><testcase name="tempest.api.data_processing.test_data_sources.DataSourceTest.test_swift_data_source_list"><skipped message="Sahara support is required" type="skipped" /></testcase><testcase name="tempest.api.volume.admin.test_volumes_actions.VolumesActionsV1Test.test_volume_reset_status"><skipped message="VolumesActionsV1Test skipped as Cinder is not available" type="skipped" /></testcase><testcase name="tempest.api.volume.admin.test_snapshots_actions.SnapshotsActionsV1Test.test_reset_snapshot_status"><skipped message="SnapshotsActionsV1Test skipped as Cinder is not available" type="skipped" /></testcase><testcase name="tempest.scenario.test_network_advanced_server_ops.TestNetworkAdvancedServerOps.test_server_connectivity_suspend_resume"><skipped message="Either project_networks_reachable must be &quot;true&quot;, or public_network_id must be defined." type="skipped" /></testcase><testcase name="tempest.api.baremetal.admin.test_ports_negative.TestPortsNegative.test_update_port_remove_nonexistent_property"><skipped message="TestPortsNegative skipped as Ironic is not available" type="skipped" /></testcase><testcase name="tempest.api.volume.admin.test_qos.QosSpecsV2TestJSON.test_list_qos"><skipped message="QosSpecsV2TestJSON skipped as Cinder is not available" type="skipped" /></testcase><testcase name="tempest.api.baremetal.admin.test_ports_negative.TestPortsNegative.test_show_port_malformed_uuid"><skipped message="TestPortsNegative skipped as Ironic is not available" type="skipped" /></testcase><testcase name="tempest.api.volume.admin.test_qos.QosSpecsV1TestJSON.test_create_delete_qos_with_back_end_consumer"><skipped message="QosSpecsV1TestJSON skipped as Cinder is not available" type="skipped" /></testcase><testcase name="tempest.api.volume.test_volumes_negative.VolumesV2NegativeTest.test_create_volume_with_size_zero"><skipped message="VolumesV2NegativeTest skipped as Cinder is not available" type="skipped" /></testcase><testcase name="tempest.api.volume.test_volumes_list.VolumesV1ListTestJSON.test_volume_list"><skipped message="VolumesV1ListTestJSON skipped as Cinder is not available" type="skipped" /></testcase><testcase name="tempest.api.object_storage.test_container_services.ContainerTest.test_create_container"><skipped message="ContainerTest skipped as swift is not available" type="skipped" /></testcase><testcase name="tempest.api.baremetal.admin.test_ports_negative.TestPortsNegative.test_update_port_add_nonexistent_property"><skipped message="TestPortsNegative skipped as Ironic is not available" type="skipped" /></testcase><testcase name="tempest.api.compute.admin.test_fixed_ips.FixedIPsTestJson.test_set_unreserve"><skipped message="FixedIPsTestJson skipped as neutron is available" type="skipped" /></testcase><testcase name="tempest.api.data_processing.test_job_binaries.JobBinaryTest.test_swift_job_binary_delete"><skipped message="Sahara support is required" type="skipped" /></testcase><testcase name="tempest.api.volume.admin.test_volume_services.VolumesServicesV2TestJSON.test_get_service_by_service_and_host_name"><skipped message="VolumesServicesV2TestJSON skipped as Cinder is not available" type="skipped" /></testcase><testcase name="tempest.api.volume.test_volumes_snapshots_list.VolumesV1SnapshotLimitTestJSON.test_snapshot_list_param_limit"><skipped message="VolumesV1SnapshotLimitTestJSON skipped as Cinder is not available" type="skipped" /></testcase><testcase name="tempest.api.object_storage.test_object_temp_url.ObjectTempUrlTest.test_get_object_using_temp_url_key_2"><skipped message="ObjectTempUrlTest skipped as swift is not available" type="skipped" /></testcase><testcase name="tempest.api.baremetal.admin.test_ports_negative.TestPortsNegative.test_update_port_remove_mandatory_field_mac"><skipped message="TestPortsNegative skipped as Ironic is not available" type="skipped" /></testcase><testcase name="tempest.api.volume.admin.test_volume_types_negative.VolumeTypesNegativeV1Test.test_get_nonexistent_type_id"><skipped message="VolumeTypesNegativeV1Test skipped as Cinder is not available" type="skipped" /></testcase><testcase name="tempest.api.data_processing.test_job_binaries.JobBinaryTest.test_internal_db_job_binary_delete"><skipped message="Sahara support is required" type="skipped" /></testcase><testcase name="tempest.api.volume.test_volumes_actions.VolumesV2ActionsTest.test_attach_detach_volume_to_instance"><skipped message="VolumesV2ActionsTest skipped as Cinder is not available" type="skipped" /></testcase><testcase name="tempest.api.baremetal.admin.test_ports.TestPorts.test_list_ports_details"><skipped message="TestPorts skipped as Ironic is not available" type="skipped" /></testcase><testcase name="tempest.api.volume.test_volumes_negative.VolumesV2NegativeTest.test_volume_get_nonexistent_volume_id"><skipped message="VolumesV2NegativeTest skipped as Cinder is not available" type="skipped" /></testcase><testcase name="tempest.api.object_storage.test_account_services.AccountTest.test_list_containers_with_format_xml"><skipped message="AccountTest skipped as swift is not available" type="skipped" /></testcase><testcase name="tempest.api.baremetal.admin.test_ports.TestPorts.test_create_port_specifying_uuid"><skipped message="TestPorts skipped as Ironic is not available" type="skipped" /></testcase><testcase name="tempest.api.object_storage.test_object_services.ObjectTest.test_get_object"><skipped message="ObjectTest skipped as swift is not available" type="skipped" /></testcase><testcase name="tempest.api.volume.test_volumes_actions.VolumesV1ActionsTest.test_get_volume_attachment"><skipped message="VolumesV1ActionsTest skipped as Cinder is not available" type="skipped" /></testcase><testcase name="tempest.api.volume.admin.test_volumes_actions.VolumesActionsV1Test.test_volume_force_delete_when_volume_is_attaching"><skipped message="VolumesActionsV1Test skipped as Cinder is not available" type="skipped" /></testcase><testcase name="tempest.api.object_storage.test_container_sync.ContainerSyncTest.test_container_synchronization"><skipped message="ContainerSyncTest skipped as swift is not available" type="skipped" /></testcase><testcase name="tempest.scenario.test_network_v6.TestGettingAddress.test_multi_prefix_dhcpv6_stateless"><skipped message="Either project_networks_reachable must be &quot;true&quot;, or public_network_id must be defined." type="skipped" /></testcase><testcase name="tempest.api.volume.test_volumes_list.VolumesV2ListTestJSON.test_volume_list_param_display_name_and_status"><skipped message="VolumesV2ListTestJSON skipped as Cinder is not available" type="skipped" /></testcase><testcase name="tempest.scenario.test_network_v6.TestGettingAddress.test_dhcp6_stateless_from_os"><skipped message="Either project_networks_reachable must be &quot;true&quot;, or public_network_id must be defined." type="skipped" /></testcase><testcase name="tempest.api.identity.admin.v3.test_projects.ProjectsTestJSON.test_project_create_with_parent"><skipped message="Reseller not available." type="skipped" /></testcase><testcase name="tempest.api.orchestration.stacks.test_swift_resources.SwiftResourcesTestJSON.test_created_containers"><skipped message="Swift support is required" type="skipped" /></testcase><testcase name="tempest.scenario.test_server_multinode.TestServerMultinode.test_schedule_to_all_nodes"><skipped message="Less than 2 compute nodes, skipping multinode tests." type="skipped" /></testcase><testcase name="tempest.api.volume.test_volumes_get.VolumesV1GetTest.test_volume_create_get_update_delete"><skipped message="VolumesV1GetTest skipped as Cinder is not available" type="skipped" /></testcase><testcase name="tempest.api.baremetal.admin.test_chassis.TestChassis.test_list_chassis"><skipped message="TestChassis skipped as Ironic is not available" type="skipped" /></testcase><testcase name="tempest.api.volume.admin.test_volume_quotas.VolumeQuotasAdminV1TestJSON.test_delete_quota"><skipped message="VolumeQuotasAdminV1TestJSON skipped as Cinder is not available" type="skipped" /></testcase><testcase name="tempest.api.compute.volumes.test_volumes_negative.VolumesNegativeTest.test_get_volume_without_passing_volume_id"><skipped message="VolumesNegativeTest skipped as Cinder is not available" type="skipped" /></testcase><testcase name="tempest.api.volume.test_volumes_clone_negative.VolumesV1CloneTest.test_create_from_volume_decreasing_size"><skipped message="VolumesV1CloneTest skipped as Cinder is not available" type="skipped" /></testcase><testcase name="tempest.api.volume.test_volumes_negative.VolumesV1NegativeTest.test_volume_get_nonexistent_volume_id"><skipped message="VolumesV1NegativeTest skipped as Cinder is not available" type="skipped" /></testcase><testcase name="tempest.api.baremetal.admin.test_chassis.TestChassis.test_create_chassis"><skipped message="TestChassis skipped as Ironic is not available" type="skipped" /></testcase><testcase name="tempest.api.data_processing.test_job_binaries.JobBinaryTest.test_internal_db_job_binary_create"><skipped message="Sahara support is required" type="skipped" /></testcase><testcase name="tempest.api.baremetal.admin.test_ports_negative.TestPortsNegative.test_update_port_by_mac_not_allowed"><skipped message="TestPortsNegative skipped as Ironic is not available" type="skipped" /></testcase><testcase name="tempest.scenario.test_network_basic_ops.TestNetworkBasicOps.test_port_security_macspoofing_port"><skipped message="Either project_networks_reachable must be &quot;true&quot;, or public_network_id must be defined." type="skipped" /></testcase><testcase name="tempest.api.compute.volumes.test_volumes_negative.VolumesNegativeTest.test_get_invalid_volume_id"><skipped message="VolumesNegativeTest skipped as Cinder is not available" type="skipped" /></testcase><testcase name="tempest.api.volume.test_volumes_actions.VolumesV2ActionsTest.test_volume_upload"><skipped message="VolumesV2ActionsTest skipped as Cinder is not available" type="skipped" /></testcase><testcase name="tempest.api.network.test_networks.NetworksIpV6TestAttrs.test_external_network_visibility"><skipped message="The public_network_id option must be specified." type="skipped" /></testcase><testcase name="tempest.api.object_storage.test_object_temp_url.ObjectTempUrlTest.test_get_object_using_temp_url_with_inline_query_parameter"><skipped message="ObjectTempUrlTest skipped as swift is not available" type="skipped" /></testcase><testcase name="tempest.api.data_processing.test_job_binary_internals.JobBinaryInternalTest.test_job_binary_internal_list"><skipped message="Sahara support is required" type="skipped" /></testcase><testcase name="tempest.api.baremetal.admin.test_ports_negative.TestPortsNegative.test_create_port_no_mandatory_field_mac"><skipped message="TestPortsNegative skipped as Ironic is not available" type="skipped" /></testcase><testcase name="tempest.api.volume.admin.test_volume_types_extra_specs_negative.ExtraSpecsNegativeV2Test.test_update_multiple_extra_spec"><skipped message="ExtraSpecsNegativeV2Test skipped as Cinder is not available" type="skipped" /></testcase><testcase name="tempest.api.data_processing.test_data_sources.DataSourceTest.test_external_hdfs_data_source_get"><skipped message="Sahara support is required" type="skipped" /></testcase><testcase name="tempest.api.volume.test_volumes_negative.VolumesV2NegativeTest.test_volume_extend_with_non_number_size"><skipped message="VolumesV2NegativeTest skipped as Cinder is not available" type="skipped" /></testcase><testcase name="tempest.api.volume.test_volumes_negative.VolumesV2NegativeTest.test_volume_extend_with_size_smaller_than_original_size"><skipped message="VolumesV2NegativeTest skipped as Cinder is not available" type="skipped" /></testcase><testcase name="tempest.api.volume.admin.test_volume_types_extra_specs_negative.ExtraSpecsNegativeV1Test.test_update_no_body"><skipped message="ExtraSpecsNegativeV1Test skipped as Cinder is not available" type="skipped" /></testcase><testcase name="tempest.api.volume.admin.test_volume_types_extra_specs_negative.ExtraSpecsNegativeV1Test.test_update_none_extra_spec_id"><skipped message="ExtraSpecsNegativeV1Test skipped as Cinder is not available" type="skipped" /></testcase><testcase name="tempest.api.volume.test_volumes_list.VolumesV2ListTestJSON.test_volume_list_by_name"><skipped message="VolumesV2ListTestJSON skipped as Cinder is not available" type="skipped" /></testcase><testcase name="tempest.api.object_storage.test_object_services.ObjectTest.test_create_object_with_transfer_encoding"><skipped message="ObjectTest skipped as swift is not available" type="skipped" /></testcase><testcase name="tempest.api.data_processing.test_job_binary_internals.JobBinaryInternalTest.test_job_binary_internal_get_data"><skipped message="Sahara support is required" type="skipped" /></testcase><testcase name="tempest.api.object_storage.test_object_services.ObjectTest.test_create_object_with_x_fresh_metadata"><skipped message="ObjectTest skipped as swift is not available" type="skipped" /></testcase><testcase name="tempest.api.orchestration.stacks.test_neutron_resources.NeutronResourcesTestJSON.test_created_resources"><skipped message="Skipped until Bug: 1547261 is resolved." type="skipped" /></testcase><testcase name="tempest.api.compute.volumes.test_volumes_negative.VolumesNegativeTest.test_create_volume_with_invalid_size"><skipped message="VolumesNegativeTest skipped as Cinder is not available" type="skipped" /></testcase><testcase name="tempest.api.object_storage.test_object_slo.ObjectSloTest.test_list_large_object_metadata"><skipped message="ObjectSloTest skipped as swift is not available" type="skipped" /></testcase><testcase name="tempest.api.data_processing.test_jobs.JobTest.test_job_delete"><skipped message="Sahara support is required" type="skipped" /></testcase><testcase name="tempest.api.volume.admin.test_volume_quotas.VolumeQuotasAdminV1TestJSON.test_list_quotas"><skipped message="VolumeQuotasAdminV1TestJSON skipped as Cinder is not available" type="skipped" /></testcase><testcase name="tempest.api.volume.test_volumes_negative.VolumesV1NegativeTest.test_get_invalid_volume_id"><skipped message="VolumesV1NegativeTest skipped as Cinder is not available" type="skipped" /></testcase><testcase name="tempest.api.compute.admin.test_servers_on_multinodes.ServersOnMultiNodesTest.test_create_servers_on_same_host"><skipped message="Less than 2 compute nodes, skipping multi-nodes test." type="skipped" /></testcase><testcase name="tempest.api.volume.admin.test_backends_capabilities.BackendsCapabilitiesAdminV2TestsJSON.test_get_capabilities_backend"><skipped message="BackendsCapabilitiesAdminV2TestsJSON skipped as Cinder is not available" type="skipped" /></testcase><testcase name="tempest.api.object_storage.test_account_services.AccountTest.test_list_no_account_metadata"><skipped message="AccountTest skipped as swift is not available" type="skipped" /></testcase><testcase name="tempest.api.object_storage.test_container_acl_negative.ObjectACLsNegativeTest.test_delete_object_without_using_creds"><skipped message="ObjectACLsNegativeTest skipped as swift is not available" type="skipped" /></testcase><testcase name="tempest.api.data_processing.test_job_binary_internals.JobBinaryInternalTest.test_job_binary_internal_create"><skipped message="Sahara support is required" type="skipped" /></testcase><testcase name="tempest.api.volume.test_volumes_negative.VolumesV2NegativeTest.test_unreserve_volume_with_nonexistent_volume_id"><skipped message="VolumesV2NegativeTest skipped as Cinder is not available" type="skipped" /></testcase><testcase name="tempest.api.object_storage.test_object_services.ObjectTest.test_update_object_metadata_with_create_and_remove_metadata"><skipped message="ObjectTest skipped as swift is not available" type="skipped" /></testcase><testcase name="tempest.api.volume.admin.test_snapshots_actions.SnapshotsActionsV2Test.test_update_snapshot_status"><skipped message="SnapshotsActionsV2Test skipped as Cinder is not available" type="skipped" /></testcase><testcase name="tempest.api.baremetal.admin.test_nodestates.TestNodeStates.test_set_node_power_state"><skipped message="TestNodeStates skipped as Ironic is not available" type="skipped" /></testcase><testcase name="tempest.api.volume.test_volumes_negative.VolumesV1NegativeTest.test_unreserve_volume_with_nonexistent_volume_id"><skipped message="VolumesV1NegativeTest skipped as Cinder is not available" type="skipped" /></testcase><testcase name="tempest.api.compute.admin.test_fixed_ips_negative.FixedIPsNegativeTestJson.test_fixed_ip_with_invalid_action"><skipped message="FixedIPsNegativeTestJson skipped as neutron is available" type="skipped" /></testcase><testcase name="tempest.api.object_storage.test_container_quotas.ContainerQuotasTest.test_upload_large_object"><skipped message="ContainerQuotasTest skipped as swift is not available" type="skipped" /></testcase><testcase name="tempest.api.compute.servers.test_server_personality.ServerPersonalityTestJSON.test_personality_files_exceed_limit"><skipped message="Nova personality feature disabled" type="skipped" /></testcase><testcase name="tempest.api.volume.admin.test_multi_backend.VolumeMultiBackendV1Test.test_backend_name_distinction"><skipped message="VolumeMultiBackendV1Test skipped as Cinder is not available" type="skipped" /></testcase><testcase name="tempest.api.volume.v2.test_volumes_list.VolumesV2ListTestJSON.test_volume_list_details_with_multiple_params"><skipped message="VolumesV2ListTestJSON skipped as Cinder is not available" type="skipped" /></testcase><testcase name="tempest.api.volume.test_volumes_negative.VolumesV2NegativeTest.test_list_volumes_detail_with_nonexistent_name"><skipped message="VolumesV2NegativeTest skipped as Cinder is not available" type="skipped" /></testcase><testcase name="tempest.api.volume.admin.test_volume_types_extra_specs_negative.ExtraSpecsNegativeV1Test.test_update_nonexistent_extra_spec_id"><skipped message="ExtraSpecsNegativeV1Test skipped as Cinder is not available" type="skipped" /></testcase><testcase name="tempest.api.volume.admin.test_multi_backend.VolumeMultiBackendV1Test.test_backend_name_reporting_with_prefix"><skipped message="VolumeMultiBackendV1Test skipped as Cinder is not available" type="skipped" /></testcase><testcase name="tempest.api.orchestration.stacks.test_neutron_resources.NeutronResourcesTestJSON.test_created_subnet"><skipped message="Skipped until Bug: 1547261 is resolved." type="skipped" /></testcase><testcase name="tempest.api.volume.admin.test_snapshots_actions.SnapshotsActionsV1Test.test_update_snapshot_status"><skipped message="SnapshotsActionsV1Test skipped as Cinder is not available" type="skipped" /></testcase><testcase name="tempest.api.compute.keypairs.test_keypairs_v22.KeyPairsV22TestJSON.test_keypair_create_with_pub_key"><skipped message="The microversion range[2.2 - latest] of this test is out of the configuration range[None - None]." type="skipped" /></testcase><testcase name="tempest.api.volume.test_volumes_snapshots_list.VolumesV1SnapshotLimitTestJSON.test_snapshots_list_details_with_params"><skipped message="VolumesV1SnapshotLimitTestJSON skipped as Cinder is not available" type="skipped" /></testcase><testcase name="tempest.api.volume.admin.test_volume_types_extra_specs_negative.ExtraSpecsNegativeV1Test.test_get_nonexistent_volume_type_id"><skipped message="ExtraSpecsNegativeV1Test skipped as Cinder is not available" type="skipped" /></testcase><testcase name="tempest.api.baremetal.admin.test_nodes.TestNodes.test_set_console_mode"><skipped message="TestNodes skipped as Ironic is not available" type="skipped" /></testcase><testcase name="tempest.api.volume.test_volumes_negative.VolumesV1NegativeTest.test_detach_volumes_with_invalid_volume_id"><skipped message="VolumesV1NegativeTest skipped as Cinder is not available" type="skipped" /></testcase><testcase name="tempest.api.volume.test_volumes_backup.VolumesBackupsV1Test.test_backup_create_attached_volume"><skipped message="VolumesBackupsV1Test skipped as Cinder is not available" type="skipped" /></testcase><testcase name="tempest.api.object_storage.test_object_services.ObjectTest.test_update_object_metadata_with_x_object_manifest"><skipped message="ObjectTest skipped as swift is not available" type="skipped" /></testcase><testcase name="tempest.api.volume.admin.test_volume_types.VolumeTypesV2Test.test_volume_type_create_get_delete"><skipped message="VolumeTypesV2Test skipped as Cinder is not available" type="skipped" /></testcase><testcase name="tempest.api.object_storage.test_object_temp_url.ObjectTempUrlTest.test_head_object_using_temp_url"><skipped message="ObjectTempUrlTest skipped as swift is not available" type="skipped" /></testcase><testcase name="tempest.api.object_storage.test_container_services.ContainerTest.test_update_container_metadata_with_delete_metadata"><skipped message="ContainerTest skipped as swift is not available" type="skipped" /></testcase><testcase name="tempest.scenario.test_security_groups_basic_ops.TestSecurityGroupsBasicOps.test_port_update_new_security_group"><skipped message="Either project_networks_reachable must be &quot;true&quot;, or public_network_id must be defined." type="skipped" /></testcase><testcase name="tempest.api.baremetal.admin.test_nodes.TestNodes.test_list_nodes_association"><skipped message="TestNodes skipped as Ironic is not available" type="skipped" /></testcase><testcase name="tempest.api.data_processing.test_data_sources.DataSourceTest.test_local_hdfs_data_source_get"><skipped message="Sahara support is required" type="skipped" /></testcase><testcase name="tempest.api.volume.admin.test_volume_types_extra_specs_negative.ExtraSpecsNegativeV2Test.test_update_nonexistent_extra_spec_id"><skipped message="ExtraSpecsNegativeV2Test skipped as Cinder is not available" type="skipped" /></testcase><testcase name="tempest.api.volume.admin.test_multi_backend.VolumeMultiBackendV2Test.test_backend_name_reporting_with_prefix"><skipped message="VolumeMultiBackendV2Test skipped as Cinder is not available" type="skipped" /></testcase><testcase name="tempest.api.object_storage.test_account_services.AccountTest.test_update_account_metadata_with_delete_matadata_key"><skipped message="AccountTest skipped as swift is not available" type="skipped" /></testcase><testcase name="tempest.api.volume.admin.test_multi_backend.VolumeMultiBackendV1Test.test_backend_name_distinction_with_prefix"><skipped message="VolumeMultiBackendV1Test skipped as Cinder is not available" type="skipped" /></testcase><testcase name="tempest.api.data_processing.test_node_group_templates.NodeGroupTemplateTest.test_node_group_template_create"><skipped message="Sahara support is required" type="skipped" /></testcase><testcase name="tempest.api.volume.test_volume_metadata.VolumesV2MetadataTest.test_create_get_delete_volume_metadata"><skipped message="VolumesV2MetadataTest skipped as Cinder is not available" type="skipped" /></testcase><testcase name="tempest.api.volume.admin.test_volume_types.VolumeTypesV1Test.test_volume_crud_with_volume_type_and_extra_specs"><skipped message="VolumeTypesV1Test skipped as Cinder is not available" type="skipped" /></testcase><testcase name="tempest.api.volume.test_volumes_negative.VolumesV1NegativeTest.test_list_volumes_with_invalid_status"><skipped message="VolumesV1NegativeTest skipped as Cinder is not available" type="skipped" /></testcase><testcase name="tempest.api.compute.volumes.test_attach_volume.AttachVolumeTestJSON.test_attach_detach_volume"><skipped message="AttachVolumeTestJSON skipped as Cinder is not available" type="skipped" /></testcase><testcase name="tempest.api.volume.test_volumes_list.VolumesV2ListTestJSON.test_volume_list_details_by_name"><skipped message="VolumesV2ListTestJSON skipped as Cinder is not available" type="skipped" /></testcase><testcase name="tempest.api.volume.admin.test_volume_types_negative.VolumeTypesNegativeV2Test.test_get_nonexistent_type_id"><skipped message="VolumeTypesNegativeV2Test skipped as Cinder is not available" type="skipped" /></testcase><testcase name="tempest.api.volume.admin.test_qos.QosSpecsV1TestJSON.test_create_delete_qos_with_front_end_consumer"><skipped message="QosSpecsV1TestJSON skipped as Cinder is not available" type="skipped" /></testcase><testcase name="tempest.api.volume.test_volumes_negative.VolumesV2NegativeTest.test_reserve_volume_with_negative_volume_status"><skipped message="VolumesV2NegativeTest skipped as Cinder is not available" type="skipped" /></testcase><testcase name="tempest.api.volume.test_volumes_negative.VolumesV1NegativeTest.test_update_volume_with_invalid_volume_id"><skipped message="VolumesV1NegativeTest skipped as Cinder is not available" type="skipped" /></testcase><testcase name="tempest.api.volume.admin.test_volume_types_extra_specs_negative.ExtraSpecsNegativeV1Test.test_delete_nonexistent_volume_type_id"><skipped message="ExtraSpecsNegativeV1Test skipped as Cinder is not available" type="skipped" /></testcase><testcase name="tempest.api.volume.test_volumes_negative.VolumesV1NegativeTest.test_create_volume_with_nonexistent_snapshot_id"><skipped message="VolumesV1NegativeTest skipped as Cinder is not available" type="skipped" /></testcase><testcase name="tempest.api.baremetal.admin.test_ports_negative.TestPortsNegative.test_update_port_remove_mandatory_field_port_uuid"><skipped message="TestPortsNegative skipped as Ironic is not available" type="skipped" /></testcase><testcase name="tempest.api.volume.test_volumes_extend.VolumesV2ExtendTest.test_volume_extend"><skipped message="VolumesV2ExtendTest skipped as Cinder is not available" type="skipped" /></testcase><testcase name="tempest.api.orchestration.stacks.test_swift_resources.SwiftResourcesTestJSON.test_acl"><skipped message="Swift support is required" type="skipped" /></testcase><testcase name="tempest.api.object_storage.test_account_services.AccountTest.test_list_extensions"><skipped message="AccountTest skipped as swift is not available" type="skipped" /></testcase><testcase name="tempest.api.orchestration.stacks.test_neutron_resources.NeutronResourcesTestJSON.test_created_network"><skipped message="Skipped until Bug: 1547261 is resolved." type="skipped" /></testcase><testcase name="tempest.api.volume.test_volumes_negative.VolumesV1NegativeTest.test_create_volume_with_nonexistent_source_volid"><skipped message="VolumesV1NegativeTest skipped as Cinder is not available" type="skipped" /></testcase><testcase name="tempest.api.object_storage.test_object_formpost_negative.ObjectFormPostNegativeTest.test_post_object_using_form_expired"><skipped message="ObjectFormPostNegativeTest skipped as swift is not available" type="skipped" /></testcase><testcase name="tempest.api.volume.test_volume_transfers.VolumesV1TransfersTest.test_create_list_delete_volume_transfer"><skipped message="VolumesV1TransfersTest skipped as Cinder is not available" type="skipped" /></testcase><testcase name="tempest.api.volume.admin.test_volume_hosts.VolumeHostsAdminV2TestsJSON.test_list_hosts"><skipped message="VolumeHostsAdminV2TestsJSON skipped as Cinder is not available" type="skipped" /></testcase><testcase name="tempest.api.volume.admin.test_volumes_actions.VolumesActionsV1Test.test_volume_force_delete_when_volume_is_creating"><skipped message="VolumesActionsV1Test skipped as Cinder is not available" type="skipped" /></testcase><testcase name="tempest.api.object_storage.test_container_sync_middleware.ContainerSyncMiddlewareTest.test_container_synchronization"><skipped message="ContainerSyncMiddlewareTest skipped as swift is not available" type="skipped" /></testcase><testcase name="tempest.api.data_processing.test_cluster_templates.ClusterTemplateTest.test_cluster_template_get"><skipped message="Sahara support is required" type="skipped" /></testcase><testcase name="tempest.api.baremetal.admin.test_ports.TestPorts.test_delete_port"><skipped message="TestPorts skipped as Ironic is not available" type="skipped" /></testcase><testcase name="tempest.api.volume.admin.test_volumes_backup.VolumesBackupsAdminV2Test.test_volume_backup_reset_status"><skipped message="VolumesBackupsAdminV2Test skipped as Cinder is not available" type="skipped" /></testcase><testcase name="tempest.api.volume.admin.test_snapshots_actions.SnapshotsActionsV1Test.test_snapshot_force_delete_when_snapshot_is_deleting"><skipped message="SnapshotsActionsV1Test skipped as Cinder is not available" type="skipped" /></testcase><testcase name="tempest.api.compute.admin.test_quotas_negative.QuotasAdminNegativeTestJSON.test_security_groups_exceed_limit"><skipped message="Skipped until Bug: 1186354 is resolved." type="skipped" /></testcase><testcase name="tempest.api.baremetal.admin.test_ports_negative.TestPortsNegative.test_delete_port_by_mac_not_allowed"><skipped message="TestPortsNegative skipped as Ironic is not available" type="skipped" /></testcase><testcase name="tempest.api.object_storage.test_object_services.PublicObjectTest.test_access_public_container_object_without_using_creds"><skipped message="PublicObjectTest skipped as swift is not available" type="skipped" /></testcase><testcase name="tempest.api.compute.keypairs.test_keypairs_v22.KeyPairsV22TestJSON.test_keypairs_create_list_delete"><skipped message="The microversion range[2.2 - latest] of this test is out of the configuration range[None - None]." type="skipped" /></testcase><testcase name="tempest.api.baremetal.admin.test_ports.TestPorts.test_list_with_limit"><skipped message="TestPorts skipped as Ironic is not available" type="skipped" /></testcase><testcase name="tempest.api.compute.volumes.test_volume_snapshots.VolumesSnapshotsTestJSON.test_volume_snapshot_create_get_list_delete"><skipped message="VolumesSnapshotsTestJSON skipped as Cinder is not available" type="skipped" /></testcase><testcase name="tempest.api.baremetal.admin.test_ports_negative.TestPortsNegative.test_create_port_nonexsistent_node_id"><skipped message="TestPortsNegative skipped as Ironic is not available" type="skipped" /></testcase><testcase name="tempest.api.volume.test_volumes_clone.VolumesV1CloneTest.test_create_from_volume"><skipped message="VolumesV1CloneTest skipped as Cinder is not available" type="skipped" /></testcase><testcase name="tempest.api.data_processing.test_jobs.JobTest.test_job_get"><skipped message="Sahara support is required" type="skipped" /></testcase><testcase name="tempest.api.object_storage.test_container_acl_negative.ObjectACLsNegativeTest.test_delete_object_with_non_authorized_user"><skipped message="ObjectACLsNegativeTest skipped as swift is not available" type="skipped" /></testcase><testcase name="tempest.api.volume.admin.test_volume_types.VolumeTypesV1Test.test_volume_type_create_get_delete"><skipped message="VolumeTypesV1Test skipped as Cinder is not available" type="skipped" /></testcase><testcase name="tempest.api.volume.admin.test_volume_types_extra_specs.VolumeTypesExtraSpecsV1Test.test_volume_type_extra_specs_update"><skipped message="VolumeTypesExtraSpecsV1Test skipped as Cinder is not available" type="skipped" /></testcase><testcase name="tempest.api.baremetal.admin.test_nodes.TestNodes.test_get_console"><skipped message="TestNodes skipped as Ironic is not available" type="skipped" /></testcase><testcase name="tempest.api.volume.admin.test_volume_types_extra_specs_negative.ExtraSpecsNegativeV1Test.test_get_nonexistent_extra_spec_id"><skipped message="ExtraSpecsNegativeV1Test skipped as Cinder is not available" type="skipped" /></testcase><testcase name="tempest.api.data_processing.test_cluster_templates.ClusterTemplateTest.test_cluster_template_create"><skipped message="Sahara support is required" type="skipped" /></testcase><testcase name="tempest.api.volume.test_volumes_get.VolumesV2GetTest.test_volume_create_get_update_delete_as_clone"><skipped message="VolumesV2GetTest skipped as Cinder is not available" type="skipped" /></testcase><testcase name="tempest.api.object_storage.test_account_quotas.AccountQuotasTest.test_upload_valid_object"><skipped message="AccountQuotasTest skipped as swift is not available" type="skipped" /></testcase><testcase name="tempest.api.baremetal.admin.test_ports.TestPorts.test_update_port_remove"><skipped message="TestPorts skipped as Ironic is not available" type="skipped" /></testcase><testcase name="tempest.api.volume.test_volume_metadata.VolumesV1MetadataTest.test_update_volume_metadata"><skipped message="VolumesV1MetadataTest skipped as Cinder is not available" type="skipped" /></testcase><testcase name="tempest.scenario.test_security_groups_basic_ops.TestSecurityGroupsBasicOps.test_boot_into_disabled_port_security_network_without_secgroup"><skipped message="Either project_networks_reachable must be &quot;true&quot;, or public_network_id must be defined." type="skipped" /></testcase><testcase name="tempest.api.volume.test_snapshot_metadata.SnapshotV2MetadataTestJSON.test_update_snapshot_metadata"><skipped message="SnapshotV2MetadataTestJSON skipped as Cinder is not available" type="skipped" /></testcase><testcase name="tempest.api.object_storage.test_object_services.ObjectTest.test_get_object_with_if_none_match"><skipped message="ObjectTest skipped as swift is not available" type="skipped" /></testcase><testcase name="tempest.api.volume.admin.test_volume_types_negative.VolumeTypesNegativeV2Test.test_create_with_empty_name"><skipped message="VolumeTypesNegativeV2Test skipped as Cinder is not available" type="skipped" /></testcase><testcase name="tempest.api.baremetal.admin.test_ports_negative.TestPortsNegative.test_update_port_replace_mac_with_duplicated"><skipped message="TestPortsNegative skipped as Ironic is not available" type="skipped" /></testcase><testcase name="tempest.api.object_storage.test_object_services.ObjectTest.test_get_object_if_different"><skipped message="ObjectTest skipped as swift is not available" type="skipped" /></testcase><testcase name="tempest.api.baremetal.admin.test_ports_negative.TestPortsNegative.test_create_port_malformed_port_uuid"><skipped message="TestPortsNegative skipped as Ironic is not available" type="skipped" /></testcase><testcase name="tempest.api.baremetal.admin.test_ports_negative.TestPortsNegative.test_create_port_no_mandatory_field_node_id"><skipped message="TestPortsNegative skipped as Ironic is not available" type="skipped" /></testcase><testcase name="tempest.api.volume.admin.test_snapshots_actions.SnapshotsActionsV1Test.test_snapshot_force_delete_when_snapshot_is_error"><skipped message="SnapshotsActionsV1Test skipped as Cinder is not available" type="skipped" /></testcase><testcase name="tempest.api.volume.admin.test_volume_types.VolumeTypesV2Test.test_volume_type_update"><skipped message="VolumeTypesV2Test skipped as Cinder is not available" type="skipped" /></testcase><testcase name="tempest.api.compute.volumes.test_volumes_list.VolumesTestJSON.test_volume_list_with_details"><skipped message="VolumesTestJSON skipped as Cinder is not available" type="skipped" /></testcase><testcase name="tempest.scenario.test_network_advanced_server_ops.TestNetworkAdvancedServerOps.test_server_connectivity_reboot"><skipped message="Either project_networks_reachable must be &quot;true&quot;, or public_network_id must be defined." type="skipped" /></testcase><testcase name="tempest.api.object_storage.test_container_services.ContainerTest.test_list_container_contents_with_delimiter"><skipped message="ContainerTest skipped as swift is not available" type="skipped" /></testcase><testcase name="tempest.api.compute.admin.test_keypairs_v210.KeyPairsV210TestJSON.test_admin_manage_keypairs_for_other_users"><skipped message="The microversion range[2.10 - latest] of this test is out of the configuration range[None - None]." type="skipped" /></testcase><testcase name="tempest.api.volume.test_volumes_negative.VolumesV1NegativeTest.test_get_volume_without_passing_volume_id"><skipped message="VolumesV1NegativeTest skipped as Cinder is not available" type="skipped" /></testcase><testcase name="tempest.api.compute.security_groups.test_security_groups_negative.SecurityGroupsNegativeTestJSON.test_update_security_group_with_invalid_sg_id"><skipped message="Neutron does not check the security group ID" type="skipped" /></testcase><testcase name="tempest.api.object_storage.test_account_bulk.BulkTest.test_bulk_delete"><skipped message="BulkTest skipped as swift is not available" type="skipped" /></testcase><testcase name="tempest.api.object_storage.test_object_services.ObjectTest.test_create_object_with_x_remove_object_meta"><skipped message="ObjectTest skipped as swift is not available" type="skipped" /></testcase><testcase name="tempest.api.volume.test_volumes_list.VolumesV2ListTestJSON.test_volumes_list_by_status"><skipped message="VolumesV2ListTestJSON skipped as Cinder is not available" type="skipped" /></testcase><testcase name="tempest.api.volume.admin.test_volume_quotas.BaseVolumeQuotasAdminV2TestJSON.test_quota_usage_after_volume_transfer"><skipped message="BaseVolumeQuotasAdminV2TestJSON skipped as Cinder is not available" type="skipped" /></testcase><testcase name="tempest.api.volume.admin.test_volumes_backup.VolumesBackupsAdminV2Test.test_volume_backup_export_import"><skipped message="VolumesBackupsAdminV2Test skipped as Cinder is not available" type="skipped" /></testcase><testcase name="tempest.api.volume.admin.test_volumes_backup.VolumesBackupsAdminV1Test.test_volume_backup_export_import"><skipped message="VolumesBackupsAdminV1Test skipped as Cinder is not available" type="skipped" /></testcase><testcase name="tempest.scenario.test_network_basic_ops.TestNetworkBasicOps.test_preserve_preexisting_port"><skipped message="Either project_networks_reachable must be &quot;true&quot;, or public_network_id must be defined." type="skipped" /></testcase><testcase name="tempest.api.object_storage.test_container_staticweb.StaticWebTest.test_web_listing_css"><skipped message="StaticWebTest skipped as swift is not available" type="skipped" /></testcase><testcase name="tempest.api.compute.volumes.test_volumes_negative.VolumesNegativeTest.test_create_volume_with_out_passing_size"><skipped message="VolumesNegativeTest skipped as Cinder is not available" type="skipped" /></testcase><testcase name="tempest.api.compute.admin.test_security_group_default_rules.SecurityGroupDefaultRulesTest.test_security_group_default_rules_list"><skipped message="Skip as this functionality is not yet implemented in Neutron. Related Bug#1311500" type="skipped" /></testcase><testcase name="tempest.api.volume.test_volumes_list.VolumesV2ListTestJSON.test_volumes_list_details_by_availability_zone"><skipped message="VolumesV2ListTestJSON skipped as Cinder is not available" type="skipped" /></testcase><testcase name="tempest.api.data_processing.test_jobs.JobTest.test_job_list"><skipped message="Sahara support is required" type="skipped" /></testcase><testcase name="tempest.api.volume.test_volumes_negative.VolumesV1NegativeTest.test_update_volume_with_nonexistent_volume_id"><skipped message="VolumesV1NegativeTest skipped as Cinder is not available" type="skipped" /></testcase><testcase name="tempest.api.volume.admin.v2.test_volume_type_access.VolumeTypesAccessV2Test.test_volume_type_access_list"><skipped message="VolumeTypesAccessV2Test skipped as Cinder is not available" type="skipped" /></testcase><testcase name="tempest.api.volume.admin.test_volume_quotas.VolumeQuotasAdminV1TestJSON.test_quota_usage"><skipped message="VolumeQuotasAdminV1TestJSON skipped as Cinder is not available" type="skipped" /></testcase><testcase name="tempest.api.volume.test_volumes_negative.VolumesV1NegativeTest.test_create_volume_with_nonexistent_volume_type"><skipped message="VolumesV1NegativeTest skipped as Cinder is not available" type="skipped" /></testcase><testcase name="tempest.api.volume.admin.test_volume_quotas.VolumeQuotasAdminV1TestJSON.test_quota_usage_after_volume_transfer"><skipped message="VolumeQuotasAdminV1TestJSON skipped as Cinder is not available" type="skipped" /></testcase><testcase name="tempest.api.network.test_metering_extensions.MeteringTestJSON.test_show_metering_label_rule"><skipped message="metering extension not enabled." type="skipped" /></testcase><testcase name="tempest.api.compute.admin.test_live_migration.LiveBlockMigrationTestJSON.test_volume_backed_live_migration"><skipped message="LiveBlockMigrationTestJSON skipped as live-migration is not available" type="skipped" /></testcase><testcase name="tempest.api.volume.admin.test_volume_types_extra_specs_negative.ExtraSpecsNegativeV2Test.test_update_no_body"><skipped message="ExtraSpecsNegativeV2Test skipped as Cinder is not available" type="skipped" /></testcase><testcase name="tempest.api.compute.admin.test_live_migration.LiveAutoBlockMigrationV225TestJSON.test_live_block_migration"><skipped message="The microversion range[2.25 - latest] of this test is out of the configuration range[None - None]." type="skipped" /></testcase><testcase name="tempest.api.volume.test_volumes_negative.VolumesV1NegativeTest.test_delete_invalid_volume_id"><skipped message="VolumesV1NegativeTest skipped as Cinder is not available" type="skipped" /></testcase><testcase name="tempest.api.volume.admin.test_multi_backend.VolumeMultiBackendV2Test.test_backend_name_distinction_with_prefix"><skipped message="VolumeMultiBackendV2Test skipped as Cinder is not available" type="skipped" /></testcase><testcase name="tempest.api.volume.admin.test_volume_quotas.BaseVolumeQuotasAdminV2TestJSON.test_delete_quota"><skipped message="BaseVolumeQuotasAdminV2TestJSON skipped as Cinder is not available" type="skipped" /></testcase><testcase name="tempest.scenario.test_security_groups_basic_ops.TestSecurityGroupsBasicOps.test_in_tenant_traffic"><skipped message="Either project_networks_reachable must be &quot;true&quot;, or public_network_id must be defined." type="skipped" /></testcase><testcase name="tempest.api.volume.admin.test_volume_services.VolumesServicesV1TestJSON.test_get_service_by_service_binary_name"><skipped message="VolumesServicesV1TestJSON skipped as Cinder is not available" type="skipped" /></testcase><testcase name="tempest.api.orchestration.stacks.test_volumes.CinderResourcesTest.test_cinder_volume_create_delete"><skipped message="Cinder support is required" type="skipped" /></testcase><testcase name="tempest.api.object_storage.test_container_services.ContainerTest.test_create_container_with_metadata_key"><skipped message="ContainerTest skipped as swift is not available" type="skipped" /></testcase><testcase name="tempest.api.volume.test_volumes_negative.VolumesV1NegativeTest.test_create_volume_with_size_negative"><skipped message="VolumesV1NegativeTest skipped as Cinder is not available" type="skipped" /></testcase><testcase name="tempest.api.volume.test_volumes_list.VolumesV1ListTestJSON.test_volume_list_with_param_metadata"><skipped message="VolumesV1ListTestJSON skipped as Cinder is not available" type="skipped" /></testcase><testcase name="tempest.api.data_processing.test_job_binaries.JobBinaryTest.test_job_binary_get_data"><skipped message="Sahara support is required" type="skipped" /></testcase><testcase name="tempest.api.volume.test_snapshot_metadata.SnapshotV2MetadataTestJSON.test_update_snapshot_metadata_item"><skipped message="SnapshotV2MetadataTestJSON skipped as Cinder is not available" type="skipped" /></testcase><testcase name="tempest.api.data_processing.test_data_sources.DataSourceTest.test_swift_data_source_create"><skipped message="Sahara support is required" type="skipped" /></testcase><testcase name="tempest.api.baremetal.admin.test_nodes.TestNodes.test_show_node"><skipped message="TestNodes skipped as Ironic is not available" type="skipped" /></testcase><testcase name="tempest.api.network.test_metering_extensions.MeteringTestJSON.test_list_metering_labels"><skipped message="metering extension not enabled." type="skipped" /></testcase><testcase name="tempest.api.volume.test_volumes_negative.VolumesV2NegativeTest.test_reserve_volume_with_nonexistent_volume_id"><skipped message="VolumesV2NegativeTest skipped as Cinder is not available" type="skipped" /></testcase><testcase name="tempest.api.network.test_metering_extensions.MeteringTestJSON.test_create_delete_metering_label_with_filters"><skipped message="metering extension not enabled." type="skipped" /></testcase><testcase name="tempest.api.compute.servers.test_attach_interfaces.AttachInterfacesTestJSON.test_reassign_port_between_servers"><skipped message="Skipped until Bug: 1607714 is resolved." type="skipped" /></testcase><testcase name="tempest.api.orchestration.stacks.test_volumes.CinderResourcesTest.test_cinder_volume_create_delete_retain"><skipped message="Cinder support is required" type="skipped" /></testcase><testcase name="tempest.api.volume.admin.test_multi_backend.VolumeMultiBackendV2Test.test_backend_name_distinction"><skipped message="VolumeMultiBackendV2Test skipped as Cinder is not available" type="skipped" /></testcase><testcase name="tempest.api.volume.test_volumes_negative.VolumesV1NegativeTest.test_create_volume_with_size_zero"><skipped message="VolumesV1NegativeTest skipped as Cinder is not available" type="skipped" /></testcase><testcase name="tempest.api.object_storage.test_container_services.ContainerTest.test_list_container_contents_with_format_xml"><skipped message="ContainerTest skipped as swift is not available" type="skipped" /></testcase><testcase name="tempest.api.compute.admin.test_servers_on_multinodes.ServersOnMultiNodesTest.test_create_servers_on_different_hosts_with_list_of_servers"><skipped message="Less than 2 compute nodes, skipping multi-nodes test." type="skipped" /></testcase><testcase name="tempest.api.volume.test_volumes_get.VolumesV2GetTest.test_volume_create_get_update_delete"><skipped message="VolumesV2GetTest skipped as Cinder is not available" type="skipped" /></testcase><testcase name="tempest.api.baremetal.admin.test_ports_negative.TestPortsNegative.test_update_port_replace_mac_with_malformed"><skipped message="TestPortsNegative skipped as Ironic is not available" type="skipped" /></testcase><testcase name="tempest.api.object_storage.test_object_services.ObjectTest.test_list_object_metadata"><skipped message="ObjectTest skipped as swift is not available" type="skipped" /></testcase><testcase name="tempest.scenario.test_baremetal_basic_ops.BaremetalBasicOps.test_baremetal_server_ops"><skipped message="Ironic not available or Ironic compute driver not enabled" type="skipped" /></testcase><testcase name="tempest.api.volume.test_volumes_negative.VolumesV2NegativeTest.test_update_volume_with_nonexistent_volume_id"><skipped message="VolumesV2NegativeTest skipped as Cinder is not available" type="skipped" /></testcase><testcase name="tempest.api.compute.admin.test_live_migration.LiveBlockMigrationTestJSON.test_live_block_migration_paused"><skipped message="LiveBlockMigrationTestJSON skipped as live-migration is not available" type="skipped" /></testcase><testcase name="tempest.api.object_storage.test_object_services.ObjectTest.test_get_object_with_x_newest"><skipped message="ObjectTest skipped as swift is not available" type="skipped" /></testcase><testcase name="tempest.api.volume.test_volumes_actions.VolumesV2ActionsTest.test_reserve_unreserve_volume"><skipped message="VolumesV2ActionsTest skipped as Cinder is not available" type="skipped" /></testcase><testcase name="tempest.api.object_storage.test_object_services.ObjectTest.test_create_object_with_x_object_metakey"><skipped message="ObjectTest skipped as swift is not available" type="skipped" /></testcase><testcase name="tempest.api.volume.admin.test_volume_types_extra_specs.VolumeTypesExtraSpecsV2Test.test_volume_type_extra_specs_list"><skipped message="VolumeTypesExtraSpecsV2Test skipped as Cinder is not available" type="skipped" /></testcase><testcase name="tempest.api.object_storage.test_object_temp_url_negative.ObjectTempUrlNegativeTest.test_get_object_after_expiration_time"><skipped message="ObjectTempUrlNegativeTest skipped as swift is not available" type="skipped" /></testcase><testcase name="tempest.api.volume.test_volumes_list.VolumesV2ListTestJSON.test_volume_list_with_details"><skipped message="VolumesV2ListTestJSON skipped as Cinder is not available" type="skipped" /></testcase><testcase name="tempest.api.volume.admin.v2.test_volume_pools.VolumePoolsAdminV2TestsJSON.test_get_pools_without_details"><skipped message="VolumePoolsAdminV2TestsJSON skipped as Cinder is not available" type="skipped" /></testcase><testcase name="tempest.api.volume.test_volumes_negative.VolumesV2NegativeTest.test_detach_volumes_with_invalid_volume_id"><skipped message="VolumesV2NegativeTest skipped as Cinder is not available" type="skipped" /></testcase><testcase name="tempest.api.volume.test_volumes_snapshots_negative.VolumesV2SnapshotNegativeTestJSON.test_volume_from_snapshot_decreasing_size"><skipped message="VolumesV2SnapshotNegativeTestJSON skipped as Cinder is not available" type="skipped" /></testcase><testcase name="tempest.api.compute.admin.test_fixed_ips_negative.FixedIPsNegativeTestJson.test_set_reserve_with_non_admin_user"><skipped message="FixedIPsNegativeTestJson skipped as neutron is available" type="skipped" /></testcase><testcase name="tempest.api.data_processing.test_node_group_templates.NodeGroupTemplateTest.test_node_group_template_delete"><skipped message="Sahara support is required" type="skipped" /></testcase><testcase name="tempest.api.compute.volumes.test_volumes_negative.VolumesNegativeTest.test_volume_delete_nonexistent_volume_id"><skipped message="VolumesNegativeTest skipped as Cinder is not available" type="skipped" /></testcase><testcase name="tempest.api.compute.admin.test_live_migration.LiveBlockMigrationTestJSON.test_live_block_migration"><skipped message="LiveBlockMigrationTestJSON skipped as live-migration is not available" type="skipped" /></testcase><testcase name="tempest.api.network.test_metering_extensions.MeteringIpV6TestJSON.test_create_delete_metering_label_with_filters"><skipped message="metering extension not enabled." type="skipped" /></testcase><testcase name="tempest.api.volume.admin.test_volume_snapshot_quotas_negative.VolumeSnapshotQuotasNegativeV2TestJSON.test_quota_volume_snapshots"><skipped message="VolumeSnapshotQuotasNegativeV2TestJSON skipped as Cinder is not available" type="skipped" /></testcase><testcase name="tempest.api.volume.test_volumes_negative.VolumesV2NegativeTest.test_list_volumes_with_invalid_status"><skipped message="VolumesV2NegativeTest skipped as Cinder is not available" type="skipped" /></testcase><testcase name="tempest.api.volume.test_volumes_list.VolumesV2ListTestJSON.test_volumes_list_by_availability_zone"><skipped message="VolumesV2ListTestJSON skipped as Cinder is not available" type="skipped" /></testcase><testcase name="tempest.api.volume.test_volumes_get.VolumesV1GetTest.test_volume_create_get_update_delete_as_clone"><skipped message="VolumesV1GetTest skipped as Cinder is not available" type="skipped" /></testcase><testcase name="tempest.api.volume.admin.test_qos.QosSpecsV2TestJSON.test_associate_disassociate_qos"><skipped message="QosSpecsV2TestJSON skipped as Cinder is not available" type="skipped" /></testcase><testcase name="tempest.api.volume.admin.test_volume_types_extra_specs_negative.ExtraSpecsNegativeV1Test.test_list_nonexistent_volume_type_id"><skipped message="ExtraSpecsNegativeV1Test skipped as Cinder is not available" type="skipped" /></testcase><testcase name="tempest.api.baremetal.admin.test_nodes.TestNodes.test_node_port_list"><skipped message="TestNodes skipped as Ironic is not available" type="skipped" /></testcase><testcase name="tempest.api.volume.admin.test_volume_types_extra_specs_negative.ExtraSpecsNegativeV2Test.test_create_nonexistent_type_id"><skipped message="ExtraSpecsNegativeV2Test skipped as Cinder is not available" type="skipped" /></testcase><testcase name="tempest.api.orchestration.stacks.test_neutron_resources.NeutronResourcesTestJSON.test_created_server"><skipped message="Skipped until Bug: 1547261 is resolved." type="skipped" /></testcase><testcase name="tempest.api.volume.admin.test_volume_snapshot_quotas_negative.VolumeSnapshotNegativeV1TestJSON.test_quota_volume_gigabytes_snapshots"><skipped message="VolumeSnapshotNegativeV1TestJSON skipped as Cinder is not available" type="skipped" /></testcase><testcase name="tempest.api.volume.admin.test_volume_quotas_negative.VolumeQuotasNegativeV1TestJSON.test_quota_volumes"><skipped message="VolumeQuotasNegativeV1TestJSON skipped as Cinder is not available" type="skipped" /></testcase><testcase name="tempest.api.object_storage.test_healthcheck.HealthcheckTest.test_get_healthcheck"><skipped message="HealthcheckTest skipped as swift is not available" type="skipped" /></testcase><testcase name="tempest.api.volume.test_snapshot_metadata.SnapshotV1MetadataTestJSON.test_update_snapshot_metadata"><skipped message="SnapshotV1MetadataTestJSON skipped as Cinder is not available" type="skipped" /></testcase><testcase name="tempest.api.data_processing.test_data_sources.DataSourceTest.test_external_hdfs_data_source_list"><skipped message="Sahara support is required" type="skipped" /></testcase><testcase name="tempest.api.object_storage.test_account_services.AccountTest.test_list_containers_with_limit_and_end_marker"><skipped message="AccountTest skipped as swift is not available" type="skipped" /></testcase><testcase name="tempest.api.baremetal.admin.test_ports_negative.TestPortsNegative.test_update_port_replace_node_id_with_malformed"><skipped message="TestPortsNegative skipped as Ironic is not available" type="skipped" /></testcase><testcase name="tempest.api.baremetal.admin.test_chassis.TestChassis.test_chassis_node_list"><skipped message="TestChassis skipped as Ironic is not available" type="skipped" /></testcase><testcase name="tempest.api.volume.test_volumes_list.VolumesV2ListTestJSON.test_volumes_list_details_by_status"><skipped message="VolumesV2ListTestJSON skipped as Cinder is not available" type="skipped" /></testcase><testcase name="tempest.api.network.test_service_type_management.ServiceTypeManagementTestJSON.test_service_provider_list"><skipped message="Skipped until Bug: 1400370 is resolved." type="skipped" /></testcase><testcase name="tempest.api.baremetal.admin.test_nodes.TestNodes.test_set_node_boot_device"><skipped message="TestNodes skipped as Ironic is not available" type="skipped" /></testcase><testcase name="tempest.api.volume.admin.test_snapshots_actions.SnapshotsActionsV1Test.test_snapshot_force_delete_when_snapshot_is_creating"><skipped message="SnapshotsActionsV1Test skipped as Cinder is not available" type="skipped" /></testcase><testcase name="tempest.api.volume.admin.test_volume_types.VolumeTypesV1Test.test_volume_type_encryption_create_get_delete"><skipped message="VolumeTypesV1Test skipped as Cinder is not available" type="skipped" /></testcase><testcase name="tempest.api.volume.test_volumes_negative.VolumesV1NegativeTest.test_volume_extend_with_None_size"><skipped message="VolumesV1NegativeTest skipped as Cinder is not available" type="skipped" /></testcase><testcase name="tempest.api.volume.admin.test_qos.QosSpecsV1TestJSON.test_set_unset_qos_key"><skipped message="QosSpecsV1TestJSON skipped as Cinder is not available" type="skipped" /></testcase><testcase name="tempest.api.compute.admin.test_fixed_ips_negative.FixedIPsNegativeTestJson.test_list_fixed_ip_details_with_non_admin_user"><skipped message="FixedIPsNegativeTestJson skipped as neutron is available" type="skipped" /></testcase><testcase name="tempest.api.volume.test_snapshot_metadata.SnapshotV2MetadataTestJSON.test_create_get_delete_snapshot_metadata"><skipped message="SnapshotV2MetadataTestJSON skipped as Cinder is not available" type="skipped" /></testcase><testcase name="tempest.api.data_processing.test_job_binaries.JobBinaryTest.test_swift_job_binary_list"><skipped message="Sahara support is required" type="skipped" /></testcase><testcase name="tempest.api.object_storage.test_account_services.AccountTest.test_list_containers_with_limit_and_marker"><skipped message="AccountTest skipped as swift is not available" type="skipped" /></testcase><testcase name="tempest.api.compute.test_networks.ComputeNetworksTest.test_list_networks"><skipped message="nova-network is not available." type="skipped" /></testcase><testcase name="tempest.api.volume.test_volumes_negative.VolumesV2NegativeTest.test_create_volume_with_size_negative"><skipped message="VolumesV2NegativeTest skipped as Cinder is not available" type="skipped" /></testcase><testcase name="tempest.api.baremetal.admin.test_nodes.TestNodes.test_create_node"><skipped message="TestNodes skipped as Ironic is not available" type="skipped" /></testcase><testcase name="tempest.api.volume.admin.test_volume_hosts.VolumeHostsAdminV1TestsJSON.test_list_hosts"><skipped message="VolumeHostsAdminV1TestsJSON skipped as Cinder is not available" type="skipped" /></testcase><testcase name="tempest.api.object_storage.test_container_services.ContainerTest.test_update_container_metadata_with_create_metadata_key"><skipped message="ContainerTest skipped as swift is not available" type="skipped" /></testcase><testcase name="tempest.api.object_storage.test_account_services.AccountTest.test_update_account_metadata_with_create_and_delete_metadata"><skipped message="AccountTest skipped as swift is not available" type="skipped" /></testcase><testcase name="tempest.api.volume.admin.test_volume_quotas.VolumeQuotasAdminV1TestJSON.test_show_quota_usage"><skipped message="VolumeQuotasAdminV1TestJSON skipped as Cinder is not available" type="skipped" /></testcase><testcase name="tempest.api.baremetal.admin.test_ports_negative.TestPortsNegative.test_update_port_malformed_port_uuid"><skipped message="TestPortsNegative skipped as Ironic is not available" type="skipped" /></testcase><testcase name="tempest.api.object_storage.test_container_acl_negative.ObjectACLsNegativeTest.test_write_object_without_using_creds"><skipped message="ObjectACLsNegativeTest skipped as swift is not available" type="skipped" /></testcase><testcase name="tempest.api.volume.test_volumes_snapshots_list.VolumesV2SnapshotListTestJSON.test_snapshots_list_details_with_params"><skipped message="VolumesV2SnapshotListTestJSON skipped as Cinder is not available" type="skipped" /></testcase><testcase name="tempest.api.object_storage.test_object_services.ObjectTest.test_copy_object_with_x_fresh_metadata"><skipped message="ObjectTest skipped as swift is not available" type="skipped" /></testcase><testcase name="tempest.api.object_storage.test_account_bulk.BulkTest.test_extract_archive"><skipped message="BulkTest skipped as swift is not available" type="skipped" /></testcase><testcase name="tempest.api.baremetal.admin.test_ports.TestPorts.test_list_ports_details_with_address"><skipped message="TestPorts skipped as Ironic is not available" type="skipped" /></testcase><testcase name="tempest.api.volume.admin.test_volume_types.VolumeTypesV2Test.test_volume_type_list"><skipped message="VolumeTypesV2Test skipped as Cinder is not available" type="skipped" /></testcase><testcase name="tempest.api.object_storage.test_container_services.ContainerTest.test_list_container_contents"><skipped message="ContainerTest skipped as swift is not available" type="skipped" /></testcase><testcase name="tempest.api.volume.test_snapshot_metadata.SnapshotV1MetadataTestJSON.test_create_get_delete_snapshot_metadata"><skipped message="SnapshotV1MetadataTestJSON skipped as Cinder is not available" type="skipped" /></testcase><testcase name="tempest.api.volume.test_volumes_get.VolumesV2GetTest.test_volume_create_get_update_delete_from_image"><skipped message="VolumesV2GetTest skipped as Cinder is not available" type="skipped" /></testcase><testcase name="tempest.api.object_storage.test_object_services.ObjectTest.test_get_object_with_metadata"><skipped message="ObjectTest skipped as swift is not available" type="skipped" /></testcase><testcase name="tempest.api.baremetal.admin.test_drivers.TestDrivers.test_show_driver"><skipped message="TestDrivers skipped as Ironic is not available" type="skipped" /></testcase><testcase name="tempest.api.baremetal.admin.test_nodes.TestNodes.test_list_nodes"><skipped message="TestNodes skipped as Ironic is not available" type="skipped" /></testcase><testcase name="tempest.api.data_processing.test_data_sources.DataSourceTest.test_external_hdfs_data_source_delete"><skipped message="Sahara support is required" type="skipped" /></testcase><testcase name="tempest.scenario.test_server_advanced_ops.TestServerAdvancedOps.test_resize_volume_backed_server_confirm"><skipped message="Skipped because the volume service is not available" type="skipped" /></testcase><testcase name="tempest.api.volume.test_volumes_negative.VolumesV1NegativeTest.test_create_volume_with_invalid_size"><skipped message="VolumesV1NegativeTest skipped as Cinder is not available" type="skipped" /></testcase><testcase name="tempest.api.volume.test_volume_metadata.VolumesV1MetadataTest.test_update_volume_metadata_item"><skipped message="VolumesV1MetadataTest skipped as Cinder is not available" type="skipped" /></testcase><testcase name="tempest.api.compute.volumes.test_volumes_list.VolumesTestJSON.test_volume_list_param_limit"><skipped message="VolumesTestJSON skipped as Cinder is not available" type="skipped" /></testcase><testcase name="tempest.api.volume.test_volumes_negative.VolumesV1NegativeTest.test_reserve_volume_with_nonexistent_volume_id"><skipped message="VolumesV1NegativeTest skipped as Cinder is not available" type="skipped" /></testcase><testcase name="tempest.api.volume.admin.test_volume_types_extra_specs.VolumeTypesExtraSpecsV1Test.test_volume_type_extra_spec_create_get_delete"><skipped message="VolumeTypesExtraSpecsV1Test skipped as Cinder is not available" type="skipped" /></testcase><testcase name="tempest.api.compute.security_groups.test_security_groups_negative.SecurityGroupsNegativeTestJSON.test_update_security_group_with_invalid_sg_name"><skipped message="Neutron does not check the security group name" type="skipped" /></testcase><testcase name="tempest.api.compute.volumes.test_attach_volume.AttachVolumeShelveTestJSON.test_list_get_volume_attachments"><skipped message="The microversion range[2.20 - latest] of this test is out of the configuration range[None - None]." type="skipped" /></testcase><testcase name="tempest.scenario.test_encrypted_cinder_volumes.TestEncryptedCinderVolumes.test_encrypted_cinder_volumes_luks"><skipped message="Encrypted volume attach is not supported" type="skipped" /></testcase><testcase name="tempest.api.volume.test_volumes_snapshots.VolumesV2SnapshotTestJSON.test_volume_from_snapshot"><skipped message="VolumesV2SnapshotTestJSON skipped as Cinder is not available" type="skipped" /></testcase><testcase name="tempest.api.baremetal.admin.test_ports.TestPorts.test_update_port_replace"><skipped message="TestPorts skipped as Ironic is not available" type="skipped" /></testcase><testcase name="tempest.api.baremetal.admin.test_ports.TestPorts.test_update_port_mixed_ops"><skipped message="TestPorts skipped as Ironic is not available" type="skipped" /></testcase><testcase name="tempest.api.volume.test_volumes_negative.VolumesV1NegativeTest.test_create_volume_with_out_passing_size"><skipped message="VolumesV1NegativeTest skipped as Cinder is not available" type="skipped" /></testcase><testcase name="tempest.api.volume.admin.test_volume_types.VolumeTypesV1Test.test_volume_type_list"><skipped message="VolumeTypesV1Test skipped as Cinder is not available" type="skipped" /></testcase><testcase name="tempest.api.volume.test_volumes_actions.VolumesV2ActionsTest.test_volume_readonly_update"><skipped message="VolumesV2ActionsTest skipped as Cinder is not available" type="skipped" /></testcase><testcase name="tempest.api.volume.test_volumes_negative.VolumesV2NegativeTest.test_create_volume_with_out_passing_size"><skipped message="VolumesV2NegativeTest skipped as Cinder is not available" type="skipped" /></testcase><testcase name="tempest.api.volume.test_volumes_negative.VolumesV2NegativeTest.test_create_volume_with_invalid_size"><skipped message="VolumesV2NegativeTest skipped as Cinder is not available" type="skipped" /></testcase><testcase name="tempest.api.volume.test_volume_transfers.VolumesV2TransfersTest.test_create_list_delete_volume_transfer"><skipped message="VolumesV2TransfersTest skipped as Cinder is not available" type="skipped" /></testcase><testcase name="tempest.api.volume.test_volumes_list.VolumesV1ListTestJSON.test_volumes_list_by_status"><skipped message="VolumesV1ListTestJSON skipped as Cinder is not available" type="skipped" /></testcase><testcase name="tempest.api.volume.test_volumes_snapshots_list.VolumesV2SnapshotListTestJSON.test_snapshots_list_with_params"><skipped message="VolumesV2SnapshotListTestJSON skipped as Cinder is not available" type="skipped" /></testcase><testcase name="tempest.api.object_storage.test_account_services.AccountTest.test_list_no_containers"><skipped message="AccountTest skipped as swift is not available" type="skipped" /></testcase><testcase name="tempest.api.object_storage.test_object_temp_url.ObjectTempUrlTest.test_get_object_using_temp_url"><skipped message="ObjectTempUrlTest skipped as swift is not available" type="skipped" /></testcase><testcase name="tempest.api.object_storage.test_object_services.ObjectTest.test_copy_object_with_x_object_metakey"><skipped message="ObjectTest skipped as swift is not available" type="skipped" /></testcase><testcase name="tempest.api.volume.test_volumes_list.VolumesV1ListTestJSON.test_volumes_list_by_availability_zone"><skipped message="VolumesV1ListTestJSON skipped as Cinder is not available" type="skipped" /></testcase><testcase name="tempest.api.data_processing.test_node_group_templates.NodeGroupTemplateTest.test_node_group_template_get"><skipped message="Sahara support is required" type="skipped" /></testcase><testcase name="tempest.api.orchestration.stacks.test_neutron_resources.NeutronResourcesTestJSON.test_created_router"><skipped message="Skipped until Bug: 1547261 is resolved." type="skipped" /></testcase><testcase name="tempest.api.volume.test_volumes_snapshots.VolumesV2SnapshotTestJSON.test_snapshot_create_get_list_update_delete"><skipped message="VolumesV2SnapshotTestJSON skipped as Cinder is not available" type="skipped" /></testcase><testcase name="tempest.api.data_processing.test_data_sources.DataSourceTest.test_local_hdfs_data_source_create"><skipped message="Sahara support is required" type="skipped" /></testcase><testcase name="tempest.api.volume.admin.test_qos.QosSpecsV1TestJSON.test_create_delete_qos_with_both_consumer"><skipped message="QosSpecsV1TestJSON skipped as Cinder is not available" type="skipped" /></testcase><testcase name="tempest.api.compute.security_groups.test_security_groups_negative.SecurityGroupsNegativeTestJSON.test_security_group_create_with_duplicate_name"><skipped message="Neutron allows duplicate names for security groups" type="skipped" /></testcase><testcase name="tempest.api.volume.test_volumes_snapshots_list.VolumesV2SnapshotListTestJSON.test_snapshot_list_param_limit_equals_infinite"><skipped message="VolumesV2SnapshotListTestJSON skipped as Cinder is not available" type="skipped" /></testcase><testcase name="tempest.scenario.test_object_storage_basic_ops.TestObjectStorageBasicOps.test_swift_acl_anonymous_download"><skipped message="TestObjectStorageBasicOps skipped as swift is not available" type="skipped" /></testcase><testcase name="tempest.scenario.test_network_basic_ops.TestNetworkBasicOps.test_subnet_details"><skipped message="Either project_networks_reachable must be &quot;true&quot;, or public_network_id must be defined." type="skipped" /></testcase><testcase name="tempest.api.volume.admin.test_volume_quotas_negative.VolumeQuotasNegativeV1TestJSON.test_quota_volume_gigabytes"><skipped message="VolumeQuotasNegativeV1TestJSON skipped as Cinder is not available" type="skipped" /></testcase><testcase name="tempest.api.volume.admin.test_volume_types_extra_specs_negative.ExtraSpecsNegativeV2Test.test_get_nonexistent_volume_type_id"><skipped message="ExtraSpecsNegativeV2Test skipped as Cinder is not available" type="skipped" /></testcase><testcase name="tempest.api.volume.test_volume_transfers.VolumesV2TransfersTest.test_create_get_list_accept_volume_transfer"><skipped message="VolumesV2TransfersTest skipped as Cinder is not available" type="skipped" /></testcase><testcase name="tempest.api.network.test_networks.NetworksTest.test_external_network_visibility"><skipped message="The public_network_id option must be specified." type="skipped" /></testcase><testcase name="tempest.api.baremetal.admin.test_nodes.TestNodes.test_delete_node"><skipped message="TestNodes skipped as Ironic is not available" type="skipped" /></testcase><testcase name="tempest.api.volume.test_volumes_negative.VolumesV2NegativeTest.test_volume_extend_with_None_size"><skipped message="VolumesV2NegativeTest skipped as Cinder is not available" type="skipped" /></testcase><testcase name="tempest.api.volume.test_volumes_extend.VolumesV1ExtendTest.test_volume_extend"><skipped message="VolumesV1ExtendTest skipped as Cinder is not available" type="skipped" /></testcase><testcase name="tempest.api.object_storage.test_container_acl_negative.ObjectACLsNegativeTest.test_write_object_with_non_authorized_user"><skipped message="ObjectACLsNegativeTest skipped as swift is not available" type="skipped" /></testcase><testcase name="tempest.api.object_storage.test_container_services.ContainerTest.test_delete_container"><skipped message="ContainerTest skipped as swift is not available" type="skipped" /></testcase><testcase name="tempest.api.object_storage.test_container_services.ContainerTest.test_update_container_metadata_with_create_and_delete_metadata"><skipped message="ContainerTest skipped as swift is not available" type="skipped" /></testcase><testcase name="tempest.api.data_processing.test_job_binary_internals.JobBinaryInternalTest.test_job_binary_internal_delete"><skipped message="Sahara support is required" type="skipped" /></testcase><testcase name="tempest.api.volume.test_volumes_negative.VolumesV2NegativeTest.test_get_invalid_volume_id"><skipped message="VolumesV2NegativeTest skipped as Cinder is not available" type="skipped" /></testcase><testcase name="tempest.api.baremetal.admin.test_nodes.TestNodes.test_get_node_by_instance_uuid"><skipped message="TestNodes skipped as Ironic is not available" type="skipped" /></testcase><testcase name="tempest.api.object_storage.test_container_services.ContainerTest.test_create_container_with_metadata_value"><skipped message="ContainerTest skipped as swift is not available" type="skipped" /></testcase><testcase name="tempest.api.network.test_metering_extensions.MeteringTestJSON.test_list_metering_label_rules"><skipped message="metering extension not enabled." type="skipped" /></testcase><testcase name="tempest.api.compute.admin.test_live_migration.LiveBlockMigrationTestJSON.test_iscsi_volume"><skipped message="LiveBlockMigrationTestJSON skipped as live-migration is not available" type="skipped" /></testcase><testcase name="tempest.api.volume.test_volumes_list.VolumesV2ListTestJSON.test_volume_list_with_detail_param_display_name_and_status"><skipped message="VolumesV2ListTestJSON skipped as Cinder is not available" type="skipped" /></testcase><testcase name="tempest.api.object_storage.test_object_services.ObjectTest.test_create_object_with_x_object_meta"><skipped message="ObjectTest skipped as swift is not available" type="skipped" /></testcase><testcase name="tempest.api.volume.admin.test_volume_types_negative.VolumeTypesNegativeV2Test.test_delete_nonexistent_type_id"><skipped message="VolumeTypesNegativeV2Test skipped as Cinder is not available" type="skipped" /></testcase><testcase name="tempest.api.network.test_metering_extensions.MeteringIpV6TestJSON.test_list_metering_labels"><skipped message="metering extension not enabled." type="skipped" /></testcase><testcase name="tempest.api.volume.test_volumes_negative.VolumesV1NegativeTest.test_update_volume_with_empty_volume_id"><skipped message="VolumesV1NegativeTest skipped as Cinder is not available" type="skipped" /></testcase><testcase name="tempest.api.baremetal.admin.test_ports.TestPorts.test_show_port_by_address"><skipped message="TestPorts skipped as Ironic is not available" type="skipped" /></testcase><testcase name="tempest.api.volume.test_volumes_list.VolumesV1ListTestJSON.test_volume_list_with_details"><skipped message="VolumesV1ListTestJSON skipped as Cinder is not available" type="skipped" /></testcase><testcase name="tempest.api.volume.admin.test_volumes_backup.VolumesBackupsAdminV1Test.test_volume_backup_reset_status"><skipped message="VolumesBackupsAdminV1Test skipped as Cinder is not available" type="skipped" /></testcase><testcase name="tempest.api.volume.admin.test_volumes_actions.VolumesActionsV2Test.test_volume_force_delete_when_volume_is_attaching"><skipped message="VolumesActionsV2Test skipped as Cinder is not available" type="skipped" /></testcase><testcase name="tempest.api.network.test_metering_extensions.MeteringIpV6TestJSON.test_show_metering_label_rule"><skipped message="metering extension not enabled." type="skipped" /></testcase><testcase name="tempest.api.volume.admin.test_volume_services.VolumesServicesV2TestJSON.test_get_service_by_host_name"><skipped message="VolumesServicesV2TestJSON skipped as Cinder is not available" type="skipped" /></testcase><testcase name="tempest.api.object_storage.test_account_services.AccountTest.test_update_account_metadata_with_create_matadata_key"><skipped message="AccountTest skipped as swift is not available" type="skipped" /></testcase><testcase name="tempest.api.baremetal.admin.test_nodes.TestNodes.test_update_node"><skipped message="TestNodes skipped as Ironic is not available" type="skipped" /></testcase><testcase name="tempest.api.object_storage.test_object_slo.ObjectSloTest.test_retrieve_large_object"><skipped message="ObjectSloTest skipped as swift is not available" type="skipped" /></testcase><testcase name="tempest.api.volume.test_volumes_snapshots.VolumesV2SnapshotTestJSON.test_snapshot_create_with_volume_in_use"><skipped message="VolumesV2SnapshotTestJSON skipped as Cinder is not available" type="skipped" /></testcase><testcase name="tempest.api.volume.admin.test_volume_quotas.BaseVolumeQuotasAdminV2TestJSON.test_update_all_quota_resources_for_tenant"><skipped message="BaseVolumeQuotasAdminV2TestJSON skipped as Cinder is not available" type="skipped" /></testcase><testcase name="tempest.api.compute.volumes.test_attach_volume.AttachVolumeShelveTestJSON.test_detach_volume_shelved_or_offload_server"><skipped message="The microversion range[2.20 - latest] of this test is out of the configuration range[None - None]." type="skipped" /></testcase><testcase name="tempest.api.compute.servers.test_server_personality.ServerPersonalityTestJSON.test_can_create_server_with_max_number_personality_files"><skipped message="Nova personality feature disabled" type="skipped" /></testcase><testcase name="tempest.scenario.test_network_v6.TestGettingAddress.test_slaac_from_os"><skipped message="Either project_networks_reachable must be &quot;true&quot;, or public_network_id must be defined." type="skipped" /></testcase><testcase name="tempest.api.volume.admin.test_volume_types_extra_specs_negative.ExtraSpecsNegativeV1Test.test_create_nonexistent_type_id"><skipped message="ExtraSpecsNegativeV1Test skipped as Cinder is not available" type="skipped" /></testcase><testcase name="tempest.api.compute.admin.test_fixed_ips_negative.FixedIPsNegativeTestJson.test_set_reserve_with_invalid_ip"><skipped message="FixedIPsNegativeTestJson skipped as neutron is available" type="skipped" /></testcase><testcase name="tempest.api.volume.test_volumes_list.VolumesV1ListTestJSON.test_volume_list_with_detail_param_metadata"><skipped message="VolumesV1ListTestJSON skipped as Cinder is not available" type="skipped" /></testcase><testcase name="tempest.api.object_storage.test_account_services.AccountTest.test_list_containers_with_end_marker"><skipped message="AccountTest skipped as swift is not available" type="skipped" /></testcase><testcase name="tempest.api.volume.admin.test_volume_types_extra_specs.VolumeTypesExtraSpecsV1Test.test_volume_type_extra_specs_list"><skipped message="VolumeTypesExtraSpecsV1Test skipped as Cinder is not available" type="skipped" /></testcase><testcase name="tempest.scenario.test_network_v6.TestGettingAddress.test_dualnet_slaac_from_os"><skipped message="Either project_networks_reachable must be &quot;true&quot;, or public_network_id must be defined." type="skipped" /></testcase><testcase name="tempest.api.object_storage.test_account_services.AccountTest.test_list_account_metadata"><skipped message="AccountTest skipped as swift is not available" type="skipped" /></testcase><testcase name="tempest.api.volume.test_extensions.ExtensionsV2TestJSON.test_list_extensions"><skipped message="ExtensionsV2TestJSON skipped as Cinder is not available" type="skipped" /></testcase><testcase name="tempest.api.volume.admin.test_volume_services.VolumesServicesV2TestJSON.test_list_services"><skipped message="VolumesServicesV2TestJSON skipped as Cinder is not available" type="skipped" /></testcase><testcase name="tempest.api.compute.admin.test_fixed_ips.FixedIPsTestJson.test_set_reserve"><skipped message="FixedIPsTestJson skipped as neutron is available" type="skipped" /></testcase><testcase name="tempest.api.network.test_metering_extensions.MeteringIpV6TestJSON.test_list_metering_label_rules"><skipped message="metering extension not enabled." type="skipped" /></testcase><testcase name="tempest.api.volume.admin.test_volume_types_extra_specs_negative.ExtraSpecsNegativeV2Test.test_create_invalid_body"><skipped message="ExtraSpecsNegativeV2Test skipped as Cinder is not available" type="skipped" /></testcase><testcase name="tempest.api.volume.test_volumes_clone_negative.VolumesCloneTest.test_create_from_volume_decreasing_size"><skipped message="VolumesCloneTest skipped as Cinder is not available" type="skipped" /></testcase><testcase name="tempest.api.volume.test_volumes_negative.VolumesV2NegativeTest.test_create_volume_with_nonexistent_source_volid"><skipped message="VolumesV2NegativeTest skipped as Cinder is not available" type="skipped" /></testcase><testcase name="tempest.api.volume.test_volumes_list.VolumesV1ListTestJSON.test_volumes_list_details_by_status"><skipped message="VolumesV1ListTestJSON skipped as Cinder is not available" type="skipped" /></testcase><testcase name="tempest.api.object_storage.test_object_expiry.ObjectExpiryTest.test_get_object_after_expiry_time"><skipped message="ObjectExpiryTest skipped as swift is not available" type="skipped" /></testcase><testcase name="tempest.api.volume.admin.test_multi_backend.VolumeMultiBackendV2Test.test_backend_name_reporting"><skipped message="VolumeMultiBackendV2Test skipped as Cinder is not available" type="skipped" /></testcase><testcase name="tempest.api.volume.test_volumes_snapshots_negative.VolumesV1SnapshotNegativeTestJSON.test_create_snapshot_with_nonexistent_volume_id"><skipped message="VolumesV1SnapshotNegativeTestJSON skipped as Cinder is not available" type="skipped" /></testcase><testcase name="tempest.api.object_storage.test_object_services.ObjectTest.test_create_object_with_content_disposition"><skipped message="ObjectTest skipped as swift is not available" type="skipped" /></testcase><testcase name="tempest.api.volume.test_volumes_snapshots_list.VolumesV1SnapshotLimitTestJSON.test_snapshot_list_param_limit_equals_zero"><skipped message="VolumesV1SnapshotLimitTestJSON skipped as Cinder is not available" type="skipped" /></testcase><testcase name="tempest.api.object_storage.test_container_services.ContainerTest.test_list_container_contents_with_prefix"><skipped message="ContainerTest skipped as swift is not available" type="skipped" /></testcase><testcase name="tempest.api.compute.security_groups.test_security_groups_negative.SecurityGroupsNegativeTestJSON.test_security_group_create_with_invalid_group_description"><skipped message="Skipped until Bug: 1161411 is resolved." type="skipped" /></testcase><testcase name="tempest.api.object_storage.test_object_services.ObjectTest.test_update_object_metadata_with_x_object_metakey"><skipped message="ObjectTest skipped as swift is not available" type="skipped" /></testcase><testcase name="tempest.api.volume.test_volumes_actions.VolumesV1ActionsTest.test_reserve_unreserve_volume"><skipped message="VolumesV1ActionsTest skipped as Cinder is not available" type="skipped" /></testcase><testcase name="tempest.api.volume.admin.test_volume_quotas.BaseVolumeQuotasAdminV2TestJSON.test_list_quotas"><skipped message="BaseVolumeQuotasAdminV2TestJSON skipped as Cinder is not available" type="skipped" /></testcase><testcase name="tempest.api.data_processing.test_job_binaries.JobBinaryTest.test_swift_job_binary_get"><skipped message="Sahara support is required" type="skipped" /></testcase><testcase name="tempest.api.baremetal.admin.test_api_discovery.TestApiDiscovery.test_default_version"><skipped message="TestApiDiscovery skipped as Ironic is not available" type="skipped" /></testcase><testcase name="tempest.api.volume.admin.test_volumes_actions.VolumesActionsV2Test.test_volume_force_delete_when_volume_is_creating"><skipped message="VolumesActionsV2Test skipped as Cinder is not available" type="skipped" /></testcase><testcase name="tempest.api.baremetal.admin.test_chassis.TestChassis.test_delete_chassis"><skipped message="TestChassis skipped as Ironic is not available" type="skipped" /></testcase><testcase name="tempest.api.object_storage.test_object_formpost_negative.ObjectFormPostNegativeTest.test_post_object_using_form_invalid_signature"><skipped message="ObjectFormPostNegativeTest skipped as swift is not available" type="skipped" /></testcase><testcase name="tempest.api.baremetal.admin.test_api_discovery.TestApiDiscovery.test_api_versions"><skipped message="TestApiDiscovery skipped as Ironic is not available" type="skipped" /></testcase><testcase name="tempest.api.object_storage.test_object_services.ObjectTest.test_create_object"><skipped message="ObjectTest skipped as swift is not available" type="skipped" /></testcase><testcase name="tempest.api.baremetal.admin.test_ports_negative.TestPortsNegative.test_create_port_malformed_node_id"><skipped message="TestPortsNegative skipped as Ironic is not available" type="skipped" /></testcase><testcase name="tempest.api.object_storage.test_object_services.ObjectTest.test_object_upload_in_segments"><skipped message="ObjectTest skipped as swift is not available" type="skipped" /></testcase><testcase name="tempest.api.object_storage.test_object_services.ObjectTest.test_update_object_metadata_with_x_remove_object_metakey"><skipped message="ObjectTest skipped as swift is not available" type="skipped" /></testcase><testcase name="tempest.api.volume.test_volumes_negative.VolumesV2NegativeTest.test_volume_extend_without_passing_volume_id"><skipped message="VolumesV2NegativeTest skipped as Cinder is not available" type="skipped" /></testcase><testcase name="tempest.api.baremetal.admin.test_ports_negative.TestPortsNegative.test_show_port_nonexistent_uuid"><skipped message="TestPortsNegative skipped as Ironic is not available" type="skipped" /></testcase><testcase name="tempest.api.object_storage.test_container_services.ContainerTest.test_list_container_contents_with_marker"><skipped message="ContainerTest skipped as swift is not available" type="skipped" /></testcase><testcase name="tempest.api.baremetal.admin.test_ports_negative.TestPortsNegative.test_update_port_mixed_ops_integrity"><skipped message="TestPortsNegative skipped as Ironic is not available" type="skipped" /></testcase><testcase name="tempest.api.compute.volumes.test_volumes_list.VolumesTestJSON.test_volume_list_param_offset_and_limit"><skipped message="VolumesTestJSON skipped as Cinder is not available" type="skipped" /></testcase><testcase name="tempest.api.baremetal.admin.test_ports_negative.TestPortsNegative.test_update_port_nonexistent"><skipped message="TestPortsNegative skipped as Ironic is not available" type="skipped" /></testcase><testcase name="tempest.api.compute.keypairs.test_keypairs_v22.KeyPairsV22TestJSON.test_get_keypair_detail"><skipped message="The microversion range[2.2 - latest] of this test is out of the configuration range[None - None]." type="skipped" /></testcase><testcase name="tempest.api.compute.volumes.test_volumes_negative.VolumesNegativeTest.test_delete_invalid_volume_id"><skipped message="VolumesNegativeTest skipped as Cinder is not available" type="skipped" /></testcase><testcase name="tempest.api.compute.servers.test_server_personality.ServerPersonalityTestJSON.test_rebuild_server_with_personality"><skipped message="Nova personality feature disabled" type="skipped" /></testcase><testcase name="tempest.api.volume.test_volume_metadata.VolumesV2MetadataTest.test_update_volume_metadata_item"><skipped message="VolumesV2MetadataTest skipped as Cinder is not available" type="skipped" /></testcase><testcase name="tempest.api.compute.certificates.test_certificates.CertificatesV2TestJSON.test_get_root_certificate"><skipped message="Nova cert is not available" type="skipped" /></testcase><testcase name="tempest.api.compute.admin.test_auto_allocate_network.AutoAllocateNetworkTest.test_server_create_no_allocate"><skipped message="The microversion range[2.37 - latest] of this test is out of the configuration range[None - None]." type="skipped" /></testcase><testcase name="tempest.api.object_storage.test_object_services.ObjectTest.test_get_object_with_if_unmodified_since"><skipped message="ObjectTest skipped as swift is not available" type="skipped" /></testcase><testcase name="tempest.api.volume.test_snapshot_metadata.SnapshotV1MetadataTestJSON.test_update_snapshot_metadata_item"><skipped message="SnapshotV1MetadataTestJSON skipped as Cinder is not available" type="skipped" /></testcase><testcase name="tempest.api.volume.test_volumes_negative.VolumesV2NegativeTest.test_volume_delete_nonexistent_volume_id"><skipped message="VolumesV2NegativeTest skipped as Cinder is not available" type="skipped" /></testcase><testcase name="tempest.scenario.test_network_basic_ops.TestNetworkBasicOps.test_hotplug_nic"><skipped message="Either project_networks_reachable must be &quot;true&quot;, or public_network_id must be defined." type="skipped" /></testcase><testcase name="tempest.api.object_storage.test_account_bulk.BulkTest.test_bulk_delete_by_POST"><skipped message="BulkTest skipped as swift is not available" type="skipped" /></testcase><testcase name="tempest.api.volume.test_volumes_list.VolumesV1ListTestJSON.test_volume_list_by_name"><skipped message="VolumesV1ListTestJSON skipped as Cinder is not available" type="skipped" /></testcase><testcase name="tempest.scenario.test_network_basic_ops.TestNetworkBasicOps.test_router_rescheduling"><skipped message="Either project_networks_reachable must be &quot;true&quot;, or public_network_id must be defined." type="skipped" /></testcase><testcase name="tempest.api.baremetal.admin.test_chassis.TestChassis.test_update_chassis"><skipped message="TestChassis skipped as Ironic is not available" type="skipped" /></testcase><testcase name="tempest.api.volume.admin.test_volume_quotas_negative.BaseVolumeQuotasNegativeV2TestJSON.test_quota_volume_gigabytes"><skipped message="BaseVolumeQuotasNegativeV2TestJSON skipped as Cinder is not available" type="skipped" /></testcase><testcase name="tempest.api.volume.admin.v2.test_volume_pools.VolumePoolsAdminV2TestsJSON.test_get_pools_with_details"><skipped message="VolumePoolsAdminV2TestsJSON skipped as Cinder is not available" type="skipped" /></testcase><testcase name="tempest.api.data_processing.test_jobs.JobTest.test_job_create"><skipped message="Sahara support is required" type="skipped" /></testcase><testcase name="tempest.api.volume.admin.test_volume_types.VolumeTypesV1Test.test_volume_type_update"><skipped message="VolumeTypesV1Test skipped as Cinder is not available" type="skipped" /></testcase><testcase name="tempest.api.object_storage.test_container_acl_negative.ObjectACLsNegativeTest.test_delete_object_without_write_rights"><skipped message="ObjectACLsNegativeTest skipped as swift is not available" type="skipped" /></testcase><testcase name="tempest.api.volume.admin.test_volume_quotas.VolumeQuotasAdminV1TestJSON.test_list_default_quotas"><skipped message="VolumeQuotasAdminV1TestJSON skipped as Cinder is not available" type="skipped" /></testcase><testcase name="tempest.api.object_storage.test_object_services.ObjectTest.test_update_object_metadata_with_remove_metadata"><skipped message="ObjectTest skipped as swift is not available" type="skipped" /></testcase><testcase name="tempest.api.volume.test_volumes_list.VolumesV2ListTestJSON.test_volume_list"><skipped message="VolumesV2ListTestJSON skipped as Cinder is not available" type="skipped" /></testcase><testcase name="tempest.api.object_storage.test_container_acl_negative.ObjectACLsNegativeTest.test_read_object_without_rights"><skipped message="ObjectACLsNegativeTest skipped as swift is not available" type="skipped" /></testcase><testcase name="tempest.api.object_storage.test_object_services.ObjectTest.test_get_object_with_if_match"><skipped message="ObjectTest skipped as swift is not available" type="skipped" /></testcase><testcase name="tempest.api.volume.admin.test_volume_snapshot_quotas_negative.VolumeSnapshotNegativeV1TestJSON.test_quota_volume_snapshots"><skipped message="VolumeSnapshotNegativeV1TestJSON skipped as Cinder is not available" type="skipped" /></testcase><testcase name="tempest.api.object_storage.test_object_services.ObjectTest.test_list_no_object_metadata"><skipped message="ObjectTest skipped as swift is not available" type="skipped" /></testcase><testcase name="tempest.api.baremetal.admin.test_drivers.TestDrivers.test_list_drivers"><skipped message="TestDrivers skipped as Ironic is not available" type="skipped" /></testcase><testcase name="tempest.api.compute.admin.test_auto_allocate_network.AutoAllocateNetworkTest.test_server_multi_create_auto_allocate"><skipped message="The microversion range[2.37 - latest] of this test is out of the configuration range[None - None]." type="skipped" /></testcase><testcase name="tempest.api.compute.admin.test_servers_on_multinodes.ServersOnMultiNodesTest.test_create_servers_on_different_hosts"><skipped message="Less than 2 compute nodes, skipping multi-nodes test." type="skipped" /></testcase><testcase name="tempest.api.volume.admin.test_volume_types_extra_specs_negative.ExtraSpecsNegativeV2Test.test_list_nonexistent_volume_type_id"><skipped message="ExtraSpecsNegativeV2Test skipped as Cinder is not available" type="skipped" /></testcase><testcase name="tempest.api.object_storage.test_account_quotas_negative.AccountQuotasNegativeTest.test_user_modify_quota"><skipped message="AccountQuotasNegativeTest skipped as swift is not available" type="skipped" /></testcase><testcase name="tempest.api.volume.admin.test_backends_capabilities.BackendsCapabilitiesAdminV2TestsJSON.test_compare_volume_stats_values"><skipped message="BackendsCapabilitiesAdminV2TestsJSON skipped as Cinder is not available" type="skipped" /></testcase><testcase name="tempest.api.volume.admin.test_snapshots_actions.SnapshotsActionsV2Test.test_snapshot_force_delete_when_snapshot_is_creating"><skipped message="SnapshotsActionsV2Test skipped as Cinder is not available" type="skipped" /></testcase><testcase name="tempest.api.object_storage.test_object_services.ObjectTest.test_copy_object_in_same_container"><skipped message="ObjectTest skipped as swift is not available" type="skipped" /></testcase><testcase name="tempest.api.volume.test_volumes_negative.VolumesV1NegativeTest.test_list_volumes_detail_with_nonexistent_name"><skipped message="VolumesV1NegativeTest skipped as Cinder is not available" type="skipped" /></testcase><testcase name="tempest.api.object_storage.test_object_services.ObjectTest.test_get_object_with_range"><skipped message="ObjectTest skipped as swift is not available" type="skipped" /></testcase><testcase name="tempest.api.volume.test_volumes_negative.VolumesV1NegativeTest.test_volume_extend_without_passing_volume_id"><skipped message="VolumesV1NegativeTest skipped as Cinder is not available" type="skipped" /></testcase><testcase name="tempest.api.object_storage.test_object_slo.ObjectSloTest.test_delete_large_object"><skipped message="ObjectSloTest skipped as swift is not available" type="skipped" /></testcase><testcase name="tempest.api.volume.test_volumes_negative.VolumesV2NegativeTest.test_list_volumes_with_nonexistent_name"><skipped message="VolumesV2NegativeTest skipped as Cinder is not available" type="skipped" /></testcase><testcase name="tempest.api.volume.test_volumes_snapshots_negative.VolumesV2SnapshotNegativeTestJSON.test_create_snapshot_without_passing_volume_id"><skipped message="VolumesV2SnapshotNegativeTestJSON skipped as Cinder is not available" type="skipped" /></testcase><testcase name="tempest.api.volume.admin.test_snapshots_actions.SnapshotsActionsV2Test.test_snapshot_force_delete_when_snapshot_is_error"><skipped message="SnapshotsActionsV2Test skipped as Cinder is not available" type="skipped" /></testcase><testcase name="tempest.api.volume.admin.v2.test_volumes_list.VolumesListAdminV2TestJSON.test_volume_list_param_tenant"><skipped message="VolumesListAdminV2TestJSON skipped as Cinder is not available" type="skipped" /></testcase><testcase name="tempest.api.data_processing.test_data_sources.DataSourceTest.test_local_hdfs_data_source_delete"><skipped message="Sahara support is required" type="skipped" /></testcase><testcase name="tempest.api.object_storage.test_container_services.ContainerTest.test_list_container_contents_with_path"><skipped message="ContainerTest skipped as swift is not available" type="skipped" /></testcase><testcase name="tempest.api.baremetal.admin.test_nodes.TestNodes.test_node_port_list_no_ports"><skipped message="TestNodes skipped as Ironic is not available" type="skipped" /></testcase><testcase name="tempest.api.volume.admin.test_volume_types_extra_specs_negative.ExtraSpecsNegativeV2Test.test_delete_nonexistent_volume_type_id"><skipped message="ExtraSpecsNegativeV2Test skipped as Cinder is not available" type="skipped" /></testcase><testcase name="tempest.api.volume.test_volumes_snapshots.VolumesV1SnapshotTestJSON.test_snapshot_create_get_list_update_delete"><skipped message="VolumesV1SnapshotTestJSON skipped as Cinder is not available" type="skipped" /></testcase><testcase name="tempest.api.volume.admin.test_snapshots_actions.SnapshotsActionsV2Test.test_reset_snapshot_status"><skipped message="SnapshotsActionsV2Test skipped as Cinder is not available" type="skipped" /></testcase><testcase name="tempest.api.data_processing.test_plugins.PluginsTest.test_plugin_list"><skipped message="Sahara support is required" type="skipped" /></testcase><testcase name="tempest.api.volume.test_volumes_negative.VolumesV2NegativeTest.test_update_volume_with_invalid_volume_id"><skipped message="VolumesV2NegativeTest skipped as Cinder is not available" type="skipped" /></testcase><testcase name="tempest.api.volume.admin.test_qos.QosSpecsV1TestJSON.test_list_qos"><skipped message="QosSpecsV1TestJSON skipped as Cinder is not available" type="skipped" /></testcase><testcase name="tempest.api.volume.test_volumes_negative.VolumesV1NegativeTest.test_volume_extend_with_non_number_size"><skipped message="VolumesV1NegativeTest skipped as Cinder is not available" type="skipped" /></testcase><testcase name="tempest.scenario.test_network_v6.TestGettingAddress.test_dualnet_multi_prefix_slaac"><skipped message="Either project_networks_reachable must be &quot;true&quot;, or public_network_id must be defined." type="skipped" /></testcase><testcase name="tempest.api.volume.test_volumes_negative.VolumesV2NegativeTest.test_update_volume_with_empty_volume_id"><skipped message="VolumesV2NegativeTest skipped as Cinder is not available" type="skipped" /></testcase><testcase name="tempest.api.volume.admin.test_volume_quotas.BaseVolumeQuotasAdminV2TestJSON.test_show_quota_usage"><skipped message="BaseVolumeQuotasAdminV2TestJSON skipped as Cinder is not available" type="skipped" /></testcase><testcase name="tempest.api.volume.test_volumes_backup.VolumesBackupsV1Test.test_volume_backup_create_get_detailed_list_restore_delete"><skipped message="VolumesBackupsV1Test skipped as Cinder is not available" type="skipped" /></testcase><testcase name="tempest.api.data_processing.test_data_sources.DataSourceTest.test_swift_data_source_delete"><skipped message="Sahara support is required" type="skipped" /></testcase><testcase name="tempest.api.volume.test_volume_transfers.VolumesV1TransfersTest.test_create_get_list_accept_volume_transfer"><skipped message="VolumesV1TransfersTest skipped as Cinder is not available" type="skipped" /></testcase><testcase name="tempest.api.compute.admin.test_security_group_default_rules.SecurityGroupDefaultRulesTest.test_create_security_group_default_rule_with_blank_cidr"><skipped message="Skip as this functionality is not yet implemented in Neutron. Related Bug#1311500" type="skipped" /></testcase><testcase name="tempest.api.object_storage.test_object_services.ObjectTest.test_delete_object"><skipped message="ObjectTest skipped as swift is not available" type="skipped" /></testcase><testcase name="tempest.api.baremetal.admin.test_ports_negative.TestPortsNegative.test_create_port_duplicated_mac"><skipped message="TestPortsNegative skipped as Ironic is not available" type="skipped" /></testcase><testcase name="tempest.scenario.test_network_advanced_server_ops.TestNetworkAdvancedServerOps.test_server_connectivity_resize"><skipped message="Either project_networks_reachable must be &quot;true&quot;, or public_network_id must be defined." type="skipped" /></testcase><testcase name="tempest.api.object_storage.test_container_acl.ObjectTestACLs.test_read_object_with_rights"><skipped message="ObjectTestACLs skipped as swift is not available" type="skipped" /></testcase><testcase name="tempest.api.object_storage.test_object_services.ObjectTest.test_copy_object_to_itself"><skipped message="ObjectTest skipped as swift is not available" type="skipped" /></testcase><testcase name="tempest.api.data_processing.test_data_sources.DataSourceTest.test_local_hdfs_data_source_list"><skipped message="Sahara support is required" type="skipped" /></testcase><testcase name="tempest.api.compute.volumes.test_volumes_list.VolumesTestJSON.test_volume_list"><skipped message="VolumesTestJSON skipped as Cinder is not available" type="skipped" /></testcase><testcase name="tempest.api.network.test_networks.NetworksIpV6Test.test_external_network_visibility"><skipped message="The public_network_id option must be specified." type="skipped" /></testcase><testcase name="tempest.api.compute.admin.test_security_group_default_rules.SecurityGroupDefaultRulesTest.test_create_delete_security_group_default_rules"><skipped message="Skip as this functionality is not yet implemented in Neutron. Related Bug#1311500" type="skipped" /></testcase><testcase name="tempest.scenario.test_security_groups_basic_ops.TestSecurityGroupsBasicOps.test_cross_tenant_traffic"><skipped message="Either project_networks_reachable must be &quot;true&quot;, or public_network_id must be defined." type="skipped" /></testcase><testcase name="tempest.api.volume.admin.test_qos.QosSpecsV2TestJSON.test_create_delete_qos_with_both_consumer"><skipped message="QosSpecsV2TestJSON skipped as Cinder is not available" type="skipped" /></testcase><testcase name="tempest.api.volume.test_availability_zone.AvailabilityZoneV2TestJSON.test_get_availability_zone_list"><skipped message="AvailabilityZoneV2TestJSON skipped as Cinder is not available" type="skipped" /></testcase><testcase name="tempest.api.volume.admin.test_volumes_actions.VolumesActionsV1Test.test_volume_force_delete_when_volume_is_error"><skipped message="VolumesActionsV1Test skipped as Cinder is not available" type="skipped" /></testcase><testcase name="tempest.scenario.test_security_groups_basic_ops.TestSecurityGroupsBasicOps.test_port_security_disable_security_group"><skipped message="Either project_networks_reachable must be &quot;true&quot;, or public_network_id must be defined." type="skipped" /></testcase><testcase name="tempest.api.compute.admin.test_quotas_negative.QuotasAdminNegativeTestJSON.test_security_groups_rules_exceed_limit"><skipped message="Skipped until Bug: 1186354 is resolved." type="skipped" /></testcase><testcase name="tempest.scenario.test_network_advanced_server_ops.TestNetworkAdvancedServerOps.test_server_connectivity_pause_unpause"><skipped message="Either project_networks_reachable must be &quot;true&quot;, or public_network_id must be defined." type="skipped" /></testcase><testcase name="tempest.api.object_storage.test_object_temp_url.ObjectTempUrlTest.test_put_object_using_temp_url"><skipped message="ObjectTempUrlTest skipped as swift is not available" type="skipped" /></testcase><testcase name="tempest.api.volume.admin.v2.test_volume_type_access.VolumeTypesAccessV2Test.test_volume_type_access_add"><skipped message="VolumeTypesAccessV2Test skipped as Cinder is not available" type="skipped" /></testcase><testcase name="tempest.scenario.test_network_basic_ops.TestNetworkBasicOps.test_update_instance_port_admin_state"><skipped message="Either project_networks_reachable must be &quot;true&quot;, or public_network_id must be defined." type="skipped" /></testcase><testcase name="tempest.api.compute.admin.test_fixed_ips_negative.FixedIPsNegativeTestJson.test_set_unreserve_with_non_admin_user"><skipped message="FixedIPsNegativeTestJson skipped as neutron is available" type="skipped" /></testcase><testcase name="tempest.api.volume.test_volumes_negative.VolumesV1NegativeTest.test_volume_extend_with_nonexistent_volume_id"><skipped message="VolumesV1NegativeTest skipped as Cinder is not available" type="skipped" /></testcase><testcase name="tempest.api.object_storage.test_object_services.ObjectTest.test_get_object_with_x_object_manifest"><skipped message="ObjectTest skipped as swift is not available" type="skipped" /></testcase><testcase name="tempest.api.compute.keypairs.test_keypairs_v22.KeyPairsV22TestJSON.test_keypairsv22_create_list_show_with_type"><skipped message="The microversion range[2.2 - latest] of this test is out of the configuration range[None - None]." type="skipped" /></testcase><testcase name="tempest.api.data_processing.test_job_binaries.JobBinaryTest.test_internal_db_job_binary_list"><skipped message="Sahara support is required" type="skipped" /></testcase><testcase name="tempest.api.baremetal.admin.test_ports_negative.TestPortsNegative.test_create_port_malformed_mac"><skipped message="TestPortsNegative skipped as Ironic is not available" type="skipped" /></testcase><testcase name="tempest.api.compute.admin.test_security_group_default_rules.SecurityGroupDefaultRulesTest.test_default_security_group_default_rule_show"><skipped message="Skip as this functionality is not yet implemented in Neutron. Related Bug#1311500" type="skipped" /></testcase><testcase name="tempest.api.baremetal.admin.test_ports_negative.TestPortsNegative.test_update_port_replace_node_id_with_nonexistent"><skipped message="TestPortsNegative skipped as Ironic is not available" type="skipped" /></testcase><testcase name="tempest.api.volume.test_volumes_snapshots_list.VolumesV2SnapshotListTestJSON.test_snapshot_list_param_limit"><skipped message="VolumesV2SnapshotListTestJSON skipped as Cinder is not available" type="skipped" /></testcase><testcase name="tempest.api.volume.admin.test_volume_types_negative.VolumeTypesNegativeV1Test.test_create_with_nonexistent_volume_type"><skipped message="VolumeTypesNegativeV1Test skipped as Cinder is not available" type="skipped" /></testcase><testcase name="tempest.api.object_storage.test_container_quotas.ContainerQuotasTest.test_upload_valid_object"><skipped message="ContainerQuotasTest skipped as swift is not available" type="skipped" /></testcase><testcase name="tempest.api.compute.admin.test_baremetal_nodes.BaremetalNodesAdminTestJSON.test_list_get_baremetal_nodes"><skipped message="BaremetalNodesAdminTestJSON skipped as Ironic is not available" type="skipped" /></testcase><testcase name="tempest.api.compute.servers.test_delete_server.DeleteServersTestJSON.test_delete_server_while_in_attached_volume"><skipped message="Skipped because the volume service is not available" type="skipped" /></testcase><testcase name="tempest.api.baremetal.admin.test_ports.TestPorts.test_list_ports"><skipped message="TestPorts skipped as Ironic is not available" type="skipped" /></testcase><testcase name="tempest.api.baremetal.admin.test_nodes.TestNodes.test_validate_driver_interface"><skipped message="TestNodes skipped as Ironic is not available" type="skipped" /></testcase><testcase name="tempest.api.network.test_routers.RoutersIpV6Test.test_update_router_admin_state" /><testcase name="tempest.api.compute.servers.test_server_metadata_negative.ServerMetadataNegativeTestJSON.test_update_metadata_with_blank_key" /><testcase name="tempest.api.compute.keypairs.test_keypairs.KeyPairsV2TestJSON.test_keypair_create_delete" /><testcase name="tempest.api.image.v2.test_images_metadefs_namespaces.MetadataNamespacesTest.test_basic_metadata_definition_namespaces" /><testcase name="tempest.api.compute.admin.test_migrations.MigrationsAdminTest.test_resize_server_revert_deleted_flavor" /><testcase name="tempest.api.network.test_networks.NetworksIpV6TestAttrs.test_create_update_delete_network_subnet" /><testcase name="tempest.api.identity.admin.v3.test_endpoints_negative.EndpointsNegativeTestJSON.test_update_with_enabled_True" /><testcase name="tempest.api.compute.flavors.test_flavors_negative.FlavorsListWithDetailsNegativeTestJSON.test_flavors_list_with_details_negative" /><testcase name="tempest.api.compute.servers.test_servers_negative.ServersNegativeTestJSON.test_suspend_non_existent_server" /><testcase name="tempest.api.identity.admin.v3.test_list_projects.ListProjectsTestJSON.test_list_projects_with_parent" /><testcase name="tempest.api.network.test_extra_dhcp_options.ExtraDHCPOptionsTestJSON.test_update_show_port_with_extra_dhcp_options" /><testcase name="tempest.api.network.test_routers.RoutersTest.test_update_router_unset_gateway" /><testcase name="tempest.api.identity.admin.v2.test_users_negative.UsersNegativeTestJSON.test_authentication_for_disabled_user" /><testcase name="tempest.api.network.test_networks.NetworksTest.test_show_subnet" /><testcase name="tempest.api.identity.admin.v3.test_credentials.CredentialsTestJSON.test_credentials_create_get_update_delete" /><testcase name="tempest.api.compute.flavors.test_flavors.FlavorsV2TestJSON.test_list_flavors_with_detail" /><testcase name="tempest.api.compute.security_groups.test_security_group_rules_negative.SecurityGroupRulesNegativeTestJSON.test_create_security_group_rule_with_invalid_to_port" /><testcase name="tempest.api.compute.servers.test_server_metadata.ServerMetadataTestJSON.test_set_server_metadata_item" /><testcase name="tempest.api.network.test_networks.NetworksIpV6TestAttrs.test_create_delete_subnet_without_gateway" /><testcase name="tempest.api.compute.images.test_images_negative.ImagesNegativeTestJSON.test_create_image_specify_uuid_37_characters_or_more" /><testcase name="tempest.api.compute.admin.test_services.ServicesAdminTestJSON.test_get_service_by_service_binary_name" /><testcase name="tempest.api.identity.admin.v2.test_users_negative.UsersNegativeTestJSON.test_authentication_with_invalid_username" /><testcase name="tempest.api.compute.servers.test_servers_negative.ServersNegativeTestJSON.test_restore_nonexistent_server_id" /><testcase name="tempest.api.compute.admin.test_quotas.QuotasAdminTestJSON.test_delete_quota" /><testcase name="tempest.api.network.test_networks.NetworksIpV6TestAttrs.test_create_delete_subnet_with_default_gw" /><testcase name="tempest.api.network.admin.test_dhcp_agent_scheduler.DHCPAgentSchedulersTestJSON.test_list_dhcp_agent_hosting_network" /><testcase name="tempest.api.image.v2.test_images.ListImagesTest.test_list_images_param_container_format" /><testcase name="tempest.api.compute.images.test_list_images.ListImagesTestJSON.test_list_images" /><testcase name="tempest.api.compute.security_groups.test_security_groups_negative.SecurityGroupsNegativeTestJSON.test_delete_the_default_security_group" /><testcase name="tempest.api.network.test_networks_negative.NetworksNegativeTestJSON.test_delete_non_existent_subnet" /><testcase name="tempest.api.network.test_routers_negative.RoutersNegativeTest.test_router_add_gateway_invalid_network_returns_404" /><testcase name="tempest.api.compute.admin.test_aggregates_negative.AggregatesAdminNegativeTestJSON.test_aggregate_get_details_as_user" /><testcase name="tempest.api.compute.servers.test_list_server_filters.ListServerFiltersTestJSON.test_list_servers_filter_by_zero_limit" /><testcase name="tempest.api.compute.admin.test_quotas.QuotasAdminTestJSON.test_get_default_quotas" /><testcase name="tempest.api.compute.admin.test_servers_negative.ServersAdminNegativeTestJSON.test_reset_state_server_nonexistent_server" /><testcase name="tempest.api.image.v1.test_image_members_negative.ImageMembersNegativeTest.test_add_member_with_non_existing_image" /><testcase name="tempest.api.compute.servers.test_server_metadata_negative.ServerMetadataNegativeTestJSON.test_set_metadata_non_existent_server" /><testcase name="tempest.api.compute.servers.test_servers_negative.ServersNegativeTestJSON.test_rebuild_non_existent_server" /><testcase name="tempest.api.compute.admin.test_flavors_extra_specs_negative.FlavorsExtraSpecsNegativeTestJSON.test_flavor_update_mismatch_key" /><testcase name="tempest.api.compute.admin.test_flavors_extra_specs.FlavorsExtraSpecsTestJSON.test_flavor_non_admin_get_specific_key" /><testcase name="tempest.api.identity.admin.v3.test_projects_negative.ProjectsNegativeTestJSON.test_list_projects_by_unauthorized_user" /><testcase name="tempest.api.compute.servers.test_servers_negative.ServersNegativeTestJSON.test_resume_non_existent_server" /><testcase name="tempest.api.compute.admin.test_flavors_access.FlavorsAccessTestJSON.test_flavor_access_add_remove" /><testcase name="tempest.api.identity.admin.v3.test_trusts.TrustsV3TestJSON.test_trust_expire_invalid" /><testcase name="tempest.api.compute.admin.test_simple_tenant_usage_negative.TenantUsagesNegativeTestJSON.test_get_usage_tenant_with_empty_tenant_id" /><testcase name="tempest.api.compute.servers.test_list_server_filters.ListServerFiltersTestJSON.test_list_servers_filtered_by_ip" /><testcase name="tempest.api.compute.servers.test_server_metadata.ServerMetadataTestJSON.test_set_server_metadata" /><testcase name="tempest.api.compute.admin.test_servers.ServersAdminTestJSON.test_rebuild_server_in_error_state" /><testcase name="tempest.api.compute.images.test_list_image_filters.ListImageFiltersTestJSON.test_list_images_filter_by_server_ref" /><testcase name="tempest.api.identity.admin.v3.test_list_users.UsersV3TestJSON.test_get_user" /><testcase name="tempest.api.compute.security_groups.test_security_groups.SecurityGroupsTestJSON.test_update_security_groups" /><testcase name="tempest.api.compute.servers.test_servers_negative.ServersNegativeTestJSON.test_create_with_invalid_image" /><testcase name="tempest.api.network.test_ports.PortsTestJSON.test_create_bulk_port" /><testcase name="tempest.api.compute.security_groups.test_security_group_rules_negative.SecurityGroupRulesNegativeTestJSON.test_create_security_group_rule_duplicate" /><testcase name="tempest.api.network.test_security_groups_negative.NegativeSecGroupTest.test_create_additional_default_security_group_fails" /><testcase name="tempest.api.compute.keypairs.test_keypairs_negative.KeyPairsNegativeTestJSON.test_create_keypair_with_empty_name_string" /><testcase name="tempest.api.identity.admin.v2.test_roles_negative.RolesNegativeTestJSON.test_remove_user_role_request_without_token" /><testcase name="tempest.api.compute.servers.test_servers_negative.ServersNegativeTestJSON.test_server_name_blank" /><testcase name="tempest.api.network.test_security_groups.SecGroupTest.test_list_security_groups" /><testcase name="tempest.api.compute.servers.test_server_metadata_negative.ServerMetadataNegativeTestJSON.test_list_server_metadata_non_existent_server" /><testcase name="tempest.api.identity.admin.v2.test_roles_negative.RolesNegativeTestJSON.test_delete_role_by_unauthorized_user" /><testcase name="tempest.api.compute.security_groups.test_security_group_rules.SecurityGroupRulesTestJSON.test_security_group_rules_delete_when_peer_group_deleted" /><testcase name="tempest.api.network.test_dhcp_ipv6.NetworksTestDHCPv6.test_dhcpv6_64_subnets" /><testcase name="tempest.api.compute.servers.test_servers.ServersTestJSON.test_create_specify_keypair" /><testcase name="tempest.api.network.test_networks.NetworksTest.test_create_delete_subnet_with_allocation_pools" /><testcase name="tempest.api.network.test_routers.RoutersTest.test_create_router_setting_project_id" /><testcase name="tempest.api.compute.servers.test_multiple_create_negative.MultipleCreateNegativeTestJSON.test_max_count_less_than_one" /><testcase name="tempest.api.network.test_networks_negative.NetworksNegativeTestJSON.test_show_non_existent_port" /><testcase name="tempest.api.network.test_networks_negative.NetworksNegativeTestJSON.test_delete_non_existent_port" /><testcase name="tempest.api.compute.images.test_images_oneserver.ImagesOneServerTestJSON.test_create_delete_image" /><testcase name="tempest.api.identity.admin.v3.test_domains.DomainsTestJSON.test_create_update_delete_domain" /><testcase name="tempest.api.identity.admin.v2.test_roles_negative.RolesNegativeTestJSON.test_assign_user_role_by_unauthorized_user" /><testcase name="tempest.api.compute.security_groups.test_security_groups.SecurityGroupsTestJSON.test_server_security_groups" /><testcase name="tempest.api.image.v2.test_images.BasicOperationsImagesTest.test_register_upload_get_image_file" /><testcase name="tempest.api.compute.servers.test_servers_negative.ServersNegativeTestJSON.test_create_with_nonexistent_security_group" /><testcase name="tempest.api.network.test_networks.NetworksIpV6TestAttrs.test_create_delete_subnet_with_host_routes_and_dns_nameservers" /><testcase name="tempest.api.network.test_floating_ips_negative.FloatingIPNegativeTestJSON.test_create_floatingip_in_private_network" /><testcase name="tempest.api.network.test_routers_negative.RoutersNegativeIpV6Test.test_router_add_gateway_net_not_external_returns_400" /><testcase name="tempest.api.network.test_security_groups_negative.NegativeSecGroupIPv6Test.test_create_security_group_rule_with_bad_remote_ip_prefix" /><testcase name="tempest.api.identity.admin.v3.test_projects_negative.ProjectsNegativeTestJSON.test_project_create_duplicate" /><testcase name="tempest.api.compute.admin.test_migrations.MigrationsAdminTest.test_list_migrations_in_flavor_resize_situation" /><testcase name="tempest.api.compute.admin.test_aggregates.AggregatesAdminTestJSON.test_aggregate_create_delete_with_az" /><testcase name="tempest.api.identity.admin.v3.test_policies.PoliciesTestJSON.test_create_update_delete_policy" /><testcase name="tempest.api.identity.admin.v2.test_tenant_negative.TenantsNegativeTestJSON.test_update_non_existent_tenant" /><testcase name="tempest.api.identity.admin.v2.test_users_negative.UsersNegativeTestJSON.test_list_users_with_invalid_tenant" /><testcase name="tempest.api.compute.admin.test_flavors.FlavorsAdminTestJSON.test_is_public_string_variations" /><testcase name="tempest.api.identity.admin.v3.test_tokens.TokensV3TestJSON.test_tokens" /><testcase name="tempest.api.identity.admin.v2.test_tenant_negative.TenantsNegativeTestJSON.test_tenant_create_duplicate" /><testcase name="tempest.api.network.test_networks.NetworksIpV6Test.test_create_delete_subnet_with_default_gw" /><testcase name="tempest.api.identity.admin.v3.test_roles.RolesV3TestJSON.test_list_roles" /><testcase name="tempest.api.compute.images.test_image_metadata_negative.ImagesMetadataTestJSON.test_list_nonexistent_image_metadata" /><testcase name="tempest.api.network.test_networks.NetworksIpV6Test.test_create_delete_subnet_without_gateway" /><testcase name="tempest.api.compute.images.test_image_metadata_negative.ImagesMetadataTestJSON.test_delete_nonexistent_image_metadata_item" /><testcase name="tempest.api.compute.images.test_list_images.ListImagesTestJSON.test_get_image" /><testcase name="tempest.api.network.test_routers_negative.RoutersNegativeIpV6Test.test_show_non_existent_router_returns_404" /><testcase name="tempest.api.compute.admin.test_aggregates.AggregatesAdminTestJSON.test_aggregate_create_delete" /><testcase name="tempest.api.network.test_extra_dhcp_options.ExtraDHCPOptionsIpV6TestJSON.test_update_show_port_with_extra_dhcp_options" /><testcase name="tempest.api.identity.admin.v3.test_groups.GroupsV3TestJSON.test_group_users_add_list_delete" /><testcase name="tempest.api.network.test_security_groups.SecGroupTest.test_create_security_group_rule_with_additional_args" /><testcase name="tempest.api.network.test_routers.RoutersIpV6Test.test_add_remove_router_interface_with_port_id" /><testcase name="tempest.api.compute.admin.test_simple_tenant_usage_negative.TenantUsagesNegativeTestJSON.test_get_usage_tenant_with_invalid_date" /><testcase name="tempest.api.compute.servers.test_servers_negative.ServersNegativeTestJSON.test_rebuild_deleted_server" /><testcase name="tempest.api.compute.admin.test_flavors.FlavorsAdminTestJSON.test_list_non_public_flavor" /><testcase name="tempest.api.network.test_security_groups_negative.NegativeSecGroupIPv6Test.test_show_non_existent_security_group_rule" /><testcase name="tempest.api.compute.admin.test_aggregates_negative.AggregatesAdminNegativeTestJSON.test_aggregate_get_details_with_invalid_id" /><testcase name="tempest.api.network.test_networks.NetworksIpV6TestAttrs.test_create_delete_subnet_with_v6_attributes_slaac" /><testcase name="tempest.api.image.v2.test_images.ListImagesTest.test_get_image_schema" /><testcase name="tempest.api.network.test_networks.NetworksIpV6TestAttrs.test_create_delete_slaac_subnet_with_ports" /><testcase name="tempest.api.identity.admin.v3.test_groups.GroupsV3TestJSON.test_list_groups" /><testcase name="tempest.api.compute.security_groups.test_security_groups.SecurityGroupsTestJSON.test_security_group_create_get_delete" /><testcase name="tempest.api.identity.admin.v2.test_tenants.TenantsTestJSON.test_tenant_create_not_enabled" /><testcase name="tempest.api.compute.servers.test_servers.ServersTestJSON.test_update_server_name_in_stop_state" /><testcase name="tempest.api.network.test_dhcp_ipv6.NetworksTestDHCPv6.test_dhcpv6_stateless_no_ra" /><testcase name="tempest.api.image.v2.test_images_tags.ImagesTagsTest.test_update_delete_tags_for_image" /><testcase name="tempest.api.network.test_networks.NetworksIpV6TestAttrs.test_show_subnet" /><testcase name="tempest.api.compute.security_groups.test_security_group_rules.SecurityGroupRulesTestJSON.test_security_group_rules_create_with_optional_cidr" /><testcase name="tempest.api.network.test_networks_negative.NetworksNegativeTestJSON.test_update_non_existent_network" /><testcase name="tempest.api.identity.admin.v3.test_default_project_id.TestDefaultProjectId.test_default_project_id" /><testcase name="tempest.api.image.v1.test_images.ListImagesTest.test_index_status_active_detail" /><testcase name="tempest.api.network.test_ports.PortsTestJSON.test_create_port_in_allowed_allocation_pools" /><testcase name="tempest.api.identity.admin.v3.test_users.UsersV3TestJSON.test_list_user_projects" /><testcase name="tempest.api.compute.admin.test_hosts_negative.HostsAdminNegativeTestJSON.test_list_hosts_with_non_admin_user" /><testcase name="tempest.api.compute.admin.test_hypervisor.HypervisorAdminTestJSON.test_get_hypervisor_uptime" /><testcase name="tempest.api.network.test_security_groups_negative.NegativeSecGroupTest.test_create_security_group_rule_with_invalid_ports" /><testcase name="tempest.api.network.test_security_groups_negative.NegativeSecGroupTest.test_create_duplicate_security_group_rule_fails" /><testcase name="tempest.api.network.test_networks.NetworksTest.test_create_delete_subnet_with_gw" /><testcase name="tempest.api.network.test_security_groups_negative.NegativeSecGroupIPv6Test.test_create_security_group_rule_with_bad_protocol" /><testcase name="tempest.api.compute.servers.test_server_metadata.ServerMetadataTestJSON.test_update_metadata_empty_body" /><testcase name="tempest.api.identity.admin.v3.test_inherits.InheritsV3TestJSON.test_inherit_assign_list_check_revoke_roles_on_domains_user" /><testcase name="tempest.api.image.v2.test_images.ListImagesTest.test_list_image_param_owner" /><testcase name="tempest.api.identity.admin.v2.test_roles_negative.RolesNegativeTestJSON.test_list_user_roles_request_without_token" /><testcase name="tempest.api.compute.images.test_images.ImagesTestJSON.test_delete_saving_image" /><testcase name="tempest.api.identity.v2.test_tenants.IdentityTenantsTest.test_list_tenants_returns_only_authorized_tenants" /><testcase name="tempest.api.image.v2.test_images_negative.ImagesNegativeTest.test_delete_non_existing_image" /><testcase name="tempest.api.identity.admin.v2.test_roles_negative.RolesNegativeTestJSON.test_create_role_by_unauthorized_user" /><testcase name="tempest.api.compute.admin.test_agents.AgentsAdminTestJSON.test_delete_agent" /><testcase name="tempest.api.image.v1.test_images.CreateRegisterImagesTest.test_register_then_upload" /><testcase name="tempest.api.compute.flavors.test_flavors.FlavorsV2TestJSON.test_list_flavors_using_marker" /><testcase name="tempest.api.compute.admin.test_servers.ServersAdminTestJSON.test_list_servers_by_admin" /><testcase name="tempest.api.network.test_routers.RoutersIpV6Test.test_router_interface_port_update_with_fixed_ip" /><testcase name="tempest.api.compute.servers.test_servers_negative.ServersNegativeTestJSON.test_update_server_name_length_exceeds_256" /><testcase name="tempest.api.compute.security_groups.test_security_group_rules_negative.SecurityGroupRulesNegativeTestJSON.test_delete_security_group_rule_with_non_existent_id" /><testcase name="tempest.api.compute.admin.test_hosts_negative.HostsAdminNegativeTestJSON.test_show_host_detail_with_non_admin_user" /><testcase name="tempest.api.identity.v3.test_tokens.TokensV3Test.test_create_token" /><testcase name="tempest.api.compute.servers.test_server_metadata.ServerMetadataTestJSON.test_get_server_metadata_item" /><testcase name="tempest.api.network.test_ports.PortsIpV6TestJSON.test_list_ports" /><testcase name="tempest.api.compute.security_groups.test_security_group_rules_negative.SecurityGroupRulesNegativeTestJSON.test_create_security_group_rule_with_invalid_ip_protocol" /><testcase name="tempest.api.compute.servers.test_list_servers_negative.ListServersNegativeTestJSON.test_list_servers_by_non_existing_flavor" /><testcase name="tempest.api.identity.admin.v3.test_trusts.TrustsV3TestJSON.test_get_trusts_query" /><testcase name="tempest.api.image.v1.test_images.UpdateImageMetaTest.test_list_image_metadata" /><testcase name="tempest.api.compute.admin.test_servers.ServersAdminTestJSON.test_create_server_with_scheduling_hint" /><testcase name="tempest.api.identity.admin.v3.test_endpoints.EndPointsTestJSON.test_update_endpoint" /><testcase name="tempest.api.compute.servers.test_servers_negative.ServersNegativeTestJSON.test_invalid_access_ip_v4_address" /><testcase name="tempest.api.compute.servers.test_server_metadata_negative.ServerMetadataNegativeTestJSON.test_delete_metadata_non_existent_server" /><testcase name="tempest.api.network.test_ports.PortsTestJSON.test_update_port_with_two_security_groups_and_extra_attributes" /><testcase name="tempest.api.compute.admin.test_aggregates_negative.AggregatesAdminNegativeTestJSON.test_aggregate_delete_as_user" /><testcase name="tempest.api.identity.admin.v3.test_inherits.InheritsV3TestJSON.test_inherit_assign_check_revoke_roles_on_projects_user" /><testcase name="tempest.api.compute.servers.test_delete_server.DeleteServersTestJSON.test_delete_server_while_in_shutoff_state" /><testcase name="tempest.api.identity.admin.v3.test_groups.GroupsV3TestJSON.test_group_create_update_get" /><testcase name="tempest.api.compute.admin.test_aggregates_negative.AggregatesAdminNegativeTestJSON.test_aggregate_remove_nonexistent_host" /><testcase name="tempest.api.compute.keypairs.test_keypairs_negative.KeyPairsNegativeTestJSON.test_keypair_create_with_invalid_pub_key" /><testcase name="tempest.api.identity.admin.v2.test_roles.RolesTestJSON.test_list_user_roles" /><testcase name="tempest.api.identity.admin.v2.test_roles_negative.RolesNegativeTestJSON.test_list_roles_request_without_token" /><testcase name="tempest.api.network.admin.test_external_network_extension.ExternalNetworksTestJSON.test_create_external_network" /><testcase name="tempest.api.identity.admin.v3.test_endpoints.EndPointsTestJSON.test_list_endpoints" /><testcase name="tempest.api.compute.admin.test_flavors_extra_specs_negative.FlavorsExtraSpecsNegativeTestJSON.test_flavor_get_nonexistent_key" /><testcase name="tempest.api.compute.servers.test_servers_negative.ServersNegativeTestJSON.test_unshelve_non_existent_server" /><testcase name="tempest.api.compute.servers.test_server_metadata_negative.ServerMetadataNegativeTestJSON.test_create_server_metadata_blank_key" /><testcase name="tempest.api.image.v1.test_images.ListImagesTest.test_index_disk_format" /><testcase name="tempest.api.identity.v3.test_api_discovery.TestApiDiscovery.test_api_version_statuses" /><testcase name="tempest.api.identity.admin.v3.test_roles.RolesV3TestJSON.test_grant_list_revoke_role_to_group_on_domain" /><testcase name="tempest.api.network.test_routers.DvrRoutersTest.test_convert_centralized_router" /><testcase name="tempest.api.compute.admin.test_hypervisor.HypervisorAdminTestJSON.test_search_hypervisor" /><testcase name="tempest.api.identity.admin.v3.test_endpoints_negative.EndpointsNegativeTestJSON.test_create_with_enabled_False" /><testcase name="tempest.api.compute.security_groups.test_security_group_rules_negative.SecurityGroupRulesNegativeTestJSON.test_create_security_group_rule_with_invalid_id" /><testcase name="tempest.api.network.test_networks_negative.NetworksNegativeTestJSON.test_update_non_existent_subnet" /><testcase name="tempest.api.network.test_security_groups.SecGroupTest.test_create_list_update_show_delete_security_group" /><testcase name="tempest.api.network.test_security_groups.SecGroupIPv6Test.test_create_security_group_rule_with_additional_args" /><testcase name="tempest.api.identity.admin.v3.test_roles.RolesV3TestJSON.test_grant_list_revoke_role_to_user_on_project" /><testcase name="tempest.api.compute.images.test_list_image_filters.ListImageFiltersTestJSON.test_list_images_with_detail_filter_by_changes_since" /><testcase name="tempest.api.compute.admin.test_availability_zone.AZAdminV2TestJSON.test_get_availability_zone_list_detail" /><testcase name="tempest.api.identity.admin.v3.test_domains_negative.DomainsNegativeTestJSON.test_domain_create_duplicate" /><testcase name="tempest.api.compute.admin.test_quotas.QuotasAdminTestJSON.test_get_updated_quotas" /><testcase name="tempest.api.identity.admin.v3.test_projects_negative.ProjectsNegativeTestJSON.test_create_project_with_empty_name" /><testcase name="tempest.api.image.v2.test_images_negative.ImagesNegativeTest.test_register_with_invalid_container_format" /><testcase name="tempest.api.network.test_ports.PortsIpV6TestJSON.test_port_list_filter_by_ip" /><testcase name="tempest.api.network.test_ports.PortsTestJSON.test_port_list_filter_by_router_id" /><testcase name="tempest.api.compute.admin.test_hosts_negative.HostsAdminNegativeTestJSON.test_update_host_with_non_admin_user" /><testcase name="tempest.api.compute.servers.test_list_server_filters.ListServerFiltersTestJSON.test_list_servers_filter_by_limit" /><testcase name="tempest.api.compute.keypairs.test_keypairs.KeyPairsV2TestJSON.test_keypairs_create_list_delete" /><testcase name="tempest.api.compute.servers.test_list_servers_negative.ListServersNegativeTestJSON.test_list_servers_detail_server_is_deleted" /><testcase name="tempest.api.identity.admin.v3.test_projects.ProjectsTestJSON.test_project_update_desc" /><testcase name="tempest.api.network.test_ports.PortsAdminExtendedAttrsIpV6TestJSON.test_list_ports_binding_ext_attr" /><testcase name="tempest.api.compute.limits.test_absolute_limits.AbsoluteLimitsTestJSON.test_absLimits_get" /><testcase name="tempest.api.identity.admin.v3.test_users.UsersV3TestJSON.test_get_user" /><testcase name="tempest.api.compute.servers.test_server_group.ServerGroupTestJSON.test_show_server_group" /><testcase name="tempest.api.compute.servers.test_server_metadata_negative.ServerMetadataNegativeTestJSON.test_metadata_items_limit" /><testcase name="tempest.api.network.test_networks.NetworksTest.test_list_networks_fields" /><testcase name="tempest.api.compute.servers.test_list_server_filters.ListServerFiltersTestJSON.test_list_servers_filter_by_active_status" /><testcase name="tempest.api.network.test_networks.NetworksIpV6TestAttrs.test_list_networks_fields" /><testcase name="tempest.api.network.test_ports.PortsTestJSON.test_create_port_with_no_securitygroups" /><testcase name="tempest.api.identity.admin.v2.test_users_negative.UsersNegativeTestJSON.test_get_users_request_without_token" /><testcase name="tempest.api.compute.servers.test_list_servers_negative.ListServersNegativeTestJSON.test_list_servers_by_changes_since_future_date" /><testcase name="tempest.api.identity.admin.v3.test_domains.DomainsTestJSON.test_create_domain_with_disabled_status" /><testcase name="tempest.api.compute.images.test_list_image_filters.ListImageFiltersTestJSON.test_list_images_with_detail_filter_by_name" /><testcase name="tempest.api.compute.servers.test_disk_config.ServerDiskConfigTestJSON.test_resize_server_from_manual_to_auto" /><testcase name="tempest.api.compute.servers.test_servers_negative.ServersNegativeTestJSON.test_unshelve_server_invalid_state" /><testcase name="tempest.api.network.test_routers_negative.RoutersNegativeTest.test_show_non_existent_router_returns_404" /><testcase name="tempest.api.identity.admin.v3.test_projects.ProjectsTestJSON.test_project_update_enable" /><testcase name="tempest.api.compute.test_tenant_networks.ComputeTenantNetworksTest.test_list_show_tenant_networks" /><testcase name="tempest.api.compute.admin.test_flavors.FlavorsAdminTestJSON.test_create_flavor_verify_entry_in_list_details" /><testcase name="tempest.api.compute.admin.test_aggregates.AggregatesAdminTestJSON.test_aggregate_create_update_with_az" /><testcase name="tempest.api.image.v1.test_image_members.ImageMembersTest.test_remove_member" /><testcase name="tempest.api.compute.admin.test_agents.AgentsAdminTestJSON.test_create_agent" /><testcase name="tempest.api.network.test_routers.RoutersTest.test_add_remove_router_interface_with_subnet_id" /><testcase name="tempest.api.compute.admin.test_instance_usage_audit_log_negative.InstanceUsageAuditLogNegativeTestJSON.test_get_instance_usage_audit_logs_with_invalid_time" /><testcase name="tempest.api.compute.security_groups.test_security_groups_negative.SecurityGroupsNegativeTestJSON.test_delete_security_group_without_passing_id" /><testcase name="tempest.api.network.test_ports.PortsTestJSON.test_port_list_filter_by_ip" /><testcase name="tempest.api.identity.admin.v2.test_tenant_negative.TenantsNegativeTestJSON.test_list_tenant_request_without_token" /><testcase name="tempest.api.network.test_ports.PortsTestJSON.test_list_ports_fields" /><testcase name="tempest.api.identity.admin.v2.test_users.UsersTestJSON.test_list_users_with_roles_for_tenant" /><testcase name="tempest.api.compute.servers.test_attach_interfaces.AttachInterfacesTestJSON.test_add_remove_fixed_ip" /><testcase name="tempest.api.identity.admin.v3.test_trusts.TrustsV3TestJSON.test_trust_impersonate" /><testcase name="tempest.api.image.v2.test_images_member_negative.ImagesMemberNegativeTest.test_image_share_owner_cannot_accept" /><testcase name="tempest.api.compute.admin.test_hosts.HostsAdminTestJSON.test_list_hosts_with_nonexistent_zone" /><testcase name="tempest.api.identity.admin.v3.test_projects.ProjectsTestJSON.test_project_create_not_enabled" /><testcase name="tempest.api.identity.admin.v3.test_users_negative.UsersNegativeTest.test_create_user_for_non_existent_domain" /><testcase name="tempest.api.compute.admin.test_servers.ServersAdminTestJSON.test_list_servers_detailed_filter_by_invalid_status" /><testcase name="tempest.api.network.test_networks.NetworksIpV6TestAttrs.test_create_delete_subnet_with_gw" /><testcase name="tempest.api.compute.servers.test_delete_server.DeleteServersAdminTestJSON.test_delete_server_while_in_error_state" /><testcase name="tempest.api.network.test_ports.PortsIpV6TestJSON.test_port_list_filter_by_router_id" /><testcase name="tempest.api.network.test_ports.PortsIpV6TestJSON.test_create_update_port_with_second_ip" /><testcase name="tempest.api.identity.v3.test_api_discovery.TestApiDiscovery.test_api_media_types" /><testcase name="tempest.api.compute.keypairs.test_keypairs_negative.KeyPairsNegativeTestJSON.test_create_keypair_with_long_keynames" /><testcase name="tempest.api.compute.admin.test_agents.AgentsAdminTestJSON.test_update_agent" /><testcase name="tempest.api.compute.servers.test_servers_negative.ServersNegativeTestJSON.test_create_with_non_existent_keypair" /><testcase name="tempest.api.identity.admin.v3.test_trusts.TrustsV3TestJSON.test_trust_expire" /><testcase name="tempest.api.network.test_allowed_address_pair.AllowedAddressPairIpV6TestJSON.test_update_port_with_multiple_ip_mac_address_pair" /><testcase name="tempest.api.image.v1.test_image_members_negative.ImageMembersNegativeTest.test_delete_member_with_non_existing_tenant" /><testcase name="tempest.api.network.test_dhcp_ipv6.NetworksTestDHCPv6.test_dhcp_stateful_fixedips_duplicate" /><testcase name="tempest.api.network.test_networks.NetworksTest.test_create_delete_subnet_with_gw_and_allocation_pools" /><testcase name="tempest.api.identity.admin.v2.test_users_negative.UsersNegativeTestJSON.test_create_user_by_unauthorized_user" /><testcase name="tempest.api.compute.servers.test_servers_negative.ServersNegativeTestJSON.test_restore_server_invalid_state" /><testcase name="tempest.api.compute.admin.test_servers_negative.ServersAdminNegativeTestJSON.test_resize_server_using_overlimit_ram" /><testcase name="tempest.api.compute.security_groups.test_security_group_rules_negative.SecurityGroupRulesNegativeTestJSON.test_create_security_group_rule_with_invalid_from_port" /><testcase name="tempest.api.identity.admin.v2.test_services.ServicesTestJSON.test_create_get_delete_service" /><testcase name="tempest.api.compute.admin.test_hosts.HostsAdminTestJSON.test_list_hosts" /><testcase name="tempest.api.compute.flavors.test_flavors.FlavorsV2TestJSON.test_list_flavors_limit_results" /><testcase name="tempest.api.identity.admin.v3.test_list_projects.ListProjectsTestJSON.test_list_projects_with_name" /><testcase name="tempest.api.compute.servers.test_delete_server.DeleteServersTestJSON.test_delete_server_while_in_verify_resize_state" /><testcase name="tempest.api.compute.admin.test_flavors_extra_specs_negative.FlavorsExtraSpecsNegativeTestJSON.test_flavor_non_admin_unset_keys" /><testcase name="tempest.api.identity.admin.v2.test_tenant_negative.TenantsNegativeTestJSON.test_create_tenant_with_empty_name" /><testcase name="tempest.api.compute.images.test_images_negative.ImagesNegativeTestJSON.test_delete_image_with_invalid_image_id" /><testcase name="tempest.api.compute.servers.test_server_metadata.ServerMetadataTestJSON.test_list_server_metadata" /><testcase name="tempest.api.network.test_allowed_address_pair.AllowedAddressPairTestJSON.test_create_list_port_with_address_pair" /><testcase name="tempest.api.identity.admin.v3.test_users.UsersV3TestJSON.test_user_update" /><testcase name="tempest.api.identity.admin.v2.test_users_negative.UsersNegativeTestJSON.test_create_user_request_without_a_token" /><testcase name="tempest.api.network.test_dhcp_ipv6.NetworksTestDHCPv6.test_dhcp_stateful_fixedips" /><testcase name="tempest.api.identity.admin.v2.test_users_negative.UsersNegativeTestJSON.test_create_user_with_enabled_non_bool" /><testcase name="tempest.api.image.v1.test_images.ListImagesTest.test_index_max_size" /><testcase name="tempest.api.compute.security_groups.test_security_group_rules.SecurityGroupRulesTestJSON.test_security_group_rules_create" /><testcase name="tempest.api.identity.admin.v2.test_endpoints.EndPointsTestJSON.test_list_endpoints" /><testcase name="tempest.api.compute.test_extensions.ExtensionsTestJSON.test_get_extension" /><testcase name="tempest.api.network.test_routers.RoutersIpV6Test.test_add_multiple_router_interfaces" /><testcase name="tempest.api.network.test_networks.NetworksIpV6Test.test_list_subnets" /><testcase name="tempest.api.compute.servers.test_instance_actions.InstanceActionsTestJSON.test_get_instance_action" /><testcase name="tempest.api.compute.admin.test_hypervisor_negative.HypervisorAdminNegativeTestJSON.test_get_hypervisor_uptime_with_non_admin_user" /><testcase name="tempest.api.compute.images.test_images_oneserver.ImagesOneServerTestJSON.test_create_image_specify_multibyte_character_image_name" /><testcase name="tempest.api.network.test_networks.NetworksIpV6TestAttrs.test_create_delete_subnet_with_v6_attributes_stateless" /><testcase name="tempest.api.compute.keypairs.test_keypairs_negative.KeyPairsNegativeTestJSON.test_create_keypair_when_public_key_bits_exceeds_maximum" /><testcase name="tempest.api.identity.v3.test_users.IdentityV3UsersTest.test_user_update_own_password" /><testcase name="tempest.api.network.test_routers_negative.RoutersNegativeTest.test_update_non_existent_router_returns_404" /><testcase name="tempest.api.compute.admin.test_aggregates.AggregatesAdminTestJSON.test_aggregate_create_update_metadata_get_details" /><testcase name="tempest.api.compute.admin.test_hypervisor_negative.HypervisorAdminNegativeTestJSON.test_search_hypervisor_with_non_admin_user" /><testcase name="tempest.api.identity.admin.v2.test_users.UsersTestJSON.test_create_user_with_enabled" /><testcase name="tempest.api.network.test_networks_negative.NetworksNegativeTestJSON.test_create_port_on_non_existent_network" /><testcase name="tempest.api.network.test_security_groups_negative.NegativeSecGroupIPv6Test.test_create_security_group_rule_with_remote_ip_and_group" /><testcase name="tempest.api.compute.admin.test_servers_negative.ServersAdminNegativeTestJSON.test_reset_state_server_invalid_type" /><testcase name="tempest.api.image.v2.test_images_negative.ImagesNegativeTest.test_register_with_invalid_disk_format" /><testcase name="tempest.api.network.test_ports.PortsIpV6TestJSON.test_update_port_with_security_group_and_extra_attributes" /><testcase name="tempest.api.compute.servers.test_server_metadata.ServerMetadataTestJSON.test_update_server_metadata" /><testcase name="tempest.api.compute.security_groups.test_security_group_rules.SecurityGroupRulesTestJSON.test_security_group_rules_list" /><testcase name="tempest.api.compute.keypairs.test_keypairs_negative.KeyPairsNegativeTestJSON.test_create_keypair_with_empty_public_key" /><testcase name="tempest.api.identity.admin.v3.test_domains.DomainsTestJSON.test_create_domain_without_description" /><testcase name="tempest.api.compute.servers.test_list_servers_negative.ListServersNegativeTestJSON.test_list_servers_by_changes_since_invalid_date" /><testcase name="tempest.api.compute.servers.test_servers_negative.ServersNegativeTestJSON.test_shelve_shelved_server" /><testcase name="tempest.api.identity.admin.v3.test_regions.RegionsTestJSON.test_create_region_with_specific_id" /><testcase name="tempest.api.network.test_security_groups.SecGroupIPv6Test.test_list_security_groups" /><testcase name="tempest.api.network.test_security_groups_negative.NegativeSecGroupTest.test_show_non_existent_security_group" /><testcase name="tempest.api.identity.admin.v2.test_roles_negative.RolesNegativeTestJSON.test_assign_user_role_request_without_token" /><testcase name="tempest.api.network.test_ports.PortsAdminExtendedAttrsIpV6TestJSON.test_show_port_binding_ext_attr" /><testcase name="tempest.api.network.test_ports.PortsTestJSON.test_list_ports" /><testcase name="tempest.api.image.v2.test_images_member_negative.ImagesMemberNegativeTest.test_image_share_invalid_status" /><testcase name="tempest.api.network.test_routers_negative.RoutersNegativeTest.test_add_router_interfaces_on_overlapping_subnets_returns_400" /><testcase name="tempest.api.identity.admin.v2.test_users.UsersTestJSON.test_create_user" /><testcase name="tempest.api.identity.admin.v3.test_endpoints_negative.EndpointsNegativeTestJSON.test_create_with_enabled_True" /><testcase name="tempest.api.compute.admin.test_servers.ServersAdminTestJSON.test_reset_state_server" /><testcase name="tempest.api.network.test_networks.NetworksIpV6Test.test_create_delete_subnet_with_gw" /><testcase name="tempest.api.compute.servers.test_server_metadata_negative.ServerMetadataNegativeTestJSON.test_set_server_metadata_blank_key" /><testcase name="tempest.api.compute.admin.test_flavors.FlavorsAdminTestJSON.test_create_flavor_with_uuid_id" /><testcase name="tempest.api.identity.admin.v3.test_domains_negative.DomainsNegativeTestJSON.test_create_domain_with_empty_name" /><testcase name="tempest.api.network.test_ports.PortsTestJSON.test_show_port" /><testcase name="tempest.api.compute.images.test_images_negative.ImagesNegativeTestJSON.test_create_image_specify_uuid_35_characters_or_less" /><testcase name="tempest.api.compute.servers.test_list_servers_negative.ListServersNegativeTestJSON.test_list_servers_by_non_existing_server_name" /><testcase name="tempest.api.compute.images.test_list_image_filters.ListImageFiltersTestJSON.test_list_images_filter_by_server_id" /><testcase name="tempest.api.compute.admin.test_flavors.FlavorsAdminTestJSON.test_create_flavor_with_none_id" /><testcase name="tempest.api.identity.admin.v2.test_users.UsersTestJSON.test_update_user" /><testcase name="tempest.api.compute.servers.test_servers_negative.ServersNegativeTestJSON.test_pause_non_existent_server" /><testcase name="tempest.api.image.v2.test_images.BasicOperationsImagesTest.test_delete_image" /><testcase name="tempest.api.network.admin.test_l3_agent_scheduler.L3AgentSchedulerTestJSON.test_add_list_remove_router_on_l3_agent" /><testcase name="tempest.api.compute.images.test_list_images.ListImagesTestJSON.test_list_images_with_detail" /><testcase name="tempest.api.compute.admin.test_servers_negative.ServersAdminNegativeTestJSON.test_migrate_server_invalid_state" /><testcase name="tempest.api.compute.servers.test_servers_negative.ServersNegativeTestJSON.test_resize_server_with_non_existent_flavor" /><testcase name="tempest.api.compute.admin.test_simple_tenant_usage.TenantUsagesTestJSON.test_get_usage_tenant_with_non_admin_user" /><testcase name="tempest.api.network.test_networks.NetworksTest.test_list_networks" /><testcase name="tempest.api.network.test_networks.NetworksIpV6TestAttrs.test_list_subnets_fields" /><testcase name="tempest.api.network.test_networks.NetworksIpV6TestAttrs.test_delete_network_with_subnet" /><testcase name="tempest.api.image.v2.test_images.ListImagesTest.test_list_images_param_min_max_size" /><testcase name="tempest.api.compute.servers.test_servers_negative.ServersNegativeTestJSON.test_create_server_metadata_exceeds_length_limit" /><testcase name="tempest.api.network.test_ports.PortsAdminExtendedAttrsTestJSON.test_show_port_binding_ext_attr" /><testcase name="tempest.api.compute.test_versions.TestVersions.test_list_api_versions" /><testcase name="tempest.api.identity.v2.test_ec2_credentials.EC2CredentialsTest.test_delete_ec2_credential" /><testcase name="tempest.api.compute.admin.test_migrations.MigrationsAdminTest.test_list_migrations" /><testcase name="tempest.api.network.test_networks.NetworksIpV6Test.test_create_delete_subnet_with_gw_and_allocation_pools" /><testcase name="tempest.api.compute.admin.test_flavors.FlavorsAdminTestJSON.test_create_server_with_non_public_flavor" /><testcase name="tempest.api.identity.admin.v3.test_list_projects.ListProjectsTestJSON.test_list_projects_with_domains" /><testcase name="tempest.api.compute.servers.test_list_server_filters.ListServerFiltersTestJSON.test_list_servers_filtered_by_name_wildcard" /><testcase name="tempest.api.compute.servers.test_servers_negative.ServersNegativeTestJSON.test_pause_paused_server" /><testcase name="tempest.api.image.v2.test_images_negative.ImagesNegativeTest.test_get_image_null_id" /><testcase name="tempest.api.compute.servers.test_delete_server.DeleteServersTestJSON.test_delete_active_server" /><testcase name="tempest.api.compute.admin.test_agents.AgentsAdminTestJSON.test_list_agents_with_filter" /><testcase name="tempest.api.identity.admin.v3.test_projects.ProjectsTestJSON.test_project_update_name" /><testcase name="tempest.api.compute.servers.test_list_server_filters.ListServerFiltersTestJSON.test_list_servers_detailed_filter_by_image" /><testcase name="tempest.api.network.test_dhcp_ipv6.NetworksTestDHCPv6.test_dhcpv6_two_subnets" /><testcase name="tempest.api.identity.admin.v3.test_projects_negative.ProjectsNegativeTestJSON.test_create_projects_name_length_over_64" /><testcase name="tempest.api.network.test_routers.RoutersTest.test_add_remove_router_interface_with_port_id" /><testcase name="tempest.api.compute.servers.test_server_metadata_negative.ServerMetadataNegativeTestJSON.test_wrong_key_passed_in_body" /><testcase name="tempest.api.network.test_allowed_address_pair.AllowedAddressPairIpV6TestJSON.test_update_port_with_cidr_address_pair" /><testcase name="tempest.api.compute.images.test_images_negative.ImagesNegativeTestJSON.test_delete_image_blank_id" /><testcase name="tempest.api.compute.servers.test_list_servers_negative.ListServersNegativeTestJSON.test_list_servers_by_limits" /><testcase name="tempest.api.compute.servers.test_list_servers_negative.ListServersNegativeTestJSON.test_list_servers_by_non_existing_image" /><testcase name="tempest.api.identity.admin.v3.test_groups.GroupsV3TestJSON.test_list_user_groups" /><testcase name="tempest.api.identity.admin.v2.test_roles_negative.RolesNegativeTestJSON.test_list_user_roles_by_unauthorized_user" /><testcase name="tempest.api.compute.servers.test_server_group.ServerGroupTestJSON.test_create_delete_server_group_with_anti_affinity_policy" /><testcase name="tempest.api.compute.servers.test_list_servers_negative.ListServersNegativeTestJSON.test_list_servers_by_limits_greater_than_actual_count" /><testcase name="tempest.api.compute.admin.test_aggregates_negative.AggregatesAdminNegativeTestJSON.test_aggregate_add_host_as_user" /><testcase name="tempest.api.network.admin.test_dhcp_agent_scheduler.DHCPAgentSchedulersTestJSON.test_add_remove_network_from_dhcp_agent" /><testcase name="tempest.api.compute.images.test_image_metadata.ImagesMetadataTestJSON.test_set_image_metadata_item" /><testcase name="tempest.api.compute.servers.test_delete_server.DeleteServersTestJSON.test_delete_server_while_in_building_state" /><testcase name="tempest.api.compute.servers.test_instance_actions_negative.InstanceActionsNegativeTestJSON.test_get_instance_action_invalid_request" /><testcase name="tempest.api.compute.servers.test_servers_negative.ServersNegativeTestJSON.test_reboot_deleted_server" /><testcase name="tempest.api.network.test_security_groups.SecGroupIPv6Test.test_create_security_group_rule_with_icmp_type_code" /><testcase name="tempest.api.compute.admin.test_hosts.HostsAdminTestJSON.test_show_host_detail" /><testcase name="tempest.api.compute.servers.test_virtual_interfaces.VirtualInterfacesTestJSON.test_list_virtual_interfaces" /><testcase name="tempest.api.identity.admin.v3.test_list_users.UsersV3TestJSON.test_list_users" /><testcase name="tempest.api.compute.test_extensions.ExtensionsTestJSON.test_list_extensions" /><testcase name="tempest.api.compute.servers.test_servers.ServersTestJSON.test_create_with_existing_server_name" /><testcase name="tempest.api.identity.v2.test_tokens.TokensTest.test_create_token" /><testcase name="tempest.api.identity.admin.v3.test_endpoints.EndPointsTestJSON.test_create_list_show_delete_endpoint" /><testcase name="tempest.api.network.test_networks.NetworksIpV6TestAttrs.test_list_networks" /><testcase name="tempest.api.compute.images.test_images_negative.ImagesNegativeTestJSON.test_delete_non_existent_image" /><testcase name="tempest.api.compute.admin.test_hosts_negative.HostsAdminNegativeTestJSON.test_reboot_nonexistent_host" /><testcase name="tempest.api.image.v1.test_images_negative.CreateDeleteImagesNegativeTest.test_delete_image_non_hex_string_id" /><testcase name="tempest.api.identity.admin.v2.test_roles.RolesTestJSON.test_list_roles" /><testcase name="tempest.api.compute.admin.test_aggregates_negative.AggregatesAdminNegativeTestJSON.test_aggregate_create_as_user" /><testcase name="tempest.api.identity.admin.v2.test_tenant_negative.TenantsNegativeTestJSON.test_tenant_update_by_unauthorized_user" /><testcase name="tempest.api.image.v2.test_images.BasicOperationsImagesTest.test_update_image" /><testcase name="tempest.api.identity.admin.v2.test_tenants.TenantsTestJSON.test_tenant_update_enable" /><testcase name="tempest.api.network.test_security_groups.SecGroupTest.test_create_security_group_rule_with_icmp_type_code" /><testcase name="tempest.api.identity.admin.v3.test_tokens.TokensV3TestJSON.test_rescope_token" /><testcase name="tempest.api.compute.images.test_images_negative.ImagesNegativeTestJSON.test_delete_image_non_hex_string_id" /><testcase name="tempest.api.identity.admin.v3.test_projects.ProjectsTestJSON.test_associate_user_to_project" /><testcase name="tempest.api.identity.admin.v2.test_roles.RolesTestJSON.test_get_role_by_id" /><testcase name="tempest.api.compute.servers.test_list_server_filters.ListServerFiltersTestJSON.test_list_servers_filter_by_exceed_limit" /><testcase name="tempest.api.network.test_routers.DvrRoutersTest.test_create_distributed_router" /><testcase name="tempest.api.identity.admin.v3.test_projects_negative.ProjectsNegativeTestJSON.test_create_project_by_unauthorized_user" /><testcase name="tempest.api.identity.admin.v2.test_roles.RolesTestJSON.test_remove_user_role" /><testcase name="tempest.api.network.test_security_groups_negative.NegativeSecGroupIPv6Test.test_create_duplicate_security_group_rule_fails" /><testcase name="tempest.api.compute.servers.test_servers_negative.ServersNegativeTestJSON.test_resume_server_invalid_state" /><testcase name="tempest.api.compute.keypairs.test_keypairs_negative.KeyPairsNegativeTestJSON.test_keypair_delete_nonexistent_key" /><testcase name="tempest.api.identity.admin.v2.test_roles_negative.RolesNegativeTestJSON.test_delete_role_non_existent" /><testcase name="tempest.api.network.test_networks.NetworksIpV6Test.test_update_subnet_gw_dns_host_routes_dhcp" /><testcase name="tempest.api.compute.admin.test_availability_zone_negative.AZAdminNegativeTestJSON.test_get_availability_zone_list_detail_with_non_admin_user" /><testcase name="tempest.api.compute.admin.test_hypervisor_negative.HypervisorAdminNegativeTestJSON.test_get_hypervisor_stats_with_non_admin_user" /><testcase name="tempest.api.network.test_ports.PortsIpV6TestJSON.test_show_port" /><testcase name="tempest.api.compute.admin.test_quotas_negative.QuotasAdminNegativeTestJSON.test_update_quota_normal_user" /><testcase name="tempest.api.identity.admin.v3.test_domains_negative.DomainsNegativeTestJSON.test_delete_active_domain" /><testcase name="tempest.api.identity.v2.test_ec2_credentials.EC2CredentialsTest.test_create_ec2_credential" /><testcase name="tempest.api.compute.admin.test_aggregates.AggregatesAdminTestJSON.test_aggregate_add_host_get_details" /><testcase name="tempest.api.compute.images.test_images_negative.ImagesNegativeTestJSON.test_create_image_from_invalid_server" /><testcase name="tempest.api.network.test_security_groups_negative.NegativeSecGroupIPv6Test.test_create_security_group_rule_with_invalid_ports" /><testcase name="tempest.api.compute.keypairs.test_keypairs_negative.KeyPairsNegativeTestJSON.test_create_keypair_with_duplicate_name" /><testcase name="tempest.api.identity.admin.v2.test_users.UsersTestJSON.test_get_users" /><testcase name="tempest.api.image.v1.test_images_negative.CreateDeleteImagesNegativeTest.test_delete_non_existent_image" /><testcase name="tempest.api.network.test_security_groups.SecGroupTest.test_create_security_group_rule_with_remote_group_id" /><testcase name="tempest.api.compute.servers.test_servers_negative.ServersNegativeTestJSON.test_update_name_of_non_existent_server" /><testcase name="tempest.api.identity.admin.v3.test_services.ServicesTestJSON.test_create_update_get_service" /><testcase name="tempest.api.compute.admin.test_services_negative.ServicesAdminNegativeTestJSON.test_get_service_with_valid_service_and_invalid_host" /><testcase name="tempest.api.compute.admin.test_hosts_negative.HostsAdminNegativeTestJSON.test_update_nonexistent_host" /><testcase name="tempest.api.identity.admin.v2.test_tokens.TokensTestJSON.test_create_get_delete_token" /><testcase name="tempest.api.network.test_dhcp_ipv6.NetworksTestDHCPv6.test_dhcp_stateful_fixedips_outrange" /><testcase name="tempest.api.compute.servers.test_attach_interfaces.AttachInterfacesTestJSON.test_create_list_show_delete_interfaces" /><testcase name="tempest.api.compute.admin.test_hosts_negative.HostsAdminNegativeTestJSON.test_shutdown_nonexistent_host" /><testcase name="tempest.api.identity.admin.v2.test_users_negative.UsersNegativeTestJSON.test_create_user_with_name_length_over_255" /><testcase name="tempest.api.identity.admin.v2.test_roles_negative.RolesNegativeTestJSON.test_remove_user_role_non_existent_tenant" /><testcase name="tempest.api.identity.admin.v3.test_list_users.UsersV3TestJSON.test_list_users_with_name" /><testcase name="tempest.api.identity.admin.v3.test_domains.DomainsTestJSON.test_list_domains_filter_by_enabled" /><testcase name="tempest.api.identity.admin.v2.test_users_negative.UsersNegativeTestJSON.test_delete_users_by_unauthorized_user" /><testcase name="tempest.api.compute.admin.test_hypervisor_negative.HypervisorAdminNegativeTestJSON.test_get_hypervisor_list_with_non_admin_user" /><testcase name="tempest.api.identity.admin.v2.test_tenant_negative.TenantsNegativeTestJSON.test_tenant_delete_by_unauthorized_user" /><testcase name="tempest.api.compute.images.test_list_image_filters_negative.ListImageFiltersNegativeTestJSON.test_get_nonexistent_image" /><testcase name="tempest.api.network.test_ports.PortsIpV6TestJSON.test_create_port_with_no_securitygroups" /><testcase name="tempest.api.image.v2.test_images_member.ImagesMemberTest.test_get_image_members_schema" /><testcase name="tempest.api.compute.servers.test_servers_negative.ServersNegativeTestJSON.test_get_non_existent_server" /><testcase name="tempest.api.compute.security_groups.test_security_groups_negative.SecurityGroupsNegativeTestJSON.test_update_non_existent_security_group" /><testcase name="tempest.api.image.v1.test_images_negative.CreateDeleteImagesNegativeTest.test_delete_image_negative_image_id" /><testcase name="tempest.api.image.v2.test_images_negative.ImagesNegativeTest.test_delete_image_null_id" /><testcase name="tempest.api.network.test_dhcp_ipv6.NetworksTestDHCPv6.test_dhcp_stateful" /><testcase name="tempest.api.compute.servers.test_servers_negative.ServersNegativeTestJSON.test_force_delete_nonexistent_server_id" /><testcase name="tempest.api.compute.admin.test_services_negative.ServicesAdminNegativeTestJSON.test_get_service_by_invalid_service_and_valid_host" /><testcase name="tempest.api.network.test_security_groups_negative.NegativeSecGroupTest.test_show_non_existent_security_group_rule" /><testcase name="tempest.api.network.test_networks.BulkNetworkOpsIpV6Test.test_bulk_create_delete_port" /><testcase name="tempest.api.network.test_networks.NetworksIpV6Test.test_create_delete_subnet_with_dhcp_enabled" /><testcase name="tempest.api.compute.servers.test_servers_negative.ServersNegativeTestJSON.test_invalid_ip_v6_address" /><testcase name="tempest.api.identity.admin.v3.test_inherits.InheritsV3TestJSON.test_inherit_assign_check_revoke_roles_on_projects_group" /><testcase name="tempest.api.compute.admin.test_hosts_negative.HostsAdminNegativeTestJSON.test_update_host_with_invalid_status" /><testcase name="tempest.api.network.test_security_groups_negative.NegativeSecGroupIPv6Test.test_create_additional_default_security_group_fails" /><testcase name="tempest.api.network.test_security_groups.SecGroupIPv6Test.test_create_security_group_rule_with_protocol_integer_value" /><testcase name="tempest.api.compute.images.test_images_negative.ImagesNegativeTestJSON.test_create_image_from_deleted_server" /><testcase name="tempest.api.network.test_security_groups.SecGroupIPv6Test.test_create_security_group_rule_with_remote_ip_prefix" /><testcase name="tempest.api.network.test_routers.RoutersTest.test_router_interface_port_update_with_fixed_ip" /><testcase name="tempest.api.network.admin.test_external_network_extension.ExternalNetworksTestJSON.test_delete_external_networks_with_floating_ip" /><testcase name="tempest.api.compute.servers.test_list_server_filters.ListServerFiltersTestJSON.test_list_servers_detailed_filter_by_server_name" /><testcase name="tempest.api.compute.admin.test_hosts_negative.HostsAdminNegativeTestJSON.test_update_host_without_param" /><testcase name="tempest.api.identity.admin.v2.test_tenant_negative.TenantsNegativeTestJSON.test_tenant_delete_request_without_token" /><testcase name="tempest.api.network.test_security_groups_negative.NegativeSecGroupTest.test_create_security_group_rule_with_bad_protocol" /><testcase name="tempest.api.network.test_networks.NetworksTest.test_show_network" /><testcase name="tempest.api.identity.admin.v3.test_domains_negative.DomainsNegativeTestJSON.test_create_domain_with_name_length_over_64" /><testcase name="tempest.api.network.test_allowed_address_pair.AllowedAddressPairIpV6TestJSON.test_create_list_port_with_address_pair" /><testcase name="tempest.api.compute.admin.test_flavors_extra_specs_negative.FlavorsExtraSpecsNegativeTestJSON.test_flavor_unset_nonexistent_key" /><testcase name="tempest.scenario.test_server_advanced_ops.TestServerAdvancedOps.test_server_sequence_suspend_resume" /><testcase name="tempest.api.network.test_security_groups_negative.NegativeSecGroupTest.test_create_security_group_rule_with_remote_ip_and_group" /><testcase name="tempest.api.identity.admin.v2.test_roles_negative.RolesNegativeTestJSON.test_list_roles_by_unauthorized_user" /><testcase name="tempest.api.identity.admin.v2.test_roles_negative.RolesNegativeTestJSON.test_assign_duplicate_user_role" /><testcase name="tempest.api.compute.images.test_images_negative.ImagesNegativeTestJSON.test_delete_image_id_is_over_35_character_limit" /><testcase name="tempest.api.network.test_networks.NetworksIpV6Test.test_show_network_fields" /><testcase name="tempest.api.identity.v3.test_projects.IdentityV3ProjectsTest.test_list_projects_returns_only_authorized_projects" /><testcase name="tempest.api.compute.servers.test_server_metadata_negative.ServerMetadataNegativeTestJSON.test_set_server_metadata_missing_metadata" /><testcase name="tempest.api.compute.admin.test_flavors_extra_specs_negative.FlavorsExtraSpecsNegativeTestJSON.test_flavor_update_more_key" /><testcase name="tempest.api.compute.limits.test_absolute_limits_negative.AbsoluteLimitsNegativeTestJSON.test_max_image_meta_exceed_limit" /><testcase name="tempest.api.compute.admin.test_flavors_access_negative.FlavorsAccessNegativeTestJSON.test_add_flavor_access_duplicate" /><testcase name="tempest.api.network.admin.test_external_network_extension.ExternalNetworksTestJSON.test_show_external_networks_attribute" /><testcase name="tempest.api.network.admin.test_routers_dvr.RoutersTestDVR.test_centralized_router_creation" /><testcase name="tempest.api.compute.admin.test_servers_negative.ServersAdminNegativeTestJSON.test_reset_state_server_invalid_state" /><testcase name="tempest.api.compute.admin.test_flavors_access_negative.FlavorsAccessNegativeTestJSON.test_flavor_non_admin_add" /><testcase name="tempest.api.identity.admin.v3.test_list_projects.ListProjectsTestJSON.test_list_projects_with_enabled" /><testcase name="tempest.api.compute.admin.test_flavors_extra_specs.FlavorsExtraSpecsTestJSON.test_flavor_non_admin_get_all_keys" /><testcase name="tempest.api.compute.admin.test_hypervisor_negative.HypervisorAdminNegativeTestJSON.test_show_servers_with_nonexistent_hypervisor" /><testcase name="tempest.api.compute.admin.test_servers.ServersAdminTestJSON.test_list_servers_filter_by_error_status" /><testcase name="tempest.api.identity.admin.v3.test_endpoints_negative.EndpointsNegativeTestJSON.test_update_with_enabled_False" /><testcase name="tempest.api.compute.servers.test_list_server_filters.ListServerFiltersTestJSON.test_list_servers_filter_by_flavor" /><testcase name="tempest.api.network.admin.test_agent_management.AgentManagementTestJSON.test_list_agents_non_admin" /><testcase name="tempest.api.compute.admin.test_servers_negative.ServersAdminNegativeTestJSON.test_get_server_diagnostics_by_non_admin" /><testcase name="tempest.api.compute.servers.test_servers.ServersTestJSON.test_create_server_with_ipv6_addr_only" /><testcase name="tempest.api.image.v2.test_images_member.ImagesMemberTest.test_get_image_member" /><testcase name="tempest.api.compute.admin.test_servers.ServersAdminTestJSON.test_list_servers_by_admin_with_specified_tenant" /><testcase name="tempest.api.identity.admin.v3.test_projects.ProjectsTestJSON.test_project_create_with_domain" /><testcase name="tempest.api.compute.servers.test_server_metadata_negative.ServerMetadataNegativeTestJSON.test_server_create_metadata_key_too_long" /><testcase name="tempest.api.compute.admin.test_aggregates_negative.AggregatesAdminNegativeTestJSON.test_aggregate_create_with_existent_aggregate_name" /><testcase name="tempest.api.identity.test_extension.ExtensionTestJSON.test_list_extensions" /><testcase name="tempest.api.compute.servers.test_server_metadata_negative.ServerMetadataNegativeTestJSON.test_update_metadata_non_existent_server" /><testcase name="tempest.api.image.v2.test_images_tags_negative.ImagesTagsNegativeTest.test_update_tags_for_non_existing_image" /><testcase name="tempest.api.network.test_networks.NetworksIpV6TestAttrs.test_show_network_fields" /><testcase name="tempest.api.identity.admin.v2.test_roles_negative.RolesNegativeTestJSON.test_role_create_blank_name" /><testcase name="tempest.api.compute.admin.test_flavors_extra_specs.FlavorsExtraSpecsTestJSON.test_flavor_set_get_update_show_unset_keys" /><testcase name="tempest.api.compute.admin.test_servers.ServersAdminTestJSON.test_list_servers_by_admin_with_all_tenants" /><testcase name="tempest.api.compute.floating_ips.test_list_floating_ips_negative.FloatingIPDetailsNegativeTestJSON.test_get_nonexistent_floating_ip_details" /><testcase name="tempest.api.compute.admin.test_instance_usage_audit_log.InstanceUsageAuditLogTestJSON.test_list_instance_usage_audit_logs" /><testcase name="tempest.api.compute.security_groups.test_security_group_rules.SecurityGroupRulesTestJSON.test_security_group_rules_create_with_optional_group_id" /><testcase name="tempest.api.compute.images.test_image_metadata.ImagesMetadataTestJSON.test_set_image_metadata" /><testcase name="tempest.api.image.v1.test_images_negative.CreateDeleteImagesNegativeTest.test_delete_image_blank_id" /><testcase name="tempest.api.network.test_routers.RoutersTest.test_update_delete_extra_route" /><testcase name="tempest.api.compute.servers.test_servers_negative.ServersNegativeTestJSON.test_stop_non_existent_server" /><testcase name="tempest.api.network.test_networks.BulkNetworkOpsIpV6Test.test_bulk_create_delete_subnet" /><testcase name="tempest.api.identity.admin.v2.test_tenant_negative.TenantsNegativeTestJSON.test_create_tenant_by_unauthorized_user" /><testcase name="tempest.api.network.test_networks.NetworksIpV6TestAttrs.test_create_delete_subnet_with_gw_and_allocation_pools" /><testcase name="tempest.api.network.test_networks.NetworksIpV6Test.test_create_delete_subnet_with_host_routes_and_dns_nameservers" /><testcase name="tempest.api.identity.admin.v2.test_endpoints.EndPointsTestJSON.test_create_list_delete_endpoint" /><testcase name="tempest.api.network.test_ports.PortsTestJSON.test_create_update_delete_port" /><testcase name="tempest.api.compute.servers.test_disk_config.ServerDiskConfigTestJSON.test_rebuild_server_with_manual_disk_config" /><testcase name="tempest.api.compute.flavors.test_flavors.FlavorsV2TestJSON.test_list_flavors_detailed_limit_results" /><testcase name="tempest.api.identity.admin.v2.test_users.UsersTestJSON.test_list_users_for_tenant" /><testcase name="tempest.api.compute.servers.test_multiple_create_negative.MultipleCreateNegativeTestJSON.test_min_count_non_integer" /><testcase name="tempest.api.identity.admin.v3.test_projects_negative.ProjectsNegativeTestJSON.test_project_delete_by_unauthorized_user" /><testcase name="tempest.api.compute.test_quotas.QuotasTestJSON.test_compare_tenant_quotas_with_default_quotas" /><testcase name="tempest.api.image.v2.test_images_member.ImagesMemberTest.test_image_share_reject" /><testcase name="tempest.api.identity.admin.v3.test_domains.DefaultDomainTestJSON.test_default_domain_exists" /><testcase name="tempest.api.network.admin.test_quotas.QuotasTest.test_quotas" /><testcase name="tempest.api.identity.admin.v2.test_users_negative.UsersNegativeTestJSON.test_delete_non_existent_user" /><testcase name="tempest.api.compute.admin.test_flavors_extra_specs_negative.FlavorsExtraSpecsNegativeTestJSON.test_flavor_non_admin_update_specific_key" /><testcase name="tempest.api.compute.admin.test_hosts.HostsAdminTestJSON.test_list_hosts_with_a_blank_zone" /><testcase name="tempest.api.network.test_networks.BulkNetworkOpsTest.test_bulk_create_delete_subnet" /><testcase name="tempest.api.identity.admin.v2.test_users_negative.UsersNegativeTestJSON.test_update_user_request_without_a_token" /><testcase name="tempest.api.compute.images.test_image_metadata.ImagesMetadataTestJSON.test_delete_image_metadata_item" /><testcase name="tempest.api.network.test_networks.NetworksIpV6Test.test_list_networks_fields" /><testcase name="tempest.api.network.test_routers_negative.RoutersNegativeIpV6Test.test_delete_non_existent_router_returns_404" /><testcase name="tempest.api.compute.admin.test_availability_zone.AZAdminV2TestJSON.test_get_availability_zone_list" /><testcase name="tempest.api.network.test_security_groups_negative.NegativeSecGroupTest.test_delete_non_existent_security_group" /><testcase name="tempest.api.compute.servers.test_servers.ServersTestJSON.test_update_access_server_address" /><testcase name="tempest.api.compute.servers.test_list_server_filters.ListServerFiltersTestJSON.test_list_servers_filter_by_server_name" /><testcase name="tempest.api.identity.admin.v2.test_users.UsersTestJSON.test_delete_user" /><testcase name="tempest.api.network.test_routers_negative.RoutersNegativeTest.test_router_add_gateway_net_not_external_returns_400" /><testcase name="tempest.api.identity.admin.v3.test_inherits.InheritsV3TestJSON.test_inherit_assign_list_revoke_user_roles_on_domain" /><testcase name="tempest.api.network.test_networks.NetworksIpV6Test.test_create_delete_subnet_all_attributes" /><testcase name="tempest.api.compute.admin.test_quotas_negative.QuotasAdminNegativeTestJSON.test_create_server_when_instances_quota_is_full" /><testcase name="tempest.api.compute.servers.test_list_server_filters.ListServerFiltersTestJSON.test_list_servers_filtered_by_name_regex" /><testcase name="tempest.api.network.test_security_groups_negative.NegativeSecGroupIPv6Test.test_create_security_group_rule_with_non_existent_remote_groupid" /><testcase name="tempest.api.network.test_ports.PortsIpV6TestJSON.test_update_port_with_two_security_groups_and_extra_attributes" /><testcase name="tempest.api.compute.servers.test_instance_actions_negative.InstanceActionsNegativeTestJSON.test_list_instance_actions_non_existent_server" /><testcase name="tempest.api.identity.admin.v3.test_regions.RegionsTestJSON.test_create_update_get_delete_region" /><testcase name="tempest.api.network.test_networks.NetworksIpV6TestAttrs.test_list_subnets" /><testcase name="tempest.api.network.test_security_groups.SecGroupIPv6Test.test_create_list_update_show_delete_security_group" /><testcase name="tempest.api.compute.keypairs.test_keypairs_negative.KeyPairsNegativeTestJSON.test_create_keypair_invalid_name" /><testcase name="tempest.api.compute.admin.test_flavors_access_negative.FlavorsAccessNegativeTestJSON.test_flavor_access_list_with_public_flavor" /><testcase name="tempest.api.identity.admin.v3.test_domains.DomainsTestJSON.test_list_domains_filter_by_name" /><testcase name="tempest.api.network.test_routers_negative.DvrRoutersNegativeTest.test_router_create_tenant_distributed_returns_forbidden" /><testcase name="tempest.api.compute.images.test_image_metadata_negative.ImagesMetadataTestJSON.test_update_nonexistent_image_metadata" /><testcase name="tempest.api.network.test_routers.RoutersIpV6Test.test_create_router_setting_project_id" /><testcase name="tempest.api.identity.admin.v2.test_users_negative.UsersNegativeTestJSON.test_create_user_with_duplicate_name" /><testcase name="tempest.api.compute.servers.test_disk_config.ServerDiskConfigTestJSON.test_update_server_from_auto_to_manual" /><testcase name="tempest.api.network.test_networks_negative.NetworksNegativeTestJSON.test_show_non_existent_subnet" /><testcase name="tempest.api.compute.servers.test_multiple_create.MultipleCreateTestJSON.test_multiple_create" /><testcase name="tempest.api.compute.servers.test_list_server_filters.ListServerFiltersTestJSON.test_list_servers_detailed_filter_by_flavor" /><testcase name="tempest.api.identity.v2.test_api_discovery.TestApiDiscovery.test_api_version_resources" /><testcase name="tempest.api.network.test_ports.PortsAdminExtendedAttrsTestJSON.test_update_port_binding_ext_attr" /><testcase name="tempest.api.compute.admin.test_flavors_access.FlavorsAccessTestJSON.test_flavor_access_list_with_private_flavor" /><testcase name="tempest.api.network.test_networks.NetworksTest.test_create_delete_subnet_with_host_routes_and_dns_nameservers" /><testcase name="tempest.api.compute.images.test_list_image_filters.ListImageFiltersTestJSON.test_list_images_filter_by_type" /><testcase name="tempest.api.compute.images.test_image_metadata.ImagesMetadataTestJSON.test_list_image_metadata" /><testcase name="tempest.api.compute.admin.test_quotas_negative.QuotasAdminNegativeTestJSON.test_create_server_when_memory_quota_is_full" /><testcase name="tempest.api.identity.admin.v3.test_users.UsersV3TestJSON.test_update_user_password" /><testcase name="tempest.api.compute.servers.test_servers_negative.ServersNegativeTestMultiTenantJSON.test_delete_a_server_of_another_tenant" /><testcase name="tempest.api.identity.admin.v2.test_users_negative.UsersNegativeTestJSON.test_authentication_with_invalid_tenant" /><testcase name="tempest.api.image.v1.test_images_negative.CreateDeleteImagesNegativeTest.test_register_with_invalid_container_format" /><testcase name="tempest.api.identity.admin.v2.test_roles_negative.RolesNegativeTestJSON.test_create_role_request_without_token" /><testcase name="tempest.api.network.test_dhcp_ipv6.NetworksTestDHCPv6.test_dhcp_stateful_router" /><testcase name="tempest.api.compute.servers.test_servers_negative.ServersNegativeTestJSON.test_resize_server_with_null_flavor" /><testcase name="tempest.api.compute.servers.test_virtual_interfaces_negative.VirtualInterfacesNegativeTestJSON.test_list_virtual_interfaces_invalid_server_id" /><testcase name="tempest.api.compute.security_groups.test_security_groups_negative.SecurityGroupsNegativeTestJSON.test_delete_nonexistent_security_group" /><testcase name="tempest.api.network.test_networks.NetworksIpV6Test.test_show_subnet_fields" /><testcase name="tempest.api.compute.servers.test_instance_actions.InstanceActionsTestJSON.test_list_instance_actions" /><testcase name="tempest.api.identity.v2.test_ec2_credentials.EC2CredentialsTest.test_show_ec2_credential" /><testcase name="tempest.api.compute.servers.test_servers_negative.ServersNegativeTestJSON.test_unpause_non_existent_server" /><testcase name="tempest.api.compute.servers.test_servers_negative.ServersNegativeTestJSON.test_unpause_server_invalid_state" /><testcase name="tempest.api.network.test_networks.NetworksIpV6Test.test_create_list_subnet_with_no_gw64_one_network" /><testcase name="tempest.api.compute.servers.test_server_addresses.ServerAddressesTestJSON.test_list_server_addresses_by_network" /><testcase name="tempest.api.compute.admin.test_aggregates_negative.AggregatesAdminNegativeTestJSON.test_aggregate_create_aggregate_name_length_less_than_1" /><testcase name="tempest.api.network.admin.test_external_network_extension.ExternalNetworksTestJSON.test_list_external_networks" /><testcase name="tempest.api.identity.admin.v2.test_roles_negative.RolesNegativeTestJSON.test_remove_user_role_by_unauthorized_user" /><testcase name="tempest.api.compute.test_quotas.QuotasTestJSON.test_get_quotas" /><testcase name="tempest.api.compute.images.test_image_metadata.ImagesMetadataTestJSON.test_get_image_metadata_item" /><testcase name="tempest.api.network.test_routers.RoutersIpV6Test.test_add_remove_router_interface_with_subnet_id" /><testcase name="tempest.api.network.test_networks.NetworksTest.test_list_subnets" /><testcase name="tempest.api.compute.security_groups.test_security_groups.SecurityGroupsTestJSON.test_security_groups_create_list_delete" /><testcase name="tempest.api.compute.servers.test_disk_config.ServerDiskConfigTestJSON.test_rebuild_server_with_auto_disk_config" /><testcase name="tempest.api.network.test_allowed_address_pair.AllowedAddressPairTestJSON.test_update_port_with_multiple_ip_mac_address_pair" /><testcase name="tempest.api.identity.admin.v2.test_tenants.TenantsTestJSON.test_tenant_create_enabled" /><testcase name="tempest.api.compute.servers.test_server_password.ServerPasswordTestJSON.test_get_server_password" /><testcase name="tempest.api.compute.admin.test_hypervisor.HypervisorAdminTestJSON.test_get_hypervisor_show_details" /><testcase name="tempest.api.compute.admin.test_flavors_access_negative.FlavorsAccessNegativeTestJSON.test_flavor_non_admin_remove" /><testcase name="tempest.api.network.test_networks.NetworksTest.test_list_subnets_fields" /><testcase name="tempest.api.compute.admin.test_aggregates_negative.AggregatesAdminNegativeTestJSON.test_aggregate_list_as_user" /><testcase name="tempest.api.network.test_routers_negative.RoutersNegativeTest.test_router_remove_interface_in_use_returns_409" /><testcase name="tempest.api.network.test_networks.NetworksTest.test_create_delete_subnet_without_gateway" /><testcase name="tempest.api.network.test_security_groups_negative.NegativeSecGroupTest.test_create_security_group_rule_with_non_existent_remote_groupid" /><testcase name="tempest.api.identity.admin.v2.test_users_negative.UsersNegativeTestJSON.test_get_users_by_unauthorized_user" /><testcase name="tempest.api.identity.admin.v3.test_list_users.UsersV3TestJSON.test_list_user_domains" /><testcase name="tempest.api.compute.admin.test_simple_tenant_usage.TenantUsagesTestJSON.test_list_usage_all_tenants" /><testcase name="tempest.api.compute.admin.test_instance_usage_audit_log.InstanceUsageAuditLogTestJSON.test_get_instance_usage_audit_log" /><testcase name="tempest.api.compute.servers.test_multiple_create_negative.MultipleCreateNegativeTestJSON.test_min_count_less_than_one" /><testcase name="tempest.api.compute.servers.test_multiple_create_negative.MultipleCreateNegativeTestJSON.test_max_count_non_integer" /><testcase name="tempest.api.compute.admin.test_hypervisor_negative.HypervisorAdminNegativeTestJSON.test_search_nonexistent_hypervisor" /><testcase name="tempest.api.identity.admin.v3.test_trusts.TrustsV3TestJSON.test_get_trusts_all" /><testcase name="tempest.api.compute.images.test_list_image_filters.ListImageFiltersTestJSON.test_list_images_limit_results" /><testcase name="tempest.api.network.admin.test_agent_management.AgentManagementTestJSON.test_show_agent" /><testcase name="tempest.api.identity.admin.v2.test_roles_negative.RolesNegativeTestJSON.test_assign_user_role_for_non_existent_role" /><testcase name="tempest.api.compute.admin.test_floating_ips_bulk.FloatingIPsBulkAdminTestJSON.test_create_list_delete_floating_ips_bulk" /><testcase name="tempest.api.compute.security_groups.test_security_group_rules_negative.SecurityGroupRulesNegativeTestJSON.test_create_security_group_rule_with_invalid_port_range" /><testcase name="tempest.api.image.v1.test_images.ListImagesTest.test_index_min_size" /><testcase name="tempest.api.identity.admin.v2.test_users.UsersTestJSON.test_update_user_password" /><testcase name="tempest.api.identity.admin.v3.test_roles.RolesV3TestJSON.test_grant_list_revoke_role_to_user_on_domain" /><testcase name="tempest.api.image.v1.test_image_members_negative.ImageMembersNegativeTest.test_delete_member_with_non_existing_image" /><testcase name="tempest.api.identity.admin.v2.test_users_negative.UsersNegativeTestJSON.test_authentication_with_invalid_password" /><testcase name="tempest.api.compute.admin.test_hosts_negative.HostsAdminNegativeTestJSON.test_startup_nonexistent_host" /><testcase name="tempest.api.compute.images.test_list_image_filters.ListImageFiltersTestJSON.test_list_images_filter_by_name" /><testcase name="tempest.api.network.test_security_groups.SecGroupIPv6Test.test_create_security_group_rule_with_remote_group_id" /><testcase name="tempest.api.identity.admin.v3.test_users_negative.UsersNegativeTest.test_authentication_for_disabled_user" /><testcase name="tempest.api.identity.admin.v2.test_users_negative.UsersNegativeTestJSON.test_delete_user_request_without_a_token" /><testcase name="tempest.api.compute.servers.test_server_addresses_negative.ServerAddressesNegativeTestJSON.test_list_server_addresses_invalid_server_id" /><testcase name="tempest.api.compute.admin.test_services.ServicesAdminTestJSON.test_get_service_by_service_and_host_name" /><testcase name="tempest.api.network.test_ports.PortsIpV6TestJSON.test_create_port_in_allowed_allocation_pools" /><testcase name="tempest.api.compute.servers.test_servers_negative.ServersNegativeTestJSON.test_create_numeric_server_name" /><testcase name="tempest.api.compute.servers.test_servers_negative.ServersNegativeTestJSON.test_suspend_server_invalid_state" /><testcase name="tempest.api.network.test_networks.NetworksIpV6Test.test_show_subnet" /><testcase name="tempest.api.compute.servers.test_delete_server.DeleteServersTestJSON.test_delete_server_while_in_suspended_state" /><testcase name="tempest.api.identity.admin.v2.test_tenant_negative.TenantsNegativeTestJSON.test_create_tenant_request_without_token" /><testcase name="tempest.api.network.test_networks_negative.NetworksNegativeTestJSON.test_show_non_existent_network" /><testcase name="tempest.api.network.admin.test_routers_dvr.RoutersTestDVR.test_distributed_router_creation" /><testcase name="tempest.api.network.test_routers.RoutersTest.test_add_multiple_router_interfaces" /><testcase name="tempest.api.identity.admin.v2.test_users.UsersTestJSON.test_user_authentication" /><testcase name="tempest.api.compute.flavors.test_flavors.FlavorsV2TestJSON.test_list_flavors_detailed_filter_by_min_ram" /><testcase name="tempest.api.compute.servers.test_delete_server.DeleteServersTestJSON.test_delete_server_while_in_shelved_state" /><testcase name="tempest.api.identity.v3.test_api_discovery.TestApiDiscovery.test_api_version_resources" /><testcase name="tempest.api.network.test_security_groups_negative.NegativeSecGroupTest.test_create_security_group_rule_with_bad_ethertype" /><testcase name="tempest.api.identity.admin.v2.test_tenants.TenantsTestJSON.test_tenant_update_name" /><testcase name="tempest.api.identity.admin.v3.test_inherits.InheritsV3TestJSON.test_inherit_assign_list_revoke_user_roles_on_project_tree" /><testcase name="tempest.api.compute.images.test_list_image_filters.ListImageFiltersTestJSON.test_list_images_with_detail_filter_by_type" /><testcase name="tempest.api.compute.flavors.test_flavors.FlavorsV2TestJSON.test_list_flavors_detailed_filter_by_min_disk" /><testcase name="tempest.api.network.test_networks.NetworksIpV6TestAttrs.test_create_list_subnet_with_no_gw64_one_network" /><testcase name="tempest.api.compute.images.test_list_image_filters.ListImageFiltersTestJSON.test_list_images_filter_by_changes_since" /><testcase name="tempest.api.network.test_extra_dhcp_options.ExtraDHCPOptionsIpV6TestJSON.test_create_list_port_with_extra_dhcp_options" /><testcase name="tempest.api.network.test_networks.NetworksTest.test_update_subnet_gw_dns_host_routes_dhcp" /><testcase name="tempest.api.identity.v2.test_users.IdentityUsersTest.test_user_update_own_password" /><testcase name="tempest.api.identity.admin.v2.test_tenant_negative.TenantsNegativeTestJSON.test_create_tenants_name_length_over_64" /><testcase name="tempest.api.compute.flavors.test_flavors_negative.FlavorDetailsNegativeTestJSON.test_flavor_details_negative" /><testcase name="tempest.api.identity.admin.v2.test_roles_negative.RolesNegativeTestJSON.test_remove_user_role_non_existent_role" /><testcase name="tempest.api.image.v2.test_images_member.ImagesMemberTest.test_get_image_member_schema" /><testcase name="tempest.api.compute.flavors.test_flavors.FlavorsV2TestJSON.test_list_flavors_filter_by_min_ram" /><testcase name="tempest.api.network.test_routers_negative.RoutersNegativeIpV6Test.test_add_router_interfaces_on_overlapping_subnets_returns_400" /><testcase name="tempest.api.compute.servers.test_servers_negative.ServersNegativeTestJSON.test_create_server_name_length_exceeds_256" /><testcase name="tempest.api.network.test_ports.PortsIpV6TestJSON.test_create_show_delete_port_user_defined_mac" /><testcase name="tempest.api.identity.admin.v3.test_inherits.InheritsV3TestJSON.test_inherit_assign_list_check_revoke_roles_on_domains_group" /><testcase name="tempest.api.network.test_networks.NetworksIpV6Test.test_list_networks" /><testcase name="tempest.api.compute.servers.test_list_server_filters.ListServerFiltersTestJSON.test_list_servers_detailed_limit_results" /><testcase name="tempest.api.network.test_networks.NetworksIpV6Test.test_create_delete_subnet_with_allocation_pools" /><testcase name="tempest.api.compute.admin.test_flavors.FlavorsAdminTestJSON.test_create_list_flavor_without_extra_data" /><testcase name="tempest.api.network.test_security_groups.SecGroupTest.test_create_show_delete_security_group_rule" /><testcase name="tempest.api.compute.admin.test_instance_usage_audit_log_negative.InstanceUsageAuditLogNegativeTestJSON.test_instance_usage_audit_logs_with_nonadmin_user" /><testcase name="tempest.api.network.test_ports.PortsAdminExtendedAttrsTestJSON.test_list_ports_binding_ext_attr" /><testcase name="tempest.api.network.test_routers_negative.RoutersNegativeIpV6Test.test_router_remove_interface_in_use_returns_409" /><testcase name="tempest.api.image.v1.test_image_members_negative.ImageMembersNegativeTest.test_get_image_without_membership" /><testcase name="tempest.api.compute.servers.test_servers_negative.ServersNegativeTestMultiTenantJSON.test_update_server_of_another_tenant" /><testcase name="tempest.api.identity.admin.v3.test_trusts.TrustsV3TestJSON.test_trust_noimpersonate" /><testcase name="tempest.api.network.test_networks.NetworksIpV6TestAttrs.test_create_delete_subnet_all_attributes" /><testcase name="tempest.api.compute.servers.test_servers_negative.ServersNegativeTestJSON.test_update_server_set_empty_name" /><testcase name="tempest.api.network.test_ports.PortsAdminExtendedAttrsIpV6TestJSON.test_update_port_binding_ext_attr" /><testcase name="tempest.api.network.test_routers.RoutersTest.test_update_router_admin_state" /><testcase name="tempest.api.network.admin.test_agent_management.AgentManagementTestJSON.test_update_agent_status" /><testcase name="tempest.api.identity.admin.v3.test_domains.DomainsTestJSON.test_list_domains" /><testcase name="tempest.api.network.test_ports.PortsAdminExtendedAttrsIpV6TestJSON.test_create_port_binding_ext_attr" /><testcase name="tempest.api.identity.admin.v2.test_tenants.TenantsTestJSON.test_tenant_update_desc" /><testcase name="tempest.api.compute.servers.test_list_server_filters.ListServerFiltersTestJSON.test_list_servers_detailed_filter_by_server_status" /><testcase name="tempest.api.network.test_networks.NetworksTest.test_delete_network_with_subnet" /><testcase name="tempest.api.compute.images.test_list_image_filters.ListImageFiltersTestJSON.test_list_images_filter_by_status" /><testcase name="tempest.api.network.admin.test_agent_management.AgentManagementTestJSON.test_list_agent" /><testcase name="tempest.api.identity.admin.v3.test_projects.ProjectsTestJSON.test_project_create_enabled" /><testcase name="tempest.api.image.v2.test_images.ListImagesTest.test_list_images_param_size" /><testcase name="tempest.api.image.v2.test_images.ListImagesTest.test_get_images_schema" /><testcase name="tempest.api.network.test_security_groups_negative.NegativeSecGroupIPv6Test.test_show_non_existent_security_group" /><testcase name="tempest.api.compute.images.test_images.ImagesTestJSON.test_create_image_from_stopped_server" /><testcase name="tempest.api.identity.admin.v2.test_users_negative.UsersNegativeTestJSON.test_authentication_when_tenant_is_disabled" /><testcase name="tempest.api.compute.servers.test_multiple_create.MultipleCreateTestJSON.test_multiple_create_with_reservation_return" /><testcase name="tempest.api.compute.admin.test_agents.AgentsAdminTestJSON.test_list_agents" /><testcase name="tempest.api.network.test_routers_negative.RoutersNegativeIpV6Test.test_update_non_existent_router_returns_404" /><testcase name="tempest.api.compute.servers.test_servers.ServersTestJSON.test_update_server_name" /><testcase name="tempest.api.compute.admin.test_quotas.QuotasAdminTestJSON.test_update_all_quota_resources_for_tenant" /><testcase name="tempest.api.compute.admin.test_flavors.FlavorsAdminTestJSON.test_create_flavor_using_string_ram" /><testcase name="tempest.api.compute.servers.test_availability_zone.AZV2TestJSON.test_get_availability_zone_list_with_non_admin_user" /><testcase name="tempest.api.image.v1.test_images.ListImagesTest.test_index_container_format" /><testcase name="tempest.api.network.test_security_groups.SecGroupTest.test_create_security_group_rule_with_remote_ip_prefix" /><testcase name="tempest.api.network.admin.test_agent_management.AgentManagementTestJSON.test_update_agent_description" /><testcase name="tempest.api.compute.admin.test_aggregates.AggregatesAdminTestJSON.test_aggregate_add_host_list" /><testcase name="tempest.api.identity.admin.v2.test_tenant_negative.TenantsNegativeTestJSON.test_tenant_update_request_without_token" /><testcase name="tempest.api.compute.admin.test_hosts_negative.HostsAdminNegativeTestJSON.test_startup_host_with_non_admin_user" /><testcase name="tempest.api.network.test_versions.NetworksApiDiscovery.test_api_version_resources" /><testcase name="tempest.api.compute.admin.test_aggregates.AggregatesAdminTestJSON.test_aggregate_create_verify_entry_in_list" /><testcase name="tempest.api.compute.admin.test_services_negative.ServicesAdminNegativeTestJSON.test_get_service_by_invalid_params" /><testcase name="tempest.api.compute.servers.test_multiple_create_negative.MultipleCreateNegativeTestJSON.test_max_count_less_than_min_count" /><testcase name="tempest.api.network.test_networks.BulkNetworkOpsIpV6Test.test_bulk_create_delete_network" /><testcase name="tempest.api.compute.test_quotas.QuotasTestJSON.test_get_default_quotas" /><testcase name="tempest.api.compute.admin.test_aggregates_negative.AggregatesAdminNegativeTestJSON.test_aggregate_add_existent_host" /><testcase name="tempest.api.compute.admin.test_hypervisor_negative.HypervisorAdminNegativeTestJSON.test_show_servers_with_non_admin_user" /><testcase name="tempest.api.compute.admin.test_aggregates_negative.AggregatesAdminNegativeTestJSON.test_aggregate_create_aggregate_name_length_exceeds_255" /><testcase name="tempest.api.network.test_networks.NetworksIpV6Test.test_delete_network_with_subnet" /><testcase name="tempest.api.network.test_networks.NetworksIpV6Test.test_create_update_delete_network_subnet" /><testcase name="tempest.api.network.test_security_groups_negative.NegativeSecGroupTest.test_create_security_group_rule_with_non_existent_security_group" /><testcase name="tempest.api.compute.servers.test_list_server_filters.ListServerFiltersTestJSON.test_list_servers_filter_by_image" /><testcase name="tempest.api.network.admin.test_routers_dvr.RoutersTestDVR.test_centralized_router_update_to_dvr" /><testcase name="tempest.api.compute.flavors.test_flavors.FlavorsV2TestJSON.test_list_flavors" /><testcase name="tempest.api.compute.flavors.test_flavors_negative.FlavorsListWithDetailsNegativeTestJSON.test_flavors_list_with_details_negative" /><testcase name="tempest.api.image.v1.test_images_negative.CreateDeleteImagesNegativeTest.test_delete_image_id_is_over_35_character_limit" /><testcase name="tempest.api.network.test_allowed_address_pair.AllowedAddressPairTestJSON.test_update_port_with_address_pair" /><testcase name="tempest.api.compute.servers.test_server_addresses.ServerAddressesTestJSON.test_list_server_addresses" /><testcase name="tempest.api.compute.flavors.test_flavors_negative.FlavorsListWithDetailsNegativeTestJSON.test_flavors_list_with_details_negative" /><testcase name="tempest.api.image.admin.v2.test_images.BasicAdminOperationsImagesTest.test_admin_deactivate_reactivate_image" /><testcase name="tempest.api.identity.admin.v3.test_roles.RolesV3TestJSON.test_grant_list_revoke_role_to_group_on_project" /><testcase name="tempest.api.compute.servers.test_list_servers_negative.ListServersNegativeTestJSON.test_list_servers_by_limits_pass_string" /><testcase name="tempest.api.compute.test_versions.TestVersions.test_get_version_details" /><testcase name="tempest.api.network.test_networks.NetworksIpV6TestAttrs.test_create_delete_stateless_subnet_with_ports" /><testcase name="tempest.api.compute.admin.test_hosts_negative.HostsAdminNegativeTestJSON.test_shutdown_host_with_non_admin_user" /><testcase name="tempest.api.compute.admin.test_services_negative.ServicesAdminNegativeTestJSON.test_list_services_with_non_admin_user" /><testcase name="tempest.api.compute.servers.test_servers.ServersTestJSON.test_create_server_with_admin_password" /><testcase name="tempest.api.network.test_networks.NetworksTest.test_create_delete_subnet_with_dhcp_enabled" /><testcase name="tempest.api.network.test_networks.NetworksIpV6TestAttrs.test_create_delete_subnet_with_dhcp_enabled" /><testcase name="tempest.api.network.test_networks.BulkNetworkOpsTest.test_bulk_create_delete_port" /><testcase name="tempest.api.identity.v2.test_api_discovery.TestApiDiscovery.test_api_media_types" /><testcase name="tempest.api.identity.admin.v3.test_roles.RolesV3TestJSON.test_role_create_update_show_list" /><testcase name="tempest.api.identity.admin.v3.test_projects_negative.ProjectsNegativeTestJSON.test_delete_non_existent_project" /><testcase name="tempest.api.network.test_security_groups.SecGroupTest.test_create_security_group_rule_with_protocol_integer_value" /><testcase name="tempest.api.image.v2.test_images_member.ImagesMemberTest.test_get_private_image" /><testcase name="tempest.api.compute.servers.test_delete_server.DeleteServersTestJSON.test_delete_server_while_in_pause_state" /><testcase name="tempest.api.compute.admin.test_services.ServicesAdminTestJSON.test_list_services" /><testcase name="tempest.api.network.test_ports.PortsIpV6TestJSON.test_list_ports_fields" /><testcase name="tempest.api.compute.flavors.test_flavors.FlavorsV2TestJSON.test_list_flavors_filter_by_min_disk" /><testcase name="tempest.api.network.test_networks.NetworksIpV6TestAttrs.test_show_network" /><testcase name="tempest.api.network.test_ports.PortsTestJSON.test_create_update_port_with_second_ip" /><testcase name="tempest.api.network.test_ports.PortsTestJSON.test_update_port_with_security_group_and_extra_attributes" /><testcase name="tempest.api.identity.admin.v2.test_users_negative.UsersNegativeTestJSON.test_create_user_with_empty_name" /><testcase name="tempest.api.network.test_networks.NetworksIpV6Test.test_list_subnets_fields" /><testcase name="tempest.api.compute.admin.test_hosts.HostsAdminTestJSON.test_list_hosts_with_zone" /><testcase name="tempest.api.identity.admin.v2.test_users_negative.UsersNegativeTestJSON.test_create_user_for_non_existent_tenant" /><testcase name="tempest.api.compute.admin.test_hypervisor.HypervisorAdminTestJSON.test_get_hypervisor_stats" /><testcase name="tempest.api.compute.images.test_image_metadata.ImagesMetadataTestJSON.test_update_image_metadata" /><testcase name="tempest.api.compute.admin.test_flavors_access_negative.FlavorsAccessNegativeTestJSON.test_remove_flavor_access_not_found" /><testcase name="tempest.api.network.admin.test_dhcp_agent_scheduler.DHCPAgentSchedulersTestJSON.test_list_networks_hosted_by_one_dhcp" /><testcase name="tempest.api.network.test_allowed_address_pair.AllowedAddressPairTestJSON.test_update_port_with_cidr_address_pair" /><testcase name="tempest.api.compute.admin.test_hosts_negative.HostsAdminNegativeTestJSON.test_show_host_detail_with_nonexistent_hostname" /><testcase name="tempest.api.compute.admin.test_hypervisor_negative.HypervisorAdminNegativeTestJSON.test_show_nonexistent_hypervisor" /><testcase name="tempest.api.compute.flavors.test_flavors.FlavorsV2TestJSON.test_list_flavors_detailed_using_marker" /><testcase name="tempest.api.network.test_allowed_address_pair.AllowedAddressPairIpV6TestJSON.test_update_port_with_address_pair" /><testcase name="tempest.api.identity.admin.v2.test_roles_negative.RolesNegativeTestJSON.test_assign_user_role_for_non_existent_tenant" /><testcase name="tempest.api.compute.servers.test_servers_negative.ServersNegativeTestJSON.test_delete_server_pass_id_exceeding_length_limit" /><testcase name="tempest.api.network.admin.test_l3_agent_scheduler.L3AgentSchedulerTestJSON.test_list_routers_on_l3_agent" /><testcase name="tempest.api.compute.admin.test_aggregates_negative.AggregatesAdminNegativeTestJSON.test_aggregate_add_non_exist_host" /><testcase name="tempest.api.compute.admin.test_flavors.FlavorsAdminTestJSON.test_create_flavor_with_int_id" /><testcase name="tempest.api.image.v2.test_images_negative.ImagesNegativeTest.test_get_delete_deleted_image" /><testcase name="tempest.api.compute.admin.test_aggregates_negative.AggregatesAdminNegativeTestJSON.test_aggregate_remove_host_as_user" /><testcase name="tempest.api.network.test_networks.NetworksIpV6TestAttrs.test_update_subnet_gw_dns_host_routes_dhcp" /><testcase name="tempest.api.compute.keypairs.test_keypairs.KeyPairsV2TestJSON.test_get_keypair_detail" /><testcase name="tempest.api.network.test_security_groups_negative.NegativeSecGroupIPv6Test.test_create_security_group_rule_with_bad_ethertype" /><testcase name="tempest.api.network.test_networks.BulkNetworkOpsTest.test_bulk_create_delete_network" /><testcase name="tempest.api.compute.admin.test_aggregates_negative.AggregatesAdminNegativeTestJSON.test_aggregate_delete_with_invalid_id" /><testcase name="tempest.api.network.test_ports.PortsTestJSON.test_show_port_fields" /><testcase name="tempest.api.compute.keypairs.test_keypairs.KeyPairsV2TestJSON.test_keypair_create_with_pub_key" /><testcase name="tempest.api.image.v1.test_image_members.ImageMembersTest.test_add_image_member" /><testcase name="tempest.api.image.v1.test_image_members.ImageMembersTest.test_get_shared_images" /><testcase name="tempest.api.image.v1.test_images.CreateRegisterImagesTest.test_register_image_with_min_ram" /><testcase name="tempest.api.compute.admin.test_hypervisor_negative.HypervisorAdminNegativeTestJSON.test_get_hypervisor_list_details_with_non_admin_user" /><testcase name="tempest.api.compute.servers.test_disk_config.ServerDiskConfigTestJSON.test_resize_server_from_auto_to_manual" /><testcase name="tempest.api.identity.admin.v3.test_groups.GroupsV3TestJSON.test_group_update_with_few_fields" /><testcase name="tempest.api.image.v1.test_images.ListImagesTest.test_index_name" /><testcase name="tempest.api.identity.admin.v3.test_services.ServicesTestJSON.test_create_service_without_description" /><testcase name="tempest.api.compute.security_groups.test_security_groups_negative.SecurityGroupsNegativeTestJSON.test_security_group_get_nonexistent_group" /><testcase name="tempest.api.image.v1.test_images.UpdateImageMetaTest.test_update_image_metadata" /><testcase name="tempest.api.network.test_dhcp_ipv6.NetworksTestDHCPv6.test_dhcpv6_stateless_no_ra_no_dhcp" /><testcase name="tempest.api.network.test_ports.PortsAdminExtendedAttrsTestJSON.test_create_port_binding_ext_attr" /><testcase name="tempest.api.network.test_ports.PortsIpV6TestJSON.test_create_update_delete_port" /><testcase name="tempest.api.identity.v2.test_api_discovery.TestApiDiscovery.test_api_version_statuses" /><testcase name="tempest.api.identity.admin.v3.test_domains_negative.DomainsNegativeTestJSON.test_delete_non_existent_domain" /><testcase name="tempest.api.identity.admin.v2.test_users_negative.UsersNegativeTestJSON.test_update_user_by_unauthorized_user" /><testcase name="tempest.api.compute.images.test_list_image_filters.ListImageFiltersTestJSON.test_list_images_with_detail_limit_results" /><testcase name="tempest.api.network.test_extra_dhcp_options.ExtraDHCPOptionsTestJSON.test_create_list_port_with_extra_dhcp_options" /><testcase name="tempest.api.image.v1.test_images.CreateRegisterImagesTest.test_register_remote_image" /><testcase name="tempest.api.identity.admin.v2.test_tenants.TenantsTestJSON.test_tenant_list_delete" /><testcase name="tempest.api.image.v2.test_images.ListImagesTest.test_list_images_param_disk_format" /><testcase name="tempest.api.identity.admin.v2.test_roles.RolesTestJSON.test_role_create_delete" /><testcase name="tempest.api.compute.images.test_image_metadata_negative.ImagesMetadataTestJSON.test_get_nonexistent_image_metadata_item" /><testcase name="tempest.api.image.v2.test_images_member.ImagesMemberTest.test_image_share_accept" /><testcase name="tempest.api.image.v2.test_images_negative.ImagesNegativeTest.test_get_non_existent_image" /><testcase name="tempest.api.image.v2.test_images_metadefs_resource_types.MetadataResourceTypesTest.test_basic_meta_def_resource_type_association" /><testcase name="tempest.api.identity.admin.v3.test_projects.ProjectsTestJSON.test_project_create_with_description" /><testcase name="tempest.api.network.test_networks.NetworksIpV6TestAttrs.test_create_delete_subnet_with_v6_attributes_stateful" /><testcase name="tempest.api.network.test_routers.RoutersIpV6Test.test_update_router_unset_gateway" /><testcase name="tempest.api.network.test_routers_negative.RoutersNegativeIpV6Test.test_router_add_gateway_invalid_network_returns_404" /><testcase name="tempest.api.identity.admin.v2.test_roles_negative.RolesNegativeTestJSON.test_role_create_duplicate" /><testcase name="tempest.api.identity.admin.v3.test_regions.RegionsTestJSON.test_list_regions" /><testcase name="tempest.api.compute.servers.test_server_addresses_negative.ServerAddressesNegativeTestJSON.test_list_server_addresses_by_network_neg" /><testcase name="tempest.api.compute.servers.test_server_group.ServerGroupTestJSON.test_create_delete_server_group_with_affinity_policy" /><testcase name="tempest.api.network.admin.test_external_network_extension.ExternalNetworksTestJSON.test_update_external_network" /><testcase name="tempest.api.network.test_ports.PortsIpV6TestJSON.test_create_bulk_port" /><testcase name="tempest.api.network.test_subnetpools_extensions.SubnetPoolsTestJSON.test_create_list_show_update_delete_subnetpools" /><testcase name="tempest.api.network.test_networks.NetworksTest.test_create_delete_subnet_all_attributes" /><testcase name="tempest.api.compute.admin.test_simple_tenant_usage.TenantUsagesTestJSON.test_get_usage_tenant" /><testcase name="tempest.api.network.test_security_groups_negative.NegativeSecGroupIPv6Test.test_create_security_group_rule_wrong_ip_prefix_version" /><testcase name="tempest.api.network.test_security_groups.SecGroupIPv6Test.test_create_show_delete_security_group_rule" /><testcase name="tempest.api.identity.admin.v2.test_services.ServicesTestJSON.test_list_services" /><testcase name="tempest.api.compute.admin.test_hypervisor_negative.HypervisorAdminNegativeTestJSON.test_get_nonexistent_hypervisor_uptime" /><testcase name="tempest.api.image.v2.test_images.ListImagesTest.test_list_images_param_status" /><testcase name="tempest.api.compute.admin.test_flavors_extra_specs_negative.FlavorsExtraSpecsNegativeTestJSON.test_flavor_non_admin_set_keys" /><testcase name="tempest.api.identity.admin.v2.test_services.ServicesTestJSON.test_create_service_without_description" /><testcase name="tempest.api.identity.admin.v3.test_policies.PoliciesTestJSON.test_list_policies" /><testcase name="tempest.api.network.test_security_groups_negative.NegativeSecGroupIPv6Test.test_delete_non_existent_security_group" /><testcase name="tempest.api.image.v2.test_images.ListImagesTest.test_list_no_params" /><testcase name="tempest.api.compute.images.test_list_image_filters.ListImageFiltersTestJSON.test_list_images_with_detail_filter_by_status" /><testcase name="tempest.api.network.test_dhcp_ipv6.NetworksTestDHCPv6.test_dhcpv6_stateless_eui64" /><testcase name="tempest.api.compute.flavors.test_flavors_negative.FlavorsListWithDetailsNegativeTestJSON.test_flavors_list_with_details_negative" /><testcase name="tempest.api.compute.admin.test_aggregates.AggregatesAdminTestJSON.test_aggregate_add_remove_host" /><testcase name="tempest.api.compute.admin.test_servers.ServersAdminTestJSON.test_list_servers_filter_by_exist_host" /><testcase name="tempest.api.network.test_networks.NetworksIpV6TestAttrs.test_create_delete_subnet_with_allocation_pools" /><testcase name="tempest.api.network.test_networks_negative.NetworksNegativeTestJSON.test_delete_non_existent_network" /><testcase name="tempest.api.identity.admin.v2.test_tenant_negative.TenantsNegativeTestJSON.test_list_tenants_by_unauthorized_user" /><testcase name="tempest.api.compute.servers.test_servers_negative.ServersNegativeTestJSON.test_resize_nonexistent_server" /><testcase name="tempest.api.compute.admin.test_quotas_negative.QuotasAdminNegativeTestJSON.test_create_server_when_cpu_quota_is_full" /><testcase name="tempest.api.network.test_extensions.ExtensionsTestJSON.test_list_show_extensions" /><testcase name="tempest.api.compute.admin.test_hypervisor.HypervisorAdminTestJSON.test_get_hypervisor_list_details" /><testcase name="tempest.api.image.v1.test_images.CreateRegisterImagesTest.test_register_http_image" /><testcase name="tempest.api.network.test_routers_negative.RoutersNegativeTest.test_delete_non_existent_router_returns_404" /><testcase name="tempest.api.network.test_security_groups_negative.NegativeSecGroupIPv6Test.test_create_security_group_rule_with_non_existent_security_group" /><testcase name="tempest.api.network.test_networks_negative.NetworksNegativeTestJSON.test_update_non_existent_port" /><testcase name="tempest.api.compute.flavors.test_flavors.FlavorsV2TestJSON.test_get_flavor" /><testcase name="tempest.api.identity.admin.v2.test_roles_negative.RolesNegativeTestJSON.test_delete_role_request_without_token" /><testcase name="tempest.api.compute.servers.test_list_server_filters.ListServerFiltersTestJSON.test_list_servers_filter_by_shutoff_status" /><testcase name="tempest.api.compute.servers.test_list_servers_negative.ListServersNegativeTestJSON.test_list_servers_by_limits_pass_negative_value" /><testcase name="tempest.api.network.test_security_groups_negative.NegativeSecGroupTest.test_create_security_group_rule_with_bad_remote_ip_prefix" /><testcase name="tempest.api.compute.admin.test_flavors.FlavorsAdminTestJSON.test_list_public_flavor_with_other_user" /><testcase name="tempest.api.compute.admin.test_servers_negative.ServersAdminNegativeTestJSON.test_migrate_non_existent_server" /><testcase name="tempest.api.image.v2.test_images.ListImagesTest.test_list_images_param_visibility" /><testcase name="tempest.api.compute.servers.test_server_password.ServerPasswordTestJSON.test_delete_server_password" /><testcase name="tempest.api.compute.admin.test_security_groups.SecurityGroupsTestAdminJSON.test_list_security_groups_list_all_tenants_filter" /><testcase name="tempest.api.compute.admin.test_simple_tenant_usage_negative.TenantUsagesNegativeTestJSON.test_list_usage_all_tenants_with_non_admin_user" /><testcase name="tempest.api.network.test_routers.RoutersIpV6Test.test_update_delete_extra_route" /><testcase name="tempest.api.identity.v2.test_ec2_credentials.EC2CredentialsTest.test_list_ec2_credentials" /><testcase name="tempest.api.compute.servers.test_delete_server.DeleteServersAdminTestJSON.test_admin_delete_servers_of_others" /><testcase name="tempest.api.compute.admin.test_aggregates.AggregatesAdminTestJSON.test_aggregate_add_host_create_server_with_az" /><testcase name="tempest.api.compute.servers.test_server_group.ServerGroupTestJSON.test_create_delete_multiple_server_groups_with_same_name_policy" /><testcase name="tempest.api.compute.servers.test_server_metadata_negative.ServerMetadataNegativeTestJSON.test_server_metadata_non_existent_server" /><testcase name="tempest.api.identity.admin.v2.test_tokens.TokensTestJSON.test_rescope_token" /><testcase name="tempest.api.identity.admin.v2.test_roles.RolesTestJSON.test_assign_user_role" /><testcase name="tempest.api.network.test_dhcp_ipv6.NetworksTestDHCPv6.test_dhcpv6_invalid_options" /><testcase name="tempest.api.network.test_networks.NetworksTest.test_create_update_delete_network_subnet" /><testcase name="tempest.api.network.test_networks.NetworksTest.test_show_network_fields" /><testcase name="tempest.api.compute.images.test_images_negative.ImagesNegativeTestJSON.test_delete_image_negative_image_id" /><testcase name="tempest.api.compute.servers.test_servers_negative.ServersNegativeTestJSON.test_reboot_non_existent_server" /><testcase name="tempest.api.compute.servers.test_servers_negative.ServersNegativeTestJSON.test_create_with_invalid_flavor" /><testcase name="tempest.api.image.v1.test_images.ListImagesTest.test_index_no_params" /><testcase name="tempest.api.compute.servers.test_servers_negative.ServersNegativeTestJSON.test_delete_server_pass_negative_id" /><testcase name="tempest.api.identity.admin.v3.test_regions.RegionsTestJSON.test_list_regions_filter_by_parent_region_id" /><testcase name="tempest.api.compute.servers.test_servers_negative.ServersNegativeTestJSON.test_shelve_non_existent_server" /><testcase name="tempest.api.compute.servers.test_server_group.ServerGroupTestJSON.test_list_server_groups" /><testcase name="tempest.api.compute.servers.test_servers_negative.ServersNegativeTestJSON.test_get_console_output_of_non_existent_server" /><testcase name="tempest.api.compute.admin.test_hosts_negative.HostsAdminNegativeTestJSON.test_update_host_with_invalid_maintenance_mode" /><testcase name="tempest.api.identity.admin.v2.test_tenant_negative.TenantsNegativeTestJSON.test_delete_non_existent_tenant" /><testcase name="tempest.api.identity.admin.v3.test_credentials.CredentialsTestJSON.test_credentials_list_delete" /><testcase name="tempest.api.network.test_ports.PortsIpV6TestJSON.test_show_port_fields" /><testcase name="tempest.api.compute.servers.test_servers_negative.ServersNegativeTestJSON.test_delete_non_existent_server" /><testcase name="tempest.api.compute.images.test_image_metadata_negative.ImagesMetadataTestJSON.test_set_nonexistent_image_metadata" /><testcase name="tempest.api.compute.images.test_image_metadata_negative.ImagesMetadataTestJSON.test_set_nonexistent_image_metadata_item" /><testcase name="tempest.api.image.v2.test_images_tags_negative.ImagesTagsNegativeTest.test_delete_non_existing_tag" /><testcase name="tempest.api.compute.admin.test_hypervisor.HypervisorAdminTestJSON.test_get_hypervisor_list" /><testcase name="tempest.api.identity.admin.v2.test_users.UsersTestJSON.test_authentication_request_without_token" /><testcase name="tempest.api.identity.admin.v2.test_tenants.TenantsTestJSON.test_tenant_create_with_description" /><testcase name="tempest.api.compute.admin.test_servers.ServersAdminTestJSON.test_reset_network_inject_network_info" /><testcase name="tempest.api.compute.admin.test_services.ServicesAdminTestJSON.test_get_service_by_host_name" /><testcase name="tempest.api.compute.servers.test_servers_negative.ServersNegativeTestJSON.test_create_with_invalid_network_uuid" /><testcase name="tempest.api.network.test_networks.NetworksTest.test_show_subnet_fields" /><testcase name="tempest.api.compute.admin.test_servers_negative.ServersAdminNegativeTestJSON.test_resize_server_using_overlimit_vcpus" /><testcase name="tempest.api.compute.servers.test_list_servers_negative.ListServersNegativeTestJSON.test_list_servers_status_non_existing" /><testcase name="tempest.api.compute.admin.test_hypervisor_negative.HypervisorAdminNegativeTestJSON.test_show_hypervisor_with_non_admin_user" /><testcase name="tempest.api.network.admin.test_negative_quotas.QuotasNegativeTest.test_network_quota_exceeding" /><testcase name="tempest.api.compute.images.test_list_image_filters.ListImageFiltersTestJSON.test_list_images_with_detail_filter_by_server_ref" /><testcase name="tempest.api.compute.security_groups.test_security_group_rules_negative.SecurityGroupRulesNegativeTestJSON.test_create_security_group_rule_with_non_existent_id" /><testcase name="tempest.api.compute.admin.test_quotas.QuotaClassesAdminTestJSON.test_update_default_quotas" /><testcase name="tempest.api.identity.admin.v3.test_services.ServicesTestJSON.test_list_services" /><testcase name="tempest.api.identity.admin.v2.test_users_negative.UsersNegativeTestJSON.test_update_user_for_non_existent_user" /><testcase name="tempest.api.compute.admin.test_hosts_negative.HostsAdminNegativeTestJSON.test_reboot_host_with_non_admin_user" /><testcase name="tempest.api.compute.admin.test_hypervisor.HypervisorAdminTestJSON.test_get_hypervisor_show_servers" /><testcase name="tempest.api.identity.admin.v3.test_list_projects.ListProjectsTestJSON.test_list_projects" /><testcase name="tempest.api.network.test_networks.NetworksIpV6Test.test_show_network" /><testcase name="tempest.api.image.v2.test_images_member.ImagesMemberTest.test_remove_image_member" /><testcase name="tempest.api.compute.servers.test_list_servers_negative.ListServersNegativeTestJSON.test_list_servers_with_a_deleted_server" /><testcase name="tempest.api.image.v1.test_images_negative.CreateDeleteImagesNegativeTest.test_register_with_invalid_disk_format" /><testcase name="tempest.api.compute.servers.test_server_metadata.ServerMetadataTestJSON.test_delete_server_metadata_item" /><testcase name="tempest.api.network.test_ports.PortsTestJSON.test_create_show_delete_port_user_defined_mac" /><testcase name="tempest.api.image.v2.test_images.ListImagesTest.test_list_images_param_limit" /><testcase name="tempest.api.network.test_networks.NetworksIpV6TestAttrs.test_show_subnet_fields" /><testcase name="tempest.api.identity.admin.v3.test_list_users.UsersV3TestJSON.test_list_users_with_not_enabled" /></testsuite></testsuites>